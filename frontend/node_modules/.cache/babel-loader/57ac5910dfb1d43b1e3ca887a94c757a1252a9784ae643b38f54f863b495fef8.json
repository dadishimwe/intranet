{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"expenses-container\"\n};\nconst _hoisted_2 = {\n  class: \"page-header\"\n};\nconst _hoisted_3 = {\n  class: \"page-actions\"\n};\nconst _hoisted_4 = {\n  class: \"grid expense-stats\"\n};\nconst _hoisted_5 = {\n  class: \"col-12 md:col-6 lg:col-3\"\n};\nconst _hoisted_6 = {\n  class: \"card summary-card\"\n};\nconst _hoisted_7 = {\n  class: \"summary-value\"\n};\nconst _hoisted_8 = {\n  class: \"summary-count\"\n};\nconst _hoisted_9 = {\n  class: \"col-12 md:col-6 lg:col-3\"\n};\nconst _hoisted_10 = {\n  class: \"card summary-card\"\n};\nconst _hoisted_11 = {\n  class: \"summary-value\"\n};\nconst _hoisted_12 = {\n  class: \"summary-count\"\n};\nconst _hoisted_13 = {\n  class: \"col-12 md:col-6 lg:col-3\"\n};\nconst _hoisted_14 = {\n  class: \"card summary-card\"\n};\nconst _hoisted_15 = {\n  class: \"summary-value\"\n};\nconst _hoisted_16 = {\n  class: \"summary-count\"\n};\nconst _hoisted_17 = {\n  class: \"col-12 md:col-6 lg:col-3\"\n};\nconst _hoisted_18 = {\n  class: \"card summary-card\"\n};\nconst _hoisted_19 = {\n  class: \"summary-value\"\n};\nconst _hoisted_20 = {\n  class: \"summary-count\"\n};\nconst _hoisted_21 = {\n  class: \"card\"\n};\nconst _hoisted_22 = {\n  class: \"expense-filters\"\n};\nconst _hoisted_23 = {\n  class: \"grid\"\n};\nconst _hoisted_24 = {\n  class: \"col-12 md:col-3\"\n};\nconst _hoisted_25 = {\n  class: \"p-input-icon-left w-full\"\n};\nconst _hoisted_26 = {\n  class: \"col-12 md:col-3\"\n};\nconst _hoisted_27 = {\n  class: \"col-12 md:col-3\"\n};\nconst _hoisted_28 = {\n  class: \"col-12 md:col-3\"\n};\nconst _hoisted_29 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_30 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_31 = {\n  class: \"pagination-controls\"\n};\nconst _hoisted_32 = {\n  class: \"pagination-summary\"\n};\nconst _hoisted_33 = {\n  class: \"expense-form\"\n};\nconst _hoisted_34 = {\n  class: \"field\"\n};\nconst _hoisted_35 = {\n  class: \"p-inputgroup\"\n};\nconst _hoisted_36 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_37 = {\n  class: \"field\"\n};\nconst _hoisted_38 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_39 = {\n  class: \"field\"\n};\nconst _hoisted_40 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_41 = {\n  class: \"field\"\n};\nconst _hoisted_42 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_43 = {\n  class: \"field\"\n};\nconst _hoisted_44 = {\n  class: \"p-fileupload-content\"\n};\nconst _hoisted_45 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_46 = {\n  key: 1,\n  class: \"receipt-preview\"\n};\nconst _hoisted_47 = {\n  class: \"receipt-preview-info\"\n};\nconst _hoisted_48 = {\n  key: 0,\n  class: \"pi pi-file-pdf\"\n};\nconst _hoisted_49 = {\n  key: 1,\n  class: \"pi pi-image\"\n};\nconst _hoisted_50 = {\n  key: 0,\n  class: \"expense-details\"\n};\nconst _hoisted_51 = {\n  class: \"expense-header\"\n};\nconst _hoisted_52 = {\n  class: \"expense-amount\"\n};\nconst _hoisted_53 = {\n  class: \"amount-value\"\n};\nconst _hoisted_54 = {\n  class: \"currency\"\n};\nconst _hoisted_55 = {\n  class: \"expense-info-grid\"\n};\nconst _hoisted_56 = {\n  class: \"info-group\"\n};\nconst _hoisted_57 = {\n  class: \"info-value\"\n};\nconst _hoisted_58 = {\n  class: \"info-group\"\n};\nconst _hoisted_59 = {\n  class: \"info-value\"\n};\nconst _hoisted_60 = {\n  key: 0,\n  class: \"info-group\"\n};\nconst _hoisted_61 = {\n  class: \"info-value\"\n};\nconst _hoisted_62 = {\n  class: \"info-group\"\n};\nconst _hoisted_63 = {\n  class: \"info-value\"\n};\nconst _hoisted_64 = {\n  class: \"description-section\"\n};\nconst _hoisted_65 = {\n  class: \"description-content\"\n};\nconst _hoisted_66 = {\n  key: 0,\n  class: \"receipt-section\"\n};\nconst _hoisted_67 = {\n  class: \"receipt-actions\"\n};\nconst _hoisted_68 = {\n  key: 1,\n  class: \"approvals-section\"\n};\nconst _hoisted_69 = {\n  class: \"approval-item\"\n};\nconst _hoisted_70 = {\n  class: \"approval-date\"\n};\nconst _hoisted_71 = {\n  class: \"approval-content\"\n};\nconst _hoisted_72 = {\n  class: \"approval-description\"\n};\nconst _hoisted_73 = {\n  class: \"approval-user\"\n};\nconst _hoisted_74 = {\n  key: 0,\n  class: \"approval-comments\"\n};\nconst _hoisted_75 = {\n  key: 2,\n  class: \"expense-actions\"\n};\nconst _hoisted_76 = {\n  class: \"expense-workflow-buttons\"\n};\nconst _hoisted_77 = {\n  key: 1,\n  class: \"review-buttons\"\n};\nconst _hoisted_78 = {\n  class: \"reject-form\"\n};\nconst _hoisted_79 = {\n  class: \"field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Dropdown = _resolveComponent(\"Dropdown\");\n  const _component_Calendar = _resolveComponent(\"Calendar\");\n  const _component_ProgressSpinner = _resolveComponent(\"ProgressSpinner\");\n  const _component_Column = _resolveComponent(\"Column\");\n  const _component_Tag = _resolveComponent(\"Tag\");\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n  const _component_InputNumber = _resolveComponent(\"InputNumber\");\n  const _component_Textarea = _resolveComponent(\"Textarea\");\n  const _component_FileUpload = _resolveComponent(\"FileUpload\");\n  const _component_Dialog = _resolveComponent(\"Dialog\");\n  const _component_Divider = _resolveComponent(\"Divider\");\n  const _component_Timeline = _resolveComponent(\"Timeline\");\n  const _component_ConfirmDialog = _resolveComponent(\"ConfirmDialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[16] || (_cache[16] = _createElementVNode(\"h1\", {\n    class: \"page-title\"\n  }, \"Expenses\", -1)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_Button, {\n    label: \"New Expense\",\n    icon: \"pi pi-plus\",\n    onClick: _ctx.openNewExpenseAppDialog,\n    class: \"p-button-primary\"\n  }, null, 8, [\"onClick\"])])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n    class: \"summary-title\"\n  }, \"Draft\", -1)), _createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.formatCurrency($setup.stats.draft?.total_amount || 0)), 1), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.stats.draft?.count || 0) + \" expenses\", 1)])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[18] || (_cache[18] = _createElementVNode(\"div\", {\n    class: \"summary-title\"\n  }, \"Submitted\", -1)), _createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.formatCurrency($setup.stats.submitted?.total_amount || 0)), 1), _createElementVNode(\"div\", _hoisted_12, _toDisplayString($setup.stats.submitted?.count || 0) + \" expenses\", 1)])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"summary-title\"\n  }, \"Approved\", -1)), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($setup.formatCurrency($setup.stats.approved?.total_amount || 0)), 1), _createElementVNode(\"div\", _hoisted_16, _toDisplayString($setup.stats.approved?.count || 0) + \" expenses\", 1)])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_cache[20] || (_cache[20] = _createElementVNode(\"div\", {\n    class: \"summary-title\"\n  }, \"Paid\", -1)), _createElementVNode(\"div\", _hoisted_19, _toDisplayString($setup.formatCurrency($setup.stats.paid?.total_amount || 0)), 1), _createElementVNode(\"div\", _hoisted_20, _toDisplayString($setup.stats.paid?.count || 0) + \" expenses\", 1)])])]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"span\", _hoisted_25, [_cache[21] || (_cache[21] = _createElementVNode(\"i\", {\n    class: \"pi pi-search\"\n  }, null, -1)), _createVNode(_component_InputText, {\n    modelValue: $setup.filters.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.search = $event),\n    placeholder: \"Search expenses\",\n    class: \"w-full\",\n    onInput: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"onInput\"])])]), _createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_Dropdown, {\n    modelValue: $setup.filters.status,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.status = $event),\n    options: $setup.statusOptions,\n    optionLabel: \"label\",\n    optionValue: \"value\",\n    placeholder: \"Status\",\n    class: \"w-full\",\n    onChange: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"options\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_27, [_createVNode(_component_Dropdown, {\n    modelValue: $setup.filters.category,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.category = $event),\n    options: $setup.categoryOptions,\n    optionLabel: \"name\",\n    optionValue: \"name\",\n    placeholder: \"Category\",\n    class: \"w-full\",\n    onChange: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"options\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_28, [_createVNode(_component_Calendar, {\n    modelValue: $setup.filters.dateRange,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.dateRange = $event),\n    selectionMode: \"range\",\n    placeholder: \"Date range\",\n    class: \"w-full\",\n    onDateSelect: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"onDateSelect\"])])])]), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createVNode(_component_ProgressSpinner)])) : (_openBlock(), _createBlock(_component_DataTable, {\n    key: 1,\n    value: $setup.expenses,\n    paginator: true,\n    rows: 10,\n    rowsPerPageOptions: [10, 25, 50],\n    tableStyle: \"min-width: 50rem\",\n    paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n    currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} expenses\",\n    responsiveLayout: \"scroll\",\n    loading: $setup.tableLoading,\n    sortField: \"date\",\n    sortOrder: -1,\n    selection: $setup.selectedExpenses,\n    \"onUpdate:selection\": _cache[4] || (_cache[4] = $event => $setup.selectedExpenses = $event),\n    dataKey: \"id\",\n    onRowSelect: $setup.onExpenseSelect,\n    onRowUnselect: $setup.onExpenseUnselect,\n    class: \"expense-table\"\n  }, {\n    empty: _withCtx(() => _cache[22] || (_cache[22] = [_createElementVNode(\"div\", {\n      class: \"empty-message\"\n    }, [_createElementVNode(\"i\", {\n      class: \"pi pi-money-bill\"\n    }), _createElementVNode(\"p\", null, \"No expenses found\")], -1)])),\n    default: _withCtx(() => [_createVNode(_component_Column, {\n      selectionMode: \"single\",\n      style: {\n        \"width\": \"3rem\"\n      },\n      exportable: false\n    }), _createVNode(_component_Column, {\n      field: \"date\",\n      header: \"Date\",\n      sortable: \"\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString($setup.formatDate(slotProps.data.date)), 1)]),\n      _: 1\n    }), _createVNode(_component_Column, {\n      field: \"description\",\n      header: \"Description\",\n      sortable: \"\"\n    }), _createVNode(_component_Column, {\n      field: \"category\",\n      header: \"Category\",\n      sortable: \"\"\n    }, {\n      body: _withCtx(slotProps => [_createVNode(_component_Tag, {\n        value: slotProps.data.category,\n        severity: $setup.getCategorySeverity(slotProps.data.category)\n      }, null, 8, [\"value\", \"severity\"])]),\n      _: 1\n    }), _createVNode(_component_Column, {\n      field: \"amount\",\n      header: \"Amount\",\n      sortable: \"\"\n    }, {\n      body: _withCtx(slotProps => [_createTextVNode(_toDisplayString($setup.formatCurrency(slotProps.data.amount)), 1)]),\n      _: 1\n    }), _createVNode(_component_Column, {\n      field: \"status\",\n      header: \"Status\",\n      sortable: \"\"\n    }, {\n      body: _withCtx(slotProps => [_createVNode(_component_Tag, {\n        value: $setup.formatStatus(slotProps.data.status),\n        severity: $setup.getStatusSeverity(slotProps.data.status)\n      }, null, 8, [\"value\", \"severity\"])]),\n      _: 1\n    }), _createVNode(_component_Column, {\n      header: \"Actions\",\n      style: {\n        \"width\": \"8rem\"\n      }\n    }, {\n      body: _withCtx(slotProps => [_createElementVNode(\"div\", _hoisted_30, [_createVNode(_component_Button, {\n        icon: \"pi pi-eye\",\n        class: \"p-button-rounded p-button-text\",\n        onClick: $event => $setup.viewExpense(slotProps.data),\n        tooltip: \"View\",\n        tooltipOptions: {\n          position: 'top'\n        }\n      }, null, 8, [\"onClick\"]), $setup.canEditExpense(slotProps.data) ? (_openBlock(), _createBlock(_component_Button, {\n        key: 0,\n        icon: \"pi pi-pencil\",\n        class: \"p-button-rounded p-button-text\",\n        onClick: $event => $setup.editExpense(slotProps.data),\n        tooltip: \"Edit\",\n        tooltipOptions: {\n          position: 'top'\n        }\n      }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), $setup.canDeleteExpense(slotProps.data) ? (_openBlock(), _createBlock(_component_Button, {\n        key: 1,\n        icon: \"pi pi-trash\",\n        class: \"p-button-rounded p-button-text p-button-danger\",\n        onClick: $event => $setup.confirmDeleteExpense(slotProps.data),\n        tooltip: \"Delete\",\n        tooltipOptions: {\n          position: 'top'\n        }\n      }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)])]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"value\", \"loading\", \"selection\", \"onRowSelect\", \"onRowUnselect\"])), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, _toDisplayString($setup.paginationSummary), 1)])]), _createVNode(_component_Dialog, {\n    visible: $setup.expenseDialogVisible,\n    \"onUpdate:visible\": _cache[10] || (_cache[10] = $event => $setup.expenseDialogVisible = $event),\n    style: {\n      width: '500px'\n    },\n    header: $setup.dialogMode === 'create' ? 'New Expense' : 'Edit Expense',\n    modal: true,\n    class: \"p-fluid expense-dialog\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_Button, {\n      label: \"Cancel\",\n      icon: \"pi pi-times\",\n      class: \"p-button-text\",\n      onClick: _ctx.closeExpenseAppDialog\n    }, null, 8, [\"onClick\"]), $setup.dialogMode === 'edit' && $setup.canDeleteExpense($setup.expense) ? (_openBlock(), _createBlock(_component_Button, {\n      key: 0,\n      label: \"Delete\",\n      icon: \"pi pi-trash\",\n      class: \"p-button-danger mr-2\",\n      onClick: _cache[9] || (_cache[9] = $event => $setup.confirmDeleteExpense($setup.expense))\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_Button, {\n      label: \"Save\",\n      icon: \"pi pi-check\",\n      onClick: $setup.saveExpense,\n      loading: $setup.saving\n    }, null, 8, [\"onClick\", \"loading\"])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", {\n      for: \"amount\"\n    }, \"Amount *\", -1)), _createElementVNode(\"div\", _hoisted_35, [_cache[23] || (_cache[23] = _createElementVNode(\"span\", {\n      class: \"p-inputgroup-addon\"\n    }, \"$\", -1)), _createVNode(_component_InputNumber, {\n      id: \"amount\",\n      modelValue: $setup.expense.amount,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.expense.amount = $event),\n      mode: \"decimal\",\n      minFractionDigits: 2,\n      maxFractionDigits: 2,\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.expense.amount\n      })\n    }, null, 8, [\"modelValue\", \"class\"])]), $setup.submitted && !$setup.expense.amount ? (_openBlock(), _createElementBlock(\"small\", _hoisted_36, \"Amount is required.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_37, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n      for: \"date\"\n    }, \"Date *\", -1)), _createVNode(_component_Calendar, {\n      id: \"date\",\n      modelValue: $setup.expense.date,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.expense.date = $event),\n      dateFormat: \"mm/dd/yy\",\n      showIcon: true,\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.expense.date\n      })\n    }, null, 8, [\"modelValue\", \"class\"]), $setup.submitted && !$setup.expense.date ? (_openBlock(), _createElementBlock(\"small\", _hoisted_38, \"Date is required.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_39, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n      for: \"description\"\n    }, \"Description *\", -1)), _createVNode(_component_Textarea, {\n      id: \"description\",\n      modelValue: $setup.expense.description,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.expense.description = $event),\n      rows: \"3\",\n      autoResize: \"\",\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.expense.description\n      })\n    }, null, 8, [\"modelValue\", \"class\"]), $setup.submitted && !$setup.expense.description ? (_openBlock(), _createElementBlock(\"small\", _hoisted_40, \"Description is required.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_41, [_cache[27] || (_cache[27] = _createElementVNode(\"label\", {\n      for: \"category\"\n    }, \"Category *\", -1)), _createVNode(_component_Dropdown, {\n      id: \"category\",\n      modelValue: $setup.expense.category,\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.expense.category = $event),\n      options: $setup.categoryOptions,\n      optionLabel: \"name\",\n      optionValue: \"name\",\n      placeholder: \"Select a category\",\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.expense.category\n      })\n    }, null, 8, [\"modelValue\", \"options\", \"class\"]), $setup.submitted && !$setup.expense.category ? (_openBlock(), _createElementBlock(\"small\", _hoisted_42, \"Category is required.\")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_43, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n      for: \"receipt\"\n    }, \"Receipt\", -1)), _createElementVNode(\"div\", _hoisted_44, [_createVNode(_component_FileUpload, {\n      ref: \"fileUpload\",\n      mode: \"basic\",\n      name: \"receipt\",\n      accept: \"image/*,application/pdf\",\n      maxFileSize: 5000000,\n      chooseLabel: \"Select Receipt\",\n      class: \"p-button-outlined w-full\",\n      onSelect: $setup.onFileSelect,\n      onError: $setup.onFileError\n    }, null, 8, [\"onSelect\", \"onError\"])]), $setup.fileError ? (_openBlock(), _createElementBlock(\"small\", _hoisted_45, _toDisplayString($setup.fileError), 1)) : _createCommentVNode(\"\", true), $setup.expense.receiptPath && !$setup.selectedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_46, [_createElementVNode(\"div\", _hoisted_47, [$setup.isReceiptPdf ? (_openBlock(), _createElementBlock(\"i\", _hoisted_48)) : (_openBlock(), _createElementBlock(\"i\", _hoisted_49)), _cache[28] || (_cache[28] = _createElementVNode(\"span\", null, \"Current receipt\", -1))]), _createVNode(_component_Button, {\n      icon: \"pi pi-download\",\n      class: \"p-button-text p-button-sm\",\n      onClick: $setup.downloadReceipt\n    }, null, 8, [\"onClick\"])])) : _createCommentVNode(\"\", true)])])]),\n    _: 1\n  }, 8, [\"visible\", \"header\"]), _createVNode(_component_Dialog, {\n    visible: $setup.expenseDetailsVisible,\n    \"onUpdate:visible\": _cache[12] || (_cache[12] = $event => $setup.expenseDetailsVisible = $event),\n    style: {\n      width: '650px'\n    },\n    header: $setup.selectedExpense ? `Expense: ${$setup.formatCurrency($setup.selectedExpense.amount)}` : 'Expense Details',\n    modal: true,\n    class: \"expense-details-dialog\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_Button, {\n      label: \"Close\",\n      icon: \"pi pi-times\",\n      class: \"p-button-text\",\n      onClick: _cache[11] || (_cache[11] = $event => $setup.expenseDetailsVisible = false)\n    })]),\n    default: _withCtx(() => [$setup.selectedExpense ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, [_createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"div\", _hoisted_52, [_createElementVNode(\"span\", _hoisted_53, _toDisplayString($setup.formatCurrency($setup.selectedExpense.amount)), 1), _createElementVNode(\"span\", _hoisted_54, _toDisplayString($setup.selectedExpense.currency || 'USD'), 1)]), _createVNode(_component_Tag, {\n      value: $setup.formatStatus($setup.selectedExpense.status),\n      severity: $setup.getStatusSeverity($setup.selectedExpense.status),\n      class: \"status-tag\"\n    }, null, 8, [\"value\", \"severity\"])]), _createElementVNode(\"div\", _hoisted_55, [_createElementVNode(\"div\", _hoisted_56, [_cache[30] || (_cache[30] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Date\", -1)), _createElementVNode(\"div\", _hoisted_57, _toDisplayString($setup.formatDate($setup.selectedExpense.date)), 1)]), _createElementVNode(\"div\", _hoisted_58, [_cache[31] || (_cache[31] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Category\", -1)), _createElementVNode(\"div\", _hoisted_59, [_createVNode(_component_Tag, {\n      value: $setup.selectedExpense.category,\n      severity: $setup.getCategorySeverity($setup.selectedExpense.category)\n    }, null, 8, [\"value\", \"severity\"])])]), $setup.selectedExpense.user_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_60, [_cache[32] || (_cache[32] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Submitted By\", -1)), _createElementVNode(\"div\", _hoisted_61, _toDisplayString($setup.selectedExpense.user_name), 1)])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_62, [_cache[33] || (_cache[33] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Created\", -1)), _createElementVNode(\"div\", _hoisted_63, _toDisplayString($setup.formatDate($setup.selectedExpense.created_at)), 1)])]), _createVNode(_component_Divider), _createElementVNode(\"div\", _hoisted_64, [_cache[34] || (_cache[34] = _createElementVNode(\"h3\", null, \"Description\", -1)), _createElementVNode(\"div\", _hoisted_65, _toDisplayString($setup.selectedExpense.description), 1)]), $setup.selectedExpense.receipt_path ? (_openBlock(), _createElementBlock(\"div\", _hoisted_66, [_createVNode(_component_Divider), _cache[35] || (_cache[35] = _createElementVNode(\"h3\", null, \"Receipt\", -1)), _createElementVNode(\"div\", _hoisted_67, [_createVNode(_component_Button, {\n      label: \"View Receipt\",\n      icon: \"pi pi-eye\",\n      class: \"p-button-outlined\",\n      onClick: $setup.viewReceipt\n    }, null, 8, [\"onClick\"]), _createVNode(_component_Button, {\n      label: \"Download\",\n      icon: \"pi pi-download\",\n      class: \"p-button-text\",\n      onClick: $setup.downloadReceiptFromDetails\n    }, null, 8, [\"onClick\"])])])) : _createCommentVNode(\"\", true), $setup.selectedExpense.approvals && $setup.selectedExpense.approvals.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_68, [_createVNode(_component_Divider), _cache[36] || (_cache[36] = _createElementVNode(\"h3\", null, \"Approval History\", -1)), _createVNode(_component_Timeline, {\n      value: $setup.formattedApprovals,\n      class: \"approval-timeline\"\n    }, {\n      content: _withCtx(slotProps => [_createElementVNode(\"div\", _hoisted_69, [_createElementVNode(\"small\", _hoisted_70, _toDisplayString($setup.formatDate(slotProps.item.date)), 1), _createElementVNode(\"div\", _hoisted_71, [_createElementVNode(\"div\", _hoisted_72, [_createElementVNode(\"span\", _hoisted_73, _toDisplayString(slotProps.item.user), 1), _createElementVNode(\"span\", null, _toDisplayString(slotProps.item.action), 1)]), slotProps.item.comments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_74, \" \\\"\" + _toDisplayString(slotProps.item.comments) + \"\\\" \", 1)) : _createCommentVNode(\"\", true)])])]),\n      opposite: _withCtx(slotProps => [_createVNode(_component_Tag, {\n        value: slotProps.item.status,\n        severity: $setup.getStatusSeverity(slotProps.item.status)\n      }, null, 8, [\"value\", \"severity\"])]),\n      _: 1\n    }, 8, [\"value\"])])) : _createCommentVNode(\"\", true), $setup.showExpenseActions ? (_openBlock(), _createElementBlock(\"div\", _hoisted_75, [_createVNode(_component_Divider), _cache[37] || (_cache[37] = _createElementVNode(\"h3\", null, \"Actions\", -1)), _createElementVNode(\"div\", _hoisted_76, [$setup.canSubmitExpense ? (_openBlock(), _createBlock(_component_Button, {\n      key: 0,\n      label: \"Submit for Approval\",\n      icon: \"pi pi-send\",\n      class: \"p-button-success\",\n      onClick: $setup.submitExpense,\n      loading: $setup.processingAction\n    }, null, 8, [\"onClick\", \"loading\"])) : _createCommentVNode(\"\", true), $setup.canReviewExpense ? (_openBlock(), _createElementBlock(\"div\", _hoisted_77, [_createVNode(_component_Button, {\n      label: \"Approve\",\n      icon: \"pi pi-check\",\n      class: \"p-button-success mr-2\",\n      onClick: $setup.approveExpense,\n      loading: $setup.processingAction\n    }, null, 8, [\"onClick\", \"loading\"]), _createVNode(_component_Button, {\n      label: \"Reject\",\n      icon: \"pi pi-times\",\n      class: \"p-button-danger\",\n      onClick: _ctx.openRejectAppDialog,\n      loading: $setup.processingAction\n    }, null, 8, [\"onClick\", \"loading\"])])) : _createCommentVNode(\"\", true), $setup.canMarkAsPaid ? (_openBlock(), _createBlock(_component_Button, {\n      key: 2,\n      label: \"Mark as Paid\",\n      icon: \"pi pi-check-circle\",\n      class: \"p-button-primary\",\n      onClick: $setup.markAsPaid,\n      loading: $setup.processingAction\n    }, null, 8, [\"onClick\", \"loading\"])) : _createCommentVNode(\"\", true), $setup.canEditExpense($setup.selectedExpense) ? (_openBlock(), _createBlock(_component_Button, {\n      key: 3,\n      label: \"Edit Expense\",\n      icon: \"pi pi-pencil\",\n      class: \"p-button-secondary\",\n      onClick: $setup.editFromDetails\n    }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"visible\", \"header\"]), _createVNode(_component_Dialog, {\n    visible: $setup.rejectDialogVisible,\n    \"onUpdate:visible\": _cache[15] || (_cache[15] = $event => $setup.rejectDialogVisible = $event),\n    style: {\n      width: '450px'\n    },\n    header: \"Reject Expense\",\n    modal: true,\n    class: \"p-fluid\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_Button, {\n      label: \"Cancel\",\n      icon: \"pi pi-times\",\n      class: \"p-button-text\",\n      onClick: _cache[14] || (_cache[14] = $event => $setup.rejectDialogVisible = false)\n    }), _createVNode(_component_Button, {\n      label: \"Reject\",\n      icon: \"pi pi-times\",\n      class: \"p-button-danger\",\n      onClick: $setup.rejectExpense,\n      loading: $setup.processingAction\n    }, null, 8, [\"onClick\", \"loading\"])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_78, [_createElementVNode(\"div\", _hoisted_79, [_cache[38] || (_cache[38] = _createElementVNode(\"label\", {\n      for: \"rejectReason\"\n    }, \"Reason for Rejection\", -1)), _createVNode(_component_Textarea, {\n      id: \"rejectReason\",\n      modelValue: $setup.rejectReason,\n      \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.rejectReason = $event),\n      rows: \"3\",\n      autoResize: \"\",\n      placeholder: \"Please provide a reason for rejecting this expense\"\n    }, null, 8, [\"modelValue\"])])])]),\n    _: 1\n  }, 8, [\"visible\"]), _createVNode(_component_ConfirmDialog)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_Button","label","icon","onClick","_ctx","openNewExpenseAppDialog","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","$setup","formatCurrency","stats","draft","total_amount","_hoisted_8","count","_hoisted_9","_hoisted_10","_hoisted_11","submitted","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","approved","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","paid","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_component_InputText","modelValue","filters","search","_cache","$event","placeholder","onInput","onFilterChange","_hoisted_26","_component_Dropdown","status","options","statusOptions","optionLabel","optionValue","onChange","_hoisted_27","category","categoryOptions","_hoisted_28","_component_Calendar","dateRange","selectionMode","onDateSelect","loading","_hoisted_29","_component_ProgressSpinner","_createBlock","_component_DataTable","value","expenses","paginator","rows","rowsPerPageOptions","tableStyle","paginatorTemplate","currentPageReportTemplate","responsiveLayout","tableLoading","sortField","sortOrder","selection","selectedExpenses","dataKey","onRowSelect","onExpenseSelect","onRowUnselect","onExpenseUnselect","empty","_withCtx","default","_component_Column","style","exportable","field","header","sortable","body","slotProps","_createTextVNode","formatDate","data","date","_","_component_Tag","severity","getCategorySeverity","amount","formatStatus","getStatusSeverity","_hoisted_30","viewExpense","tooltip","tooltipOptions","position","canEditExpense","editExpense","_createCommentVNode","canDeleteExpense","confirmDeleteExpense","_hoisted_31","_hoisted_32","paginationSummary","_component_Dialog","visible","expenseDialogVisible","width","dialogMode","modal","footer","closeExpenseAppDialog","expense","saveExpense","saving","_hoisted_33","_hoisted_34","for","_hoisted_35","_component_InputNumber","id","mode","minFractionDigits","maxFractionDigits","required","_normalizeClass","_hoisted_36","_hoisted_37","dateFormat","showIcon","_hoisted_38","_hoisted_39","_component_Textarea","description","autoResize","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_component_FileUpload","ref","name","accept","maxFileSize","chooseLabel","onSelect","onFileSelect","onError","onFileError","fileError","_hoisted_45","receiptPath","selectedFile","_hoisted_46","_hoisted_47","isReceiptPdf","_hoisted_48","_hoisted_49","downloadReceipt","expenseDetailsVisible","selectedExpense","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","currency","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","user_name","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","created_at","_component_Divider","_hoisted_64","_hoisted_65","receipt_path","_hoisted_66","_hoisted_67","viewReceipt","downloadReceiptFromDetails","approvals","length","_hoisted_68","_component_Timeline","formattedApprovals","content","_hoisted_69","_hoisted_70","item","_hoisted_71","_hoisted_72","_hoisted_73","user","action","comments","_hoisted_74","opposite","showExpenseActions","_hoisted_75","_hoisted_76","canSubmitExpense","submitExpense","processingAction","canReviewExpense","_hoisted_77","approveExpense","openRejectAppDialog","canMarkAsPaid","markAsPaid","editFromDetails","rejectDialogVisible","rejectExpense","_hoisted_78","_hoisted_79","rejectReason","_component_ConfirmDialog"],"sources":["/home/pi/projects/intranet/frontend/src/views/Expenses.vue"],"sourcesContent":["<template>\r\n  <div class=\"expenses-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Expenses</h1>\r\n      <div class=\"page-actions\">\r\n        <Button \r\n          label=\"New Expense\" \r\n          icon=\"pi pi-plus\" \r\n          @click=\"openNewExpenseAppDialog\"\r\n          class=\"p-button-primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Expense stats summary cards -->\r\n    <div class=\"grid expense-stats\">\r\n      <div class=\"col-12 md:col-6 lg:col-3\">\r\n        <div class=\"card summary-card\">\r\n          <div class=\"summary-title\">Draft</div>\r\n          <div class=\"summary-value\">{{ formatCurrency(stats.draft?.total_amount || 0) }}</div>\r\n          <div class=\"summary-count\">{{ stats.draft?.count || 0 }} expenses</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 md:col-6 lg:col-3\">\r\n        <div class=\"card summary-card\">\r\n          <div class=\"summary-title\">Submitted</div>\r\n          <div class=\"summary-value\">{{ formatCurrency(stats.submitted?.total_amount || 0) }}</div>\r\n          <div class=\"summary-count\">{{ stats.submitted?.count || 0 }} expenses</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 md:col-6 lg:col-3\">\r\n        <div class=\"card summary-card\">\r\n          <div class=\"summary-title\">Approved</div>\r\n          <div class=\"summary-value\">{{ formatCurrency(stats.approved?.total_amount || 0) }}</div>\r\n          <div class=\"summary-count\">{{ stats.approved?.count || 0 }} expenses</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 md:col-6 lg:col-3\">\r\n        <div class=\"card summary-card\">\r\n          <div class=\"summary-title\">Paid</div>\r\n          <div class=\"summary-value\">{{ formatCurrency(stats.paid?.total_amount || 0) }}</div>\r\n          <div class=\"summary-count\">{{ stats.paid?.count || 0 }} expenses</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Expense filters and table -->\r\n    <div class=\"card\">\r\n      <div class=\"expense-filters\">\r\n        <div class=\"grid\">\r\n          <div class=\"col-12 md:col-3\">\r\n            <span class=\"p-input-icon-left w-full\">\r\n              <i class=\"pi pi-search\" />\r\n              <InputText \r\n                v-model=\"filters.search\" \r\n                placeholder=\"Search expenses\" \r\n                class=\"w-full\"\r\n                @input=\"onFilterChange\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <div class=\"col-12 md:col-3\">\r\n            <Dropdown\r\n              v-model=\"filters.status\"\r\n              :options=\"statusOptions\"\r\n              optionLabel=\"label\"\r\n              optionValue=\"value\"\r\n              placeholder=\"Status\"\r\n              class=\"w-full\"\r\n              @change=\"onFilterChange\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 md:col-3\">\r\n            <Dropdown\r\n              v-model=\"filters.category\"\r\n              :options=\"categoryOptions\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"name\"\r\n              placeholder=\"Category\"\r\n              class=\"w-full\"\r\n              @change=\"onFilterChange\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 md:col-3\">\r\n            <Calendar\r\n              v-model=\"filters.dateRange\"\r\n              selectionMode=\"range\"\r\n              placeholder=\"Date range\"\r\n              class=\"w-full\"\r\n              @date-select=\"onFilterChange\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading spinner -->\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <ProgressSpinner />\r\n      </div>\r\n\r\n      <!-- Expense table -->\r\n      <DataTable \r\n        v-else\r\n        :value=\"expenses\" \r\n        :paginator=\"true\" \r\n        :rows=\"10\"\r\n        :rowsPerPageOptions=\"[10, 25, 50]\"\r\n        tableStyle=\"min-width: 50rem\"\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} expenses\"\r\n        responsiveLayout=\"scroll\"\r\n        :loading=\"tableLoading\"\r\n        sortField=\"date\"\r\n        :sortOrder=\"-1\"\r\n        v-model:selection=\"selectedExpenses\"\r\n        dataKey=\"id\"\r\n        @rowSelect=\"onExpenseSelect\"\r\n        @rowUnselect=\"onExpenseUnselect\"\r\n        class=\"expense-table\"\r\n      >\r\n        <template #empty>\r\n          <div class=\"empty-message\">\r\n            <i class=\"pi pi-money-bill\"></i>\r\n            <p>No expenses found</p>\r\n          </div>\r\n        </template>\r\n\r\n        <Column selectionMode=\"single\" style=\"width: 3rem\" :exportable=\"false\"></Column>\r\n        \r\n        <Column field=\"date\" header=\"Date\" sortable>\r\n          <template #body=\"slotProps\">\r\n            {{ formatDate(slotProps.data.date) }}\r\n          </template>\r\n        </Column>\r\n\r\n        <Column field=\"description\" header=\"Description\" sortable></Column>\r\n\r\n        <Column field=\"category\" header=\"Category\" sortable>\r\n          <template #body=\"slotProps\">\r\n            <Tag :value=\"slotProps.data.category\" :severity=\"getCategorySeverity(slotProps.data.category)\" />\r\n          </template>\r\n        </Column>\r\n\r\n        <Column field=\"amount\" header=\"Amount\" sortable>\r\n          <template #body=\"slotProps\">\r\n            {{ formatCurrency(slotProps.data.amount) }}\r\n          </template>\r\n        </Column>\r\n\r\n        <Column field=\"status\" header=\"Status\" sortable>\r\n          <template #body=\"slotProps\">\r\n            <Tag \r\n              :value=\"formatStatus(slotProps.data.status)\" \r\n              :severity=\"getStatusSeverity(slotProps.data.status)\" \r\n            />\r\n          </template>\r\n        </Column>\r\n\r\n        <Column header=\"Actions\" style=\"width: 8rem\">\r\n          <template #body=\"slotProps\">\r\n            <div class=\"action-buttons\">\r\n              <Button \r\n                icon=\"pi pi-eye\" \r\n                class=\"p-button-rounded p-button-text\" \r\n                @click=\"viewExpense(slotProps.data)\" \r\n                tooltip=\"View\" \r\n                :tooltipOptions=\"{ position: 'top' }\"\r\n              />\r\n              <Button \r\n                v-if=\"canEditExpense(slotProps.data)\" \r\n                icon=\"pi pi-pencil\" \r\n                class=\"p-button-rounded p-button-text\" \r\n                @click=\"editExpense(slotProps.data)\" \r\n                tooltip=\"Edit\" \r\n                :tooltipOptions=\"{ position: 'top' }\"\r\n              />\r\n              <Button \r\n                v-if=\"canDeleteExpense(slotProps.data)\" \r\n                icon=\"pi pi-trash\" \r\n                class=\"p-button-rounded p-button-text p-button-danger\" \r\n                @click=\"confirmDeleteExpense(slotProps.data)\" \r\n                tooltip=\"Delete\" \r\n                :tooltipOptions=\"{ position: 'top' }\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </Column>\r\n      </DataTable>\r\n\r\n      <!-- Paginator controls -->\r\n      <div class=\"pagination-controls\">\r\n        <div class=\"pagination-summary\">\r\n          {{ paginationSummary }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Expense Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"expenseDialogVisible\" \r\n      :style=\"{ width: '500px' }\" \r\n      :header=\"dialogMode === 'create' ? 'New Expense' : 'Edit Expense'\" \r\n      :modal=\"true\" \r\n      class=\"p-fluid expense-dialog\"\r\n    >\r\n      <div class=\"expense-form\">\r\n        <div class=\"field\">\r\n          <label for=\"amount\">Amount *</label>\r\n          <div class=\"p-inputgroup\">\r\n            <span class=\"p-inputgroup-addon\">$</span>\r\n            <InputNumber \r\n              id=\"amount\" \r\n              v-model=\"expense.amount\" \r\n              mode=\"decimal\" \r\n              :minFractionDigits=\"2\" \r\n              :maxFractionDigits=\"2\" \r\n              required \r\n              :class=\"{ 'p-invalid': submitted && !expense.amount }\"\r\n            />\r\n          </div>\r\n          <small v-if=\"submitted && !expense.amount\" class=\"p-error\">Amount is required.</small>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <label for=\"date\">Date *</label>\r\n          <Calendar \r\n            id=\"date\" \r\n            v-model=\"expense.date\" \r\n            dateFormat=\"mm/dd/yy\" \r\n            :showIcon=\"true\" \r\n            required \r\n            :class=\"{ 'p-invalid': submitted && !expense.date }\"\r\n          />\r\n          <small v-if=\"submitted && !expense.date\" class=\"p-error\">Date is required.</small>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <label for=\"description\">Description *</label>\r\n          <Textarea \r\n            id=\"description\" \r\n            v-model=\"expense.description\" \r\n            rows=\"3\" \r\n            autoResize \r\n            required \r\n            :class=\"{ 'p-invalid': submitted && !expense.description }\"\r\n          />\r\n          <small v-if=\"submitted && !expense.description\" class=\"p-error\">Description is required.</small>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <label for=\"category\">Category *</label>\r\n          <Dropdown \r\n            id=\"category\" \r\n            v-model=\"expense.category\" \r\n            :options=\"categoryOptions\" \r\n            optionLabel=\"name\" \r\n            optionValue=\"name\" \r\n            placeholder=\"Select a category\" \r\n            required \r\n            :class=\"{ 'p-invalid': submitted && !expense.category }\"\r\n          />\r\n          <small v-if=\"submitted && !expense.category\" class=\"p-error\">Category is required.</small>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <label for=\"receipt\">Receipt</label>\r\n          <div class=\"p-fileupload-content\">\r\n            <FileUpload \r\n              ref=\"fileUpload\"\r\n              mode=\"basic\" \r\n              name=\"receipt\" \r\n              accept=\"image/*,application/pdf\" \r\n              :maxFileSize=\"5000000\" \r\n              chooseLabel=\"Select Receipt\" \r\n              class=\"p-button-outlined w-full\"\r\n              @select=\"onFileSelect\"\r\n              @error=\"onFileError\"\r\n            />\r\n          </div>\r\n          <small v-if=\"fileError\" class=\"p-error\">{{ fileError }}</small>\r\n          \r\n          <!-- Preview of existing receipt -->\r\n          <div v-if=\"expense.receiptPath && !selectedFile\" class=\"receipt-preview\">\r\n            <div class=\"receipt-preview-info\">\r\n              <i class=\"pi pi-file-pdf\" v-if=\"isReceiptPdf\"></i>\r\n              <i class=\"pi pi-image\" v-else></i>\r\n              <span>Current receipt</span>\r\n            </div>\r\n            <Button \r\n              icon=\"pi pi-download\" \r\n              class=\"p-button-text p-button-sm\" \r\n              @click=\"downloadReceipt\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <Button \r\n          label=\"Cancel\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"closeExpenseAppDialog\" \r\n        />\r\n        <Button \r\n          v-if=\"dialogMode === 'edit' && canDeleteExpense(expense)\" \r\n          label=\"Delete\" \r\n          icon=\"pi pi-trash\" \r\n          class=\"p-button-danger mr-2\" \r\n          @click=\"confirmDeleteExpense(expense)\" \r\n        />\r\n        <Button \r\n          label=\"Save\" \r\n          icon=\"pi pi-check\" \r\n          @click=\"saveExpense\" \r\n          :loading=\"saving\"\r\n        />\r\n      </template>\r\n    </Dialog>\r\n\r\n    <!-- Expense Details Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"expenseDetailsVisible\" \r\n      :style=\"{ width: '650px' }\" \r\n      :header=\"selectedExpense ? `Expense: ${formatCurrency(selectedExpense.amount)}` : 'Expense Details'\" \r\n      :modal=\"true\"\r\n      class=\"expense-details-dialog\"\r\n    >\r\n      <div v-if=\"selectedExpense\" class=\"expense-details\">\r\n        <div class=\"expense-header\">\r\n          <div class=\"expense-amount\">\r\n            <span class=\"amount-value\">{{ formatCurrency(selectedExpense.amount) }}</span>\r\n            <span class=\"currency\">{{ selectedExpense.currency || 'USD' }}</span>\r\n          </div>\r\n          <Tag \r\n            :value=\"formatStatus(selectedExpense.status)\" \r\n            :severity=\"getStatusSeverity(selectedExpense.status)\" \r\n            class=\"status-tag\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"expense-info-grid\">\r\n          <div class=\"info-group\">\r\n            <div class=\"info-label\">Date</div>\r\n            <div class=\"info-value\">{{ formatDate(selectedExpense.date) }}</div>\r\n          </div>\r\n          <div class=\"info-group\">\r\n            <div class=\"info-label\">Category</div>\r\n            <div class=\"info-value\">\r\n              <Tag :value=\"selectedExpense.category\" :severity=\"getCategorySeverity(selectedExpense.category)\" />\r\n            </div>\r\n          </div>\r\n          <div v-if=\"selectedExpense.user_name\" class=\"info-group\">\r\n            <div class=\"info-label\">Submitted By</div>\r\n            <div class=\"info-value\">{{ selectedExpense.user_name }}</div>\r\n          </div>\r\n          <div class=\"info-group\">\r\n            <div class=\"info-label\">Created</div>\r\n            <div class=\"info-value\">{{ formatDate(selectedExpense.created_at) }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <div class=\"description-section\">\r\n          <h3>Description</h3>\r\n          <div class=\"description-content\">{{ selectedExpense.description }}</div>\r\n        </div>\r\n\r\n        <div v-if=\"selectedExpense.receipt_path\" class=\"receipt-section\">\r\n          <Divider />\r\n          <h3>Receipt</h3>\r\n          <div class=\"receipt-actions\">\r\n            <Button \r\n              label=\"View Receipt\" \r\n              icon=\"pi pi-eye\" \r\n              class=\"p-button-outlined\" \r\n              @click=\"viewReceipt\" \r\n            />\r\n            <Button \r\n              label=\"Download\" \r\n              icon=\"pi pi-download\" \r\n              class=\"p-button-text\" \r\n              @click=\"downloadReceiptFromDetails\" \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"selectedExpense.approvals && selectedExpense.approvals.length > 0\" class=\"approvals-section\">\r\n          <Divider />\r\n          <h3>Approval History</h3>\r\n          <Timeline :value=\"formattedApprovals\" class=\"approval-timeline\">\r\n            <template #content=\"slotProps\">\r\n              <div class=\"approval-item\">\r\n                <small class=\"approval-date\">{{ formatDate(slotProps.item.date) }}</small>\r\n                <div class=\"approval-content\">\r\n                  <div class=\"approval-description\">\r\n                    <span class=\"approval-user\">{{ slotProps.item.user }}</span>\r\n                    <span> {{ slotProps.item.action }} </span>\r\n                  </div>\r\n                  <div v-if=\"slotProps.item.comments\" class=\"approval-comments\">\r\n                    \"{{ slotProps.item.comments }}\"\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </template>\r\n            <template #opposite=\"slotProps\">\r\n              <Tag \r\n                :value=\"slotProps.item.status\" \r\n                :severity=\"getStatusSeverity(slotProps.item.status)\" \r\n              />\r\n            </template>\r\n          </Timeline>\r\n        </div>\r\n\r\n        <!-- Action buttons for expense workflow -->\r\n        <div v-if=\"showExpenseActions\" class=\"expense-actions\">\r\n          <Divider />\r\n          <h3>Actions</h3>\r\n          <div class=\"expense-workflow-buttons\">\r\n            <!-- Submit button (for draft expenses) -->\r\n            <Button \r\n              v-if=\"canSubmitExpense\"\r\n              label=\"Submit for Approval\" \r\n              icon=\"pi pi-send\" \r\n              class=\"p-button-success\" \r\n              @click=\"submitExpense\" \r\n              :loading=\"processingAction\"\r\n            />\r\n\r\n            <!-- Approval buttons (for managers reviewing expenses) -->\r\n            <div v-if=\"canReviewExpense\" class=\"review-buttons\">\r\n              <Button \r\n                label=\"Approve\" \r\n                icon=\"pi pi-check\" \r\n                class=\"p-button-success mr-2\" \r\n                @click=\"approveExpense\" \r\n                :loading=\"processingAction\"\r\n              />\r\n              <Button \r\n                label=\"Reject\" \r\n                icon=\"pi pi-times\" \r\n                class=\"p-button-danger\" \r\n                @click=\"openRejectAppDialog\" \r\n                :loading=\"processingAction\"\r\n              />\r\n            </div>\r\n\r\n            <!-- Payment button (for admins) -->\r\n            <Button \r\n              v-if=\"canMarkAsPaid\"\r\n              label=\"Mark as Paid\" \r\n              icon=\"pi pi-check-circle\" \r\n              class=\"p-button-primary\" \r\n              @click=\"markAsPaid\" \r\n              :loading=\"processingAction\"\r\n            />\r\n\r\n            <!-- Edit button (if the expense can be edited) -->\r\n            <Button \r\n              v-if=\"canEditExpense(selectedExpense)\"\r\n              label=\"Edit Expense\" \r\n              icon=\"pi pi-pencil\" \r\n              class=\"p-button-secondary\" \r\n              @click=\"editFromDetails\" \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <Button \r\n          label=\"Close\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"expenseDetailsVisible = false\" \r\n        />\r\n      </template>\r\n    </Dialog>\r\n\r\n    <!-- Reject Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"rejectDialogVisible\" \r\n      :style=\"{ width: '450px' }\" \r\n      header=\"Reject Expense\" \r\n      :modal=\"true\"\r\n      class=\"p-fluid\"\r\n    >\r\n      <div class=\"reject-form\">\r\n        <div class=\"field\">\r\n          <label for=\"rejectReason\">Reason for Rejection</label>\r\n          <Textarea \r\n            id=\"rejectReason\" \r\n            v-model=\"rejectReason\" \r\n            rows=\"3\" \r\n            autoResize \r\n            placeholder=\"Please provide a reason for rejecting this expense\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <Button \r\n          label=\"Cancel\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"rejectDialogVisible = false\" \r\n        />\r\n        <Button \r\n          label=\"Reject\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-danger\" \r\n          @click=\"rejectExpense\" \r\n          :loading=\"processingAction\"\r\n        />\r\n      </template>\r\n    </Dialog>\r\n\r\n    <!-- Confirm Dialog -->\r\n    <ConfirmDialog />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { useConfirm } from 'primevue/useconfirm';\r\nimport { useToast } from 'primevue/usetoast';\r\n\r\n// PrimeVue components\r\nimport Button from 'primevue/button';\r\nimport InputText from 'primevue/inputtext';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Calendar from 'primevue/calendar';\r\nimport DataTable from 'primevue/datatable';\r\nimport Column from 'primevue/column';\r\nimport Tag from 'primevue/tag';\r\nimport ProgressSpinner from 'primevue/progressspinner';\r\nimport Dialog from 'primevue/dialog';\r\nimport InputNumber from 'primevue/inputnumber';\r\nimport Textarea from 'primevue/textarea';\r\nimport FileUpload from 'primevue/fileupload';\r\nimport Divider from 'primevue/divider';\r\nimport Timeline from 'primevue/timeline';\r\nimport ConfirmDialog from 'primevue/confirmdialog';\r\n\r\nexport default {\r\n  name: 'ExpensesView',\r\n  components: {\r\n    Button,\r\n    InputText,\r\n    Dropdown,\r\n    Calendar,\r\n    DataTable,\r\n    Column,\r\n    Tag,\r\n    ProgressSpinner,\r\n    Dialog,\r\n    InputNumber,\r\n    Textarea,\r\n    FileUpload,\r\n    Divider,\r\n    Timeline,\r\n    ConfirmDialog\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n//    const router = useRouter();\r\n    const confirm = useConfirm();\r\n    const toast = useToast();\r\n    const fileUpload = ref(null);\r\n\r\n    // State\r\n    const loading = ref(true);\r\n    const tableLoading = ref(false);\r\n    const expenses = ref([]);\r\n    const stats = ref({});\r\n    const selectedExpenses = ref(null);\r\n    const selectedExpense = ref(null);\r\n    const expenseDialogVisible = ref(false);\r\n    const expenseDetailsVisible = ref(false);\r\n    const rejectDialogVisible = ref(false);\r\n    const dialogMode = ref('create');\r\n    const saving = ref(false);\r\n    const submitted = ref(false);\r\n    const processingAction = ref(false);\r\n    const rejectReason = ref('');\r\n    const selectedFile = ref(null);\r\n    const fileError = ref('');\r\n\r\n    // Pagination state\r\n    const pagination = ref({\r\n      page: 1,\r\n      rows: 10,\r\n      totalRecords: 0\r\n    });\r\n\r\n    // Filter state\r\n    const filters = reactive({\r\n      search: '',\r\n      status: null,\r\n      dateRange: null,\r\n      category: null\r\n    });\r\n\r\n    // Form state\r\n    const expense = reactive({\r\n      id: null,\r\n      amount: null,\r\n      currency: 'USD',\r\n      date: null,\r\n      description: '',\r\n      category: null,\r\n      receiptPath: null,\r\n      status: 'draft'\r\n    });\r\n\r\n    // Options for status filter\r\n    const statusOptions = [\r\n      { label: 'All Statuses', value: null },\r\n      { label: 'Draft', value: 'draft' },\r\n      { label: 'Submitted', value: 'submitted' },\r\n      { label: 'Approved', value: 'approved' },\r\n      { label: 'Rejected', value: 'rejected' },\r\n      { label: 'Paid', value: 'paid' }\r\n    ];\r\n\r\n    // Options for category filter (hardcoded for now, should come from API)\r\n    const categoryOptions = [\r\n      { name: 'Travel' },\r\n      { name: 'Meals' },\r\n      { name: 'Office Supplies' },\r\n      { name: 'Training' },\r\n      { name: 'Other' }\r\n    ];\r\n\r\n    // Format status for display\r\n    const formatStatus = (status) => {\r\n      if (!status) return '';\r\n      return status.charAt(0).toUpperCase() + status.slice(1);\r\n    };\r\n\r\n    // Format currency\r\n    const formatCurrency = (amount) => {\r\n      if (amount === undefined || amount === null) return '$0.00';\r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n      }).format(amount);\r\n    };\r\n\r\n    // Format date\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '';\r\n      const date = new Date(dateString);\r\n      return new Intl.DateTimeFormat('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }).format(date);\r\n    };\r\n\r\n    // Get severity class for status tag\r\n    const getStatusSeverity = (status) => {\r\n      switch (status) {\r\n        case 'draft': return 'info';\r\n        case 'submitted': return 'warning';\r\n        case 'approved': return 'success';\r\n        case 'rejected': return 'danger';\r\n        case 'paid': return 'success';\r\n        default: return 'info';\r\n      }\r\n    };\r\n\r\n    // Get severity class for category tag\r\n    const getCategorySeverity = (category) => {\r\n      switch (category) {\r\n        case 'Travel': return 'info';\r\n        case 'Meals': return 'success';\r\n        case 'Office Supplies': return 'warning';\r\n        case 'Training': return 'primary';\r\n        default: return 'secondary';\r\n      }\r\n    };\r\n\r\n    // Check if the current user can edit an expense\r\n    const canEditExpense = (expenseData) => {\r\n      if (!expenseData) return false;\r\n      \r\n      // Only draft and rejected expenses can be edited\r\n      if (!['draft', 'rejected'].includes(expenseData.status)) return false;\r\n      \r\n      // Admin can edit any expense\r\n      if (store.getters['auth/isAdmin']) return true;\r\n      \r\n      // User can edit their own expenses\r\n      const currentUserId = store.getters['auth/currentUser']?.id;\r\n      return expenseData.user_id === currentUserId;\r\n    };\r\n\r\n    // Check if the current user can delete an expense\r\n    const canDeleteExpense = (expenseData) => {\r\n      if (!expenseData) return false;\r\n      \r\n      // Only draft and rejected expenses can be deleted\r\n      if (!['draft', 'rejected'].includes(expenseData.status)) return false;\r\n      \r\n      // Admin can delete any expense\r\n      if (store.getters['auth/isAdmin']) return true;\r\n      \r\n      // User can delete their own expenses\r\n      const currentUserId = store.getters['auth/currentUser']?.id;\r\n      return expenseData.user_id === currentUserId;\r\n    };\r\n\r\n    // Pagination summary text\r\n    const paginationSummary = computed(() => {\r\n      const { page, rows, totalRecords } = pagination.value;\r\n      const first = (page - 1) * rows + 1;\r\n      const last = Math.min(page * rows, totalRecords);\r\n      return `Showing ${first} to ${last} of ${totalRecords} expenses`;\r\n    });\r\n\r\n    // Check if user can submit the selected expense\r\n    const canSubmitExpense = computed(() => {\r\n      if (!selectedExpense.value) return false;\r\n      if (selectedExpense.value.status !== 'draft') return false;\r\n      \r\n      // Only the owner can submit their expense\r\n      const currentUserId = store.getters['auth/currentUser']?.id;\r\n      return selectedExpense.value.user_id === currentUserId;\r\n    });\r\n\r\n    // Check if user can review (approve/reject) the selected expense\r\n    const canReviewExpense = computed(() => {\r\n      if (!selectedExpense.value) return false;\r\n      if (selectedExpense.value.status !== 'submitted') return false;\r\n      \r\n      // Admin can approve any expense\r\n      if (store.getters['auth/isAdmin']) return true;\r\n      \r\n      // Managers can approve expenses of their direct reports\r\n      if (store.getters['auth/isManager']) {\r\n        // In a real app, we would check if the expense is from a direct report\r\n        // For now, we'll simulate this\r\n        return selectedExpense.value.user_manager_id === store.getters['auth/currentUser']?.id;\r\n      }\r\n      \r\n      return false;\r\n    });\r\n\r\n    // Check if user can mark the expense as paid\r\n    const canMarkAsPaid = computed(() => {\r\n      if (!selectedExpense.value) return false;\r\n      if (selectedExpense.value.status !== 'approved') return false;\r\n      \r\n      // Only admin can mark as paid\r\n      return store.getters['auth/isAdmin'];\r\n    });\r\n\r\n    // Show actions section if user can perform any action on this expense\r\n    const showExpenseActions = computed(() => {\r\n      return canSubmitExpense.value || canReviewExpense.value || \r\n             canMarkAsPaid.value || canEditExpense(selectedExpense.value);\r\n    });\r\n\r\n    // Format approvals for timeline\r\n    const formattedApprovals = computed(() => {\r\n      if (!selectedExpense.value || !selectedExpense.value.approvals) return [];\r\n      \r\n      return selectedExpense.value.approvals.map(approval => ({\r\n        status: approval.status,\r\n        date: approval.updated_at || approval.created_at,\r\n        user: approval.approver_name,\r\n        action: getApprovalAction(approval.status),\r\n        comments: approval.comments\r\n      }));\r\n    });\r\n\r\n    // Determine action text for approval status\r\n    const getApprovalAction = (status) => {\r\n      switch (status) {\r\n        case 'approved': return 'approved this expense';\r\n        case 'rejected': return 'rejected this expense';\r\n        case 'pending': return 'needs to review this expense';\r\n        default: return 'reviewed this expense';\r\n      }\r\n    };\r\n\r\n    // Check if receipt is PDF\r\n    const isReceiptPdf = computed(() => {\r\n      if (!selectedExpense.value || !selectedExpense.value.receipt_path) return false;\r\n      return selectedExpense.value.receipt_path.toLowerCase().endsWith('.pdf');\r\n    });\r\n\r\n    // Filter change handler\r\n    const onFilterChange = () => {\r\n      fetchExpenses();\r\n    };\r\n\r\n    // Fetch expenses from API\r\n    const fetchExpenses = async () => {\r\n      tableLoading.value = true;\r\n      \r\n      try {\r\n        // Build query parameters\r\n        const params = {\r\n          page: pagination.value.page,\r\n          limit: pagination.value.rows\r\n        };\r\n        \r\n        // Add filters if set\r\n        if (filters.search) params.search = filters.search;\r\n        if (filters.status) params.status = filters.status;\r\n        if (filters.category) params.category = filters.category;\r\n        \r\n        // Add date range if selected\r\n        if (filters.dateRange && Array.isArray(filters.dateRange) && filters.dateRange.length === 2) {\r\n          params.startDate = filters.dateRange[0].toISOString().split('T')[0];\r\n          params.endDate = filters.dateRange[1].toISOString().split('T')[0];\r\n        }\r\n        \r\n        // In a real app, this would be an API call\r\n        // For now, we'll use mock data\r\n        const response = await mockFetchExpenses(params);\r\n        \r\n        expenses.value = response.data;\r\n        pagination.value.totalRecords = response.pagination.total;\r\n      } catch (error) {\r\n        console.error('Error fetching expenses:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load expenses',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        tableLoading.value = false;\r\n      }\r\n    };\r\n\r\n    // Fetch expense statistics\r\n    const fetchExpenseStats = async () => {\r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, we'll use mock data\r\n        const response = await mockFetchExpenseStats();\r\n        stats.value = response;\r\n      } catch (error) {\r\n        console.error('Error fetching expense stats:', error);\r\n      }\r\n    };\r\n\r\n    // Mock function to fetch expenses\r\n    const mockFetchExpenses = (params) => {\r\n      return new Promise(resolve => {\r\n        setTimeout(() => {\r\n          // Generate mock data\r\n          const mockData = [\r\n            {\r\n              id: '1',\r\n              amount: 125.50,\r\n              currency: 'USD',\r\n              date: new Date(2025, 3, 5),\r\n              description: 'Business lunch with clients',\r\n              category: 'Meals',\r\n              receipt_path: '/uploads/receipts/receipt1.pdf',\r\n              status: 'approved',\r\n              user_id: '1',\r\n              user_name: 'John Doe',\r\n              user_email: 'john@example.com',\r\n              created_at: new Date(2025, 3, 4),\r\n              updated_at: new Date(2025, 3, 5),\r\n              approvals: [\r\n                {\r\n                  id: '101',\r\n                  status: 'approved',\r\n                  approver_id: '2',\r\n                  approver_name: 'Jane Smith',\r\n                  comments: 'Approved as per company policy',\r\n                  created_at: new Date(2025, 3, 5)\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              id: '2',\r\n              amount: 450.00,\r\n              currency: 'USD',\r\n              date: new Date(2025, 3, 2),\r\n              description: 'Conference registration fee',\r\n              category: 'Training',\r\n              receipt_path: '/uploads/receipts/receipt2.pdf',\r\n              status: 'submitted',\r\n              user_id: '1',\r\n              user_name: 'John Doe',\r\n              user_email: 'john@example.com',\r\n              created_at: new Date(2025, 3, 1),\r\n              updated_at: new Date(2025, 3, 2)\r\n            },\r\n            {\r\n              id: '3',\r\n              amount: 89.99,\r\n              currency: 'USD',\r\n              date: new Date(2025, 3, 1),\r\n              description: 'Office supplies - printer ink',\r\n              category: 'Office Supplies',\r\n              receipt_path: '/uploads/receipts/receipt3.jpg',\r\n              status: 'draft',\r\n              user_id: '1',\r\n              user_name: 'John Doe',\r\n              user_email: 'john@example.com',\r\n              created_at: new Date(2025, 3, 1)\r\n            }\r\n          ];\r\n          \r\n          // Filter data based on params\r\n          let filteredData = [...mockData];\r\n          \r\n          if (params.status) {\r\n            filteredData = filteredData.filter(expense => expense.status === params.status);\r\n          }\r\n          \r\n          if (params.category) {\r\n            filteredData = filteredData.filter(expense => expense.category === params.category);\r\n          }\r\n          \r\n          if (params.search) {\r\n            const search = params.search.toLowerCase();\r\n            filteredData = filteredData.filter(expense => \r\n              expense.description.toLowerCase().includes(search) ||\r\n              expense.category.toLowerCase().includes(search) ||\r\n              expense.user_name.toLowerCase().includes(search)\r\n            );\r\n          }\r\n          \r\n          if (params.startDate && params.endDate) {\r\n            const startDate = new Date(params.startDate);\r\n            const endDate = new Date(params.endDate);\r\n            filteredData = filteredData.filter(expense => {\r\n              const expenseDate = new Date(expense.date);\r\n              return expenseDate >= startDate && expenseDate <= endDate;\r\n            });\r\n          }\r\n          \r\n          // Calculate pagination\r\n          const total = filteredData.length;\r\n          const start = (params.page - 1) * params.limit;\r\n          const end = start + params.limit;\r\n          const paginatedData = filteredData.slice(start, end);\r\n          \r\n          resolve({\r\n            data: paginatedData,\r\n            pagination: {\r\n              total,\r\n              per_page: params.limit,\r\n              current_page: params.page,\r\n              last_page: Math.ceil(total / params.limit)\r\n            }\r\n          });\r\n        }, 500);\r\n      });\r\n    };\r\n\r\n    // Mock function to fetch expense statistics\r\n    const mockFetchExpenseStats = () => {\r\n      return new Promise(resolve => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            draft: {\r\n              count: 2,\r\n              total_amount: 120.50\r\n            },\r\n            submitted: {\r\n              count: 1,\r\n              total_amount: 450.00\r\n            },\r\n            approved: {\r\n              count: 3,\r\n              total_amount: 725.75\r\n            },\r\n            rejected: {\r\n              count: 1,\r\n              total_amount: 50.25\r\n            },\r\n            paid: {\r\n              count: 2,\r\n              total_amount: 600.25\r\n            }\r\n          });\r\n        }, 300);\r\n      });\r\n    };\r\n\r\n    // Open new expense dialog\r\n    const openNewExpenseDialog = () => {\r\n      resetExpenseForm();\r\n      expense.date = new Date(); // Set default date to today\r\n      dialogMode.value = 'create';\r\n      expenseDialogVisible.value = true;\r\n    };\r\n\r\n    // Close expense dialog\r\n    const closeExpenseDialog = () => {\r\n      expenseDialogVisible.value = false;\r\n      submitted.value = false;\r\n      fileError.value = '';\r\n      selectedFile.value = null;\r\n      if (fileUpload.value) {\r\n        fileUpload.value.clear();\r\n      }\r\n    };\r\n\r\n    // Reset expense form\r\n    const resetExpenseForm = () => {\r\n      expense.id = null;\r\n      expense.amount = null;\r\n      expense.currency = 'USD';\r\n      expense.date = null;\r\n      expense.description = '';\r\n      expense.category = null;\r\n      expense.receiptPath = null;\r\n      expense.status = 'draft';\r\n    };\r\n\r\n    // Handle file selection\r\n    const onFileSelect = (event) => {\r\n      fileError.value = '';\r\n      selectedFile.value = event.files[0];\r\n    };\r\n\r\n    // Handle file upload error\r\n    const onFileError = (event) => {\r\n      fileError.value = event.message;\r\n    };\r\n\r\n    // View an expense\r\n    const viewExpense = (expenseData) => {\r\n      selectedExpense.value = expenseData;\r\n      expenseDetailsVisible.value = true;\r\n    };\r\n\r\n    // Edit an expense\r\n    const editExpense = (expenseData) => {\r\n      resetExpenseForm();\r\n      \r\n      // Copy data to form\r\n      expense.id = expenseData.id;\r\n      expense.amount = expenseData.amount;\r\n      expense.currency = expenseData.currency || 'USD';\r\n      expense.date = new Date(expenseData.date);\r\n      expense.description = expenseData.description;\r\n      expense.category = expenseData.category;\r\n      expense.receiptPath = expenseData.receipt_path;\r\n      expense.status = expenseData.status;\r\n      \r\n      dialogMode.value = 'edit';\r\n      expenseDialogVisible.value = true;\r\n    };\r\n\r\n    // Edit from details view\r\n    const editFromDetails = () => {\r\n      if (!selectedExpense.value) return;\r\n      \r\n      // Close details dialog\r\n      expenseDetailsVisible.value = false;\r\n      \r\n      // Edit the expense\r\n      editExpense(selectedExpense.value);\r\n    };\r\n\r\n    // Confirm delete expense\r\n    const confirmDeleteExpense = (expenseData) => {\r\n      confirm.require({\r\n        message: 'Are you sure you want to delete this expense?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => deleteExpense(expenseData),\r\n        reject: () => {}\r\n      });\r\n    };\r\n\r\n    // Delete expense\r\n    const deleteExpense = async (expenseData) => {\r\n      if (!expenseData || !expenseData.id) return;\r\n      \r\n      try {\r\n        // Close dialogs if open\r\n        expenseDialogVisible.value = false;\r\n        expenseDetailsVisible.value = false;\r\n        \r\n        // In a real app, this would be an API call\r\n        // For now, we'll simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n        \r\n        // Remove from local array\r\n        expenses.value = expenses.value.filter(e => e.id !== expenseData.id);\r\n        \r\n        // Update selection if needed\r\n        if (selectedExpense.value && selectedExpense.value.id === expenseData.id) {\r\n          selectedExpense.value = null;\r\n        }\r\n        \r\n        // Show success toast\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'Expense Deleted',\r\n          detail: 'Expense has been deleted successfully',\r\n          life: 3000\r\n        });\r\n        \r\n        // Refresh stats\r\n        fetchExpenseStats();\r\n      } catch (error) {\r\n        console.error('Error deleting expense:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to delete expense',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Save expense (create or update)\r\n    const saveExpense = async () => {\r\n      submitted.value = true;\r\n      \r\n      // Validate form\r\n      if (!expense.amount || !expense.date || !expense.description || !expense.category) {\r\n        return;\r\n      }\r\n      \r\n      saving.value = true;\r\n      \r\n      try {\r\n        // Prepare form data for API submission\r\n        const formData = new FormData();\r\n        formData.append('amount', expense.amount);\r\n        formData.append('currency', expense.currency);\r\n        formData.append('date', expense.date.toISOString().split('T')[0]);\r\n        formData.append('description', expense.description);\r\n        formData.append('category', expense.category);\r\n        \r\n        if (selectedFile.value) {\r\n          formData.append('receipt', selectedFile.value);\r\n        }\r\n        \r\n        // In a real app, this would be an API call\r\n        // For now, we'll simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // Generate mock response data\r\n        const savedExpense = {\r\n          id: expense.id || Math.random().toString(36).substring(2, 11),\r\n          amount: expense.amount,\r\n          currency: expense.currency,\r\n          date: expense.date,\r\n          description: expense.description,\r\n          category: expense.category,\r\n          receipt_path: selectedFile.value ? `/uploads/receipts/mock-${selectedFile.value.name}` : expense.receiptPath,\r\n          status: expense.status,\r\n          user_id: store.getters['auth/currentUser'].id,\r\n          user_name: store.getters['auth/userFullName'],\r\n          created_at: new Date(),\r\n          updated_at: new Date()\r\n        };\r\n        \r\n        // Update local data\r\n        if (expense.id) {\r\n          // Update existing record\r\n          const index = expenses.value.findIndex(e => e.id === expense.id);\r\n          if (index !== -1) {\r\n            expenses.value[index] = savedExpense;\r\n          }\r\n        } else {\r\n          // Add new record\r\n          expenses.value.unshift(savedExpense);\r\n        }\r\n        \r\n        // Close dialog\r\n        expenseDialogVisible.value = false;\r\n        submitted.value = false;\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: dialogMode.value === 'create' ? 'Expense Created' : 'Expense Updated',\r\n          detail: dialogMode.value === 'create' ? 'Expense has been created successfully' : 'Expense has been updated successfully',\r\n          life: 3000\r\n        });\r\n        \r\n        // Refresh stats\r\n        fetchExpenseStats();\r\n      } catch (error) {\r\n        console.error('Error saving expense:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to save expense',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        saving.value = false;\r\n        fileError.value = '';\r\n        selectedFile.value = null;\r\n        if (fileUpload.value) {\r\n          fileUpload.value.clear();\r\n        }\r\n      }\r\n    };\r\n\r\n    // Submit expense for approval\r\n    const submitExpense = async () => {\r\n      if (!selectedExpense.value || !canSubmitExpense.value) return;\r\n      \r\n      processingAction.value = true;\r\n      \r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, we'll simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Update local data\r\n        selectedExpense.value.status = 'submitted';\r\n        selectedExpense.value.updated_at = new Date();\r\n        \r\n        // Update in the list\r\n        const index = expenses.value.findIndex(e => e.id === selectedExpense.value.id);\r\n        if (index !== -1) {\r\n          expenses.value[index] = { ...selectedExpense.value };\r\n        }\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'Expense Submitted',\r\n          detail: 'Expense has been submitted for approval',\r\n          life: 3000\r\n        });\r\n        \r\n        // Close details dialog\r\n        expenseDetailsVisible.value = false;\r\n        \r\n        // Refresh stats\r\n        fetchExpenseStats();\r\n      } catch (error) {\r\n        console.error('Error submitting expense:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to submit expense',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        processingAction.value = false;\r\n      }\r\n    };\r\n\r\n    // Approve expense\r\n    const approveExpense = async () => {\r\n      if (!selectedExpense.value || !canReviewExpense.value) return;\r\n      \r\n      processingAction.value = true;\r\n      \r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, we'll simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Update local data\r\n        selectedExpense.value.status = 'approved';\r\n        selectedExpense.value.updated_at = new Date();\r\n        \r\n        // Add approval record\r\n        if (!selectedExpense.value.approvals) {\r\n          selectedExpense.value.approvals = [];\r\n        }\r\n        \r\n        selectedExpense.value.approvals.push({\r\n          id: Math.random().toString(36).substring(2, 11),\r\n          status: 'approved',\r\n          approver_id: store.getters['auth/currentUser'].id,\r\n          approver_name: store.getters['auth/userFullName'],\r\n          comments: null,\r\n          created_at: new Date()\r\n        });\r\n        \r\n        // Update in the list\r\n        const index = expenses.value.findIndex(e => e.id === selectedExpense.value.id);\r\n        if (index !== -1) {\r\n          expenses.value[index] = { ...selectedExpense.value };\r\n        }\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'Expense Approved',\r\n          detail: 'Expense has been approved',\r\n          life: 3000\r\n        });\r\n        \r\n        // Close details dialog\r\n        expenseDetailsVisible.value = false;\r\n        \r\n        // Refresh stats\r\n        fetchExpenseStats();\r\n      } catch (error) {\r\n        console.error('Error approving expense:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to approve expense',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        processingAction.value = false;\r\n      }\r\n    };\r\n\r\n    // Open reject dialog\r\n    const openRejectDialog = () => {\r\n      rejectReason.value = '';\r\n      rejectDialogVisible.value = true;\r\n    };\r\n\r\n    // Reject expense\r\n    const rejectExpense = async () => {\r\n      if (!selectedExpense.value || !canReviewExpense.value) return;\r\n      \r\n      processingAction.value = true;\r\n      \r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, we'll simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Update local data\r\n        selectedExpense.value.status = 'rejected';\r\n        selectedExpense.value.updated_at = new Date();\r\n        \r\n        // Add rejection record\r\n        if (!selectedExpense.value.approvals) {\r\n          selectedExpense.value.approvals = [];\r\n        }\r\n        \r\n        selectedExpense.value.approvals.push({\r\n          id: Math.random().toString(36).substring(2, 11),\r\n          status: 'rejected',\r\n          approver_id: store.getters['auth/currentUser'].id,\r\n          approver_name: store.getters['auth/userFullName'],\r\n          comments: rejectReason.value || null,\r\n          created_at: new Date()\r\n        });\r\n        \r\n        // Update in the list\r\n        const index = expenses.value.findIndex(e => e.id === selectedExpense.value.id);\r\n        if (index !== -1) {\r\n          expenses.value[index] = { ...selectedExpense.value };\r\n        }\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'Expense Rejected',\r\n          detail: 'Expense has been rejected',\r\n          life: 3000\r\n        });\r\n        \r\n        // Close dialogs\r\n        rejectDialogVisible.value = false;\r\n        expenseDetailsVisible.value = false;\r\n        \r\n        // Refresh stats\r\n        fetchExpenseStats();\r\n      } catch (error) {\r\n        console.error('Error rejecting expense:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to reject expense',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        processingAction.value = false;\r\n      }\r\n    };\r\n\r\n    // Mark expense as paid\r\n    const markAsPaid = async () => {\r\n      if (!selectedExpense.value || !canMarkAsPaid.value) return;\r\n      \r\n      processingAction.value = true;\r\n      \r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, we'll simulate success\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Update local data\r\n        selectedExpense.value.status = 'paid';\r\n        selectedExpense.value.paid_at = new Date();\r\n        selectedExpense.value.updated_at = new Date();\r\n        \r\n        // Update in the list\r\n        const index = expenses.value.findIndex(e => e.id === selectedExpense.value.id);\r\n        if (index !== -1) {\r\n          expenses.value[index] = { ...selectedExpense.value };\r\n        }\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'Expense Paid',\r\n          detail: 'Expense has been marked as paid',\r\n          life: 3000\r\n        });\r\n        \r\n        // Close details dialog\r\n        expenseDetailsVisible.value = false;\r\n        \r\n        // Refresh stats\r\n        fetchExpenseStats();\r\n      } catch (error) {\r\n        console.error('Error marking expense as paid:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to mark expense as paid',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        processingAction.value = false;\r\n      }\r\n    };\r\n\r\n    // View receipt\r\n    const viewReceipt = () => {\r\n      if (!selectedExpense.value || !selectedExpense.value.receipt_path) return;\r\n      \r\n      // In a real app, this would open the file in a new tab\r\n      window.open(selectedExpense.value.receipt_path, '_blank');\r\n    };\r\n\r\n    // Download receipt from details view\r\n    const downloadReceiptFromDetails = () => {\r\n      if (!selectedExpense.value || !selectedExpense.value.receipt_path) return;\r\n      \r\n      // In a real app, this would trigger a download\r\n      // For now, just simulate opening the file\r\n      window.open(selectedExpense.value.receipt_path, '_blank');\r\n    };\r\n\r\n    // Download receipt from dialog\r\n    const downloadReceipt = () => {\r\n      if (!expense.receiptPath) return;\r\n      \r\n      // In a real app, this would trigger a download\r\n      // For now, just simulate opening the file\r\n      window.open(expense.receiptPath, '_blank');\r\n    };\r\n\r\n    // Row select handler\r\n    const onExpenseSelect = (event) => {\r\n      viewExpense(event.data);\r\n    };\r\n\r\n    // Row unselect handler\r\n    const onExpenseUnselect = () => {\r\n      // Nothing to do here\r\n    };\r\n\r\n    // Initialize component\r\n    onMounted(() => {\r\n      Promise.all([\r\n        fetchExpenses(),\r\n        fetchExpenseStats()\r\n      ]).finally(() => {\r\n        loading.value = false;\r\n      });\r\n    });\r\n\r\n    return {\r\n      loading,\r\n      tableLoading,\r\n      expenses,\r\n      stats,\r\n      selectedExpenses,\r\n      selectedExpense,\r\n      expenseDialogVisible,\r\n      expenseDetailsVisible,\r\n      rejectDialogVisible,\r\n      dialogMode,\r\n      saving,\r\n      submitted,\r\n      processingAction,\r\n      rejectReason,\r\n      selectedFile,\r\n      fileError,\r\n      fileUpload,\r\n      pagination,\r\n      filters,\r\n      expense,\r\n      statusOptions,\r\n      categoryOptions,\r\n      paginationSummary,\r\n      canSubmitExpense,\r\n      canReviewExpense,\r\n      canMarkAsPaid,\r\n      showExpenseActions,\r\n      formattedApprovals,\r\n      isReceiptPdf,\r\n      \r\n      // Methods\r\n      formatStatus,\r\n      formatCurrency,\r\n      formatDate,\r\n      getStatusSeverity,\r\n      getCategorySeverity,\r\n      canEditExpense,\r\n      canDeleteExpense,\r\n      onFilterChange,\r\n      openNewExpenseDialog,\r\n      closeExpenseDialog,\r\n      onFileSelect,\r\n      onFileError,\r\n      viewExpense,\r\n      editExpense,\r\n      editFromDetails,\r\n      confirmDeleteExpense,\r\n      saveExpense,\r\n      submitExpense,\r\n      approveExpense,\r\n      openRejectDialog,\r\n      rejectExpense,\r\n      markAsPaid,\r\n      viewReceipt,\r\n      downloadReceiptFromDetails,\r\n      downloadReceipt,\r\n      onExpenseSelect,\r\n      onExpenseUnselect\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.expenses-container {\r\n  padding: 1rem;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n/* Expense stats cards */\r\n.expense-stats {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.summary-card {\r\n  padding: 1.25rem;\r\n  background-color: var(--surface-card);\r\n  border-radius: 0.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.summary-title {\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.summary-value {\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0.25rem;\r\n  color: var(--text-color);\r\n}\r\n\r\n.summary-count {\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n/* Filters */\r\n.expense-filters {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n/* Loading container */\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3rem;\r\n}\r\n\r\n/* Empty state */\r\n.empty-message {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.empty-message i {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 1rem;\r\n  opacity: 0.6;\r\n}\r\n\r\n/* Action buttons */\r\n.action-buttons {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 0.5rem;\r\n}\r\n\r\n/* Pagination controls */\r\n.pagination-controls {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.pagination-summary {\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n/* Receipt preview */\r\n.receipt-preview {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: var(--surface-ground);\r\n  border-radius: 0.375rem;\r\n  padding: 0.5rem 0.75rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.receipt-preview-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.receipt-preview-info i {\r\n  color: var(--primary-color);\r\n}\r\n\r\n/* Expense details */\r\n.expense-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.expense-amount {\r\n  display: flex;\r\n  align-items: baseline;\r\n}\r\n\r\n.amount-value {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.currency {\r\n  font-size: 1rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.status-tag {\r\n  font-size: 0.875rem;\r\n  padding: 0.375rem 0.75rem;\r\n}\r\n\r\n.expense-info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 1.25rem 2rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.info-label {\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.info-value {\r\n  font-size: 1rem;\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n}\r\n\r\n.description-section h3,\r\n.receipt-section h3,\r\n.approvals-section h3,\r\n.expense-actions h3 {\r\n  font-size: 1.125rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.description-content {\r\n  background-color: var(--surface-ground);\r\n  border-radius: 0.375rem;\r\n  padding: 1rem;\r\n  white-space: pre-line;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.receipt-actions {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n}\r\n\r\n/* Approval timeline */\r\n.approval-timeline {\r\n  margin: 1rem 0;\r\n}\r\n\r\n.approval-item {\r\n  padding: 0.5rem 0;\r\n}\r\n\r\n.approval-date {\r\n  color: var(--text-color-secondary);\r\n  display: block;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.approval-content {\r\n  background-color: var(--surface-ground);\r\n  border-radius: 0.375rem;\r\n  padding: 0.75rem;\r\n}\r\n\r\n.approval-description {\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.approval-user {\r\n  font-weight: 500;\r\n}\r\n\r\n.approval-comments {\r\n  font-style: italic;\r\n  color: var(--text-color-secondary);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n/* Action buttons */\r\n.expense-workflow-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.75rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.review-buttons {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n}\r\n\r\n/* Responsive adaptations */\r\n@media screen and (max-width: 768px) {\r\n  .page-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .expense-info-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .expense-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .review-buttons {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n  \r\n  .review-buttons .p-button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}