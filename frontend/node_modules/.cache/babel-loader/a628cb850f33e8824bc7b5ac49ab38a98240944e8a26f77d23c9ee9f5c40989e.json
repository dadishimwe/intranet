{"ast":null,"code":"import { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'AppFooter',\n  setup() {\n    const store = useStore();\n    const currentYear = ref(new Date().getFullYear());\n\n    // Get system status from store\n    const systemStatus = computed(() => store.getters.systemStatus);\n\n    // Map status to readable text\n    const systemStatusText = computed(() => {\n      switch (systemStatus.value) {\n        case 'healthy':\n          return 'Healthy';\n        case 'warning':\n          return 'Warning';\n        case 'error':\n          return 'Error';\n        default:\n          return 'Unknown';\n      }\n    });\n\n    // Map status to icon\n    const systemStatusIcon = computed(() => {\n      switch (systemStatus.value) {\n        case 'healthy':\n          return 'pi-check-circle';\n        case 'warning':\n          return 'pi-exclamation-triangle';\n        case 'error':\n          return 'pi-times-circle';\n        default:\n          return 'pi-question-circle';\n      }\n    });\n\n    // Map status to CSS class\n    const systemStatusClass = computed(() => {\n      return `status-${systemStatus.value}`;\n    });\n    return {\n      currentYear,\n      systemStatus,\n      systemStatusText,\n      systemStatusIcon,\n      systemStatusClass\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","name","setup","store","currentYear","Date","getFullYear","systemStatus","getters","systemStatusText","value","systemStatusIcon","systemStatusClass"],"sources":["/home/pi/projects/intranet/frontend/src/components/layout/Footer.vue"],"sourcesContent":["<template>\r\n    <footer class=\"footer\">\r\n      <div class=\"footer-content\">\r\n        <div class=\"footer-left\">\r\n          <span class=\"copyright\">\r\n            Â© {{ currentYear }} Corporate Intranet\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"footer-center\">\r\n          <span class=\"version\">\r\n            Version 1.0.0\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"footer-right\">\r\n          <span class=\"system-status\" :class=\"systemStatusClass\">\r\n            <i class=\"pi\" :class=\"systemStatusIcon\"></i>\r\n            System Status: {{ systemStatusText }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </template>\r\n  \r\n  <script>\r\n  import { computed, ref } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  \r\n  export default {\r\n    name: 'AppFooter',\r\n    setup() {\r\n      const store = useStore();\r\n      const currentYear = ref(new Date().getFullYear());\r\n      \r\n      // Get system status from store\r\n      const systemStatus = computed(() => store.getters.systemStatus);\r\n      \r\n      // Map status to readable text\r\n      const systemStatusText = computed(() => {\r\n        switch (systemStatus.value) {\r\n          case 'healthy':\r\n            return 'Healthy';\r\n          case 'warning':\r\n            return 'Warning';\r\n          case 'error':\r\n            return 'Error';\r\n          default:\r\n            return 'Unknown';\r\n        }\r\n      });\r\n      \r\n      // Map status to icon\r\n      const systemStatusIcon = computed(() => {\r\n        switch (systemStatus.value) {\r\n          case 'healthy':\r\n            return 'pi-check-circle';\r\n          case 'warning':\r\n            return 'pi-exclamation-triangle';\r\n          case 'error':\r\n            return 'pi-times-circle';\r\n          default:\r\n            return 'pi-question-circle';\r\n        }\r\n      });\r\n      \r\n      // Map status to CSS class\r\n      const systemStatusClass = computed(() => {\r\n        return `status-${systemStatus.value}`;\r\n      });\r\n      \r\n      return {\r\n        currentYear,\r\n        systemStatus,\r\n        systemStatusText,\r\n        systemStatusIcon,\r\n        systemStatusClass\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .footer {\r\n    background-color: var(--surface-section);\r\n    border-top: 1px solid var(--surface-border);\r\n    padding: 0.5rem 1.5rem;\r\n    color: var(--text-color-secondary);\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  .footer-content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .copyright {\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .version {\r\n    font-size: 0.75rem;\r\n  }\r\n  \r\n  .system-status {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .system-status i {\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  /* Status colors */\r\n  .status-healthy {\r\n    color: var(--success-color);\r\n  }\r\n  \r\n  .status-warning {\r\n    color: var(--warning-color);\r\n  }\r\n  \r\n  .status-error {\r\n    color: var(--danger-color);\r\n  }\r\n  \r\n  .status-unknown {\r\n    color: var(--text-color-secondary);\r\n  }\r\n  \r\n  /* Responsive adjustments */\r\n  @media screen and (max-width: 640px) {\r\n    .footer-content {\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n      text-align: center;\r\n    }\r\n  }\r\n  </style>"],"mappings":"AA0BE,SAASA,QAAQ,EAAEC,GAAE,QAAS,KAAK;AACnC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,WAAU,GAAIL,GAAG,CAAC,IAAIM,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;;IAEjD;IACA,MAAMC,YAAW,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACK,OAAO,CAACD,YAAY,CAAC;;IAE/D;IACA,MAAME,gBAAe,GAAIX,QAAQ,CAAC,MAAM;MACtC,QAAQS,YAAY,CAACG,KAAK;QACxB,KAAK,SAAS;UACZ,OAAO,SAAS;QAClB,KAAK,SAAS;UACZ,OAAO,SAAS;QAClB,KAAK,OAAO;UACV,OAAO,OAAO;QAChB;UACE,OAAO,SAAS;MACpB;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,gBAAe,GAAIb,QAAQ,CAAC,MAAM;MACtC,QAAQS,YAAY,CAACG,KAAK;QACxB,KAAK,SAAS;UACZ,OAAO,iBAAiB;QAC1B,KAAK,SAAS;UACZ,OAAO,yBAAyB;QAClC,KAAK,OAAO;UACV,OAAO,iBAAiB;QAC1B;UACE,OAAO,oBAAoB;MAC/B;IACF,CAAC,CAAC;;IAEF;IACA,MAAME,iBAAgB,GAAId,QAAQ,CAAC,MAAM;MACvC,OAAO,UAAUS,YAAY,CAACG,KAAK,EAAE;IACvC,CAAC,CAAC;IAEF,OAAO;MACLN,WAAW;MACXG,YAAY;MACZE,gBAAgB;MAChBE,gBAAgB;MAChBC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}