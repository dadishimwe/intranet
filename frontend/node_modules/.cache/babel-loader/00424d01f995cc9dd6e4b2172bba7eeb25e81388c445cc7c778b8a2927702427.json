{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { useConfirm } from 'primevue/useconfirm';\nimport InputText from 'primevue/inputtext';\nimport Button from 'primevue/button';\nimport Dropdown from 'primevue/dropdown';\nimport ProgressSpinner from 'primevue/progressspinner';\nimport ProgressBar from 'primevue/progressbar';\nimport FileUpload from 'primevue/fileupload';\nimport Paginator from 'primevue/paginator';\nimport Dialog from 'primevue/dialog';\nimport Textarea from 'primevue/textarea';\nimport Checkbox from 'primevue/checkbox';\nimport Tag from 'primevue/tag';\nimport ConfirmDialog from 'primevue/confirmdialog';\nimport api from '../services/api';\nexport default {\n  name: 'DocumentsView',\n  components: {\n    InputText,\n    Button,\n    Dropdown,\n    ProgressSpinner,\n    ProgressBar,\n    FileUpload,\n    Paginator,\n    Dialog,\n    Textarea,\n    Checkbox,\n    Tag,\n    ConfirmDialog\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const confirm = useConfirm();\n\n    // State\n    const loading = ref(false);\n    const documents = ref([]);\n    const selectedDocument = ref(null);\n    const selectedFile = ref(null);\n    const uploading = ref(false);\n    const uploadProgress = ref(0);\n    const submitted = ref(false);\n    const editSubmitted = ref(false);\n    const uploadDialogVisible = ref(false);\n    const editDialogVisible = ref(false);\n\n    // Pagination\n    const pagination = ref({\n      current_page: 1,\n      per_page: 20,\n      total: 0,\n      last_page: 1\n    });\n\n    // Filters\n    const filters = reactive({\n      searchTerm: '',\n      category: null,\n      departmentId: null\n    });\n\n    // Form data\n    const documentForm = reactive({\n      title: '',\n      description: '',\n      category: null,\n      departmentId: null,\n      isPublic: false\n    });\n    const editForm = reactive({\n      title: '',\n      description: '',\n      category: null,\n      departmentId: null,\n      isPublic: false\n    });\n\n    // Computed values\n    const isAdmin = computed(() => store.getters['auth/isAdmin']);\n    const currentUser = computed(() => store.getters['auth/currentUser']);\n    const categories = computed(() => [{\n      name: 'All Categories',\n      value: null\n    }, {\n      name: 'Report',\n      value: 'report'\n    }, {\n      name: 'Policy',\n      value: 'policy'\n    }, {\n      name: 'Procedure',\n      value: 'procedure'\n    }, {\n      name: 'Form',\n      value: 'form'\n    }, {\n      name: 'Presentation',\n      value: 'presentation'\n    }, {\n      name: 'Template',\n      value: 'template'\n    }, {\n      name: 'Financial',\n      value: 'financial'\n    }, {\n      name: 'HR',\n      value: 'hr'\n    }, {\n      name: 'Marketing',\n      value: 'marketing'\n    }, {\n      name: 'Technical',\n      value: 'technical'\n    }, {\n      name: 'Other',\n      value: 'other'\n    }]);\n    const departments = computed(() => {\n      const depts = [{\n        name: 'All Departments',\n        value: null\n      }];\n      const departmentsList = store.state.departments?.list || [];\n      departmentsList.forEach(dept => {\n        depts.push({\n          name: dept.name,\n          id: dept.id\n        });\n      });\n      return depts;\n    });\n\n    // Methods\n    const loadDocuments = async (page = 1) => {\n      try {\n        loading.value = true;\n        const response = await api.get('/api/documents', {\n          params: {\n            page,\n            limit: pagination.value.per_page,\n            search: filters.searchTerm || undefined,\n            category: filters.category || undefined,\n            departmentId: filters.departmentId || undefined\n          }\n        });\n        documents.value = response.data.data;\n        pagination.value = response.data.pagination;\n      } catch (error) {\n        console.error('Error loading documents:', error);\n        store.dispatch('showToast', {\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to load documents'\n        });\n      } finally {\n        loading.value = false;\n      }\n    };\n    const onPageChange = event => {\n      const page = event.page + 1;\n      loadDocuments(page);\n    };\n    const clearFilters = () => {\n      filters.searchTerm = '';\n      filters.category = null;\n      filters.departmentId = null;\n      loadDocuments();\n    };\n    const openUploadDialog = () => {\n      // Reset form\n      documentForm.title = '';\n      documentForm.description = '';\n      documentForm.category = null;\n      documentForm.departmentId = currentUser.value?.departmentId || null;\n      documentForm.isPublic = false;\n      selectedFile.value = null;\n      submitted.value = false;\n      uploadDialogVisible.value = true;\n    };\n    const closeUploadDialog = () => {\n      if (uploading.value) return;\n      uploadDialogVisible.value = false;\n    };\n    const onFileSelect = event => {\n      selectedFile.value = event.files[0];\n\n      // Auto-fill title from filename if empty\n      if (!documentForm.title && selectedFile.value) {\n        // Remove extension\n        const filename = selectedFile.value.name.replace(/\\.[^/.]+$/, '');\n        documentForm.title = filename;\n      }\n\n      // Auto-detect category from file type if empty\n      if (!documentForm.category && selectedFile.value) {\n        const fileType = selectedFile.value.type;\n        if (fileType.includes('pdf')) {\n          documentForm.category = 'report';\n        } else if (fileType.includes('word')) {\n          documentForm.category = 'policy';\n        } else if (fileType.includes('excel') || fileType.includes('spreadsheet')) {\n          documentForm.category = 'financial';\n        } else if (fileType.includes('powerpoint') || fileType.includes('presentation')) {\n          documentForm.category = 'presentation';\n        }\n      }\n    };\n    const onFileClear = () => {\n      selectedFile.value = null;\n    };\n    const uploadDocument = async () => {\n      submitted.value = true;\n\n      // Validate form\n      if (!documentForm.title || !selectedFile.value) {\n        return;\n      }\n      try {\n        uploading.value = true;\n        uploadProgress.value = 0;\n\n        // Create form data\n        const formData = new FormData();\n        formData.append('title', documentForm.title);\n        formData.append('document', selectedFile.value);\n        if (documentForm.description) {\n          formData.append('description', documentForm.description);\n        }\n        if (documentForm.category) {\n          formData.append('category', documentForm.category);\n        }\n        if (documentForm.departmentId) {\n          formData.append('departmentId', documentForm.departmentId);\n        }\n        formData.append('isPublic', documentForm.isPublic);\n\n        // Upload with progress tracking\n        const response = await api.post('/api/documents', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            uploadProgress.value = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          }\n        });\n\n        // Add document to list\n        documents.value.unshift(response.data.data);\n\n        // Close dialog\n        uploadDialogVisible.value = false;\n\n        // Show success message\n        store.dispatch('showToast', {\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Document uploaded successfully'\n        });\n      } catch (error) {\n        console.error('Error uploading document:', error);\n        store.dispatch('showToast', {\n          severity: 'error',\n          summary: 'Error',\n          detail: error.response?.data?.message || 'Failed to upload document'\n        });\n      } finally {\n        uploading.value = false;\n      }\n    };\n    const viewDocument = id => {\n      router.push(`/documents/${id}`);\n    };\n    const downloadDocument = doc => {\n      // In production, this would trigger a direct download\n      if (doc.file_path) {\n        window.open(doc.file_path, '_blank');\n      }\n    };\n    const canEditDocument = doc => {\n      if (isAdmin.value) return true;\n      return doc.created_by === currentUser.value?.id;\n    };\n    const canDeleteDocument = doc => {\n      if (isAdmin.value) return true;\n      return doc.created_by === currentUser.value?.id;\n    };\n    const editDocument = doc => {\n      selectedDocument.value = doc;\n\n      // Copy values to edit form\n      editForm.title = doc.title;\n      editForm.description = doc.description || '';\n      editForm.category = doc.category;\n      editForm.departmentId = doc.department_id;\n      editForm.isPublic = doc.is_public;\n      editSubmitted.value = false;\n      editDialogVisible.value = true;\n    };\n    const closeEditDialog = () => {\n      editDialogVisible.value = false;\n    };\n    const saveDocumentChanges = async () => {\n      editSubmitted.value = true;\n\n      // Validate form\n      if (!editForm.title) {\n        return;\n      }\n      try {\n        loading.value = true;\n        const response = await api.put(`/api/documents/${selectedDocument.value.id}`, {\n          title: editForm.title,\n          description: editForm.description,\n          category: editForm.category,\n          departmentId: editForm.departmentId,\n          isPublic: editForm.isPublic\n        });\n\n        // Update document in list\n        const index = documents.value.findIndex(d => d.id === selectedDocument.value.id);\n        if (index !== -1) {\n          documents.value[index] = response.data.data;\n        }\n\n        // Close dialog\n        editDialogVisible.value = false;\n\n        // Show success message\n        store.dispatch('showToast', {\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Document updated successfully'\n        });\n      } catch (error) {\n        console.error('Error updating document:', error);\n        store.dispatch('showToast', {\n          severity: 'error',\n          summary: 'Error',\n          detail: error.response?.data?.message || 'Failed to update document'\n        });\n      } finally {\n        loading.value = false;\n      }\n    };\n    const confirmDeleteDocument = doc => {\n      confirm.require({\n        message: 'Are you sure you want to delete this document?',\n        header: 'Delete Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        acceptClass: 'p-button-danger',\n        accept: () => deleteDocument(doc),\n        reject: () => {}\n      });\n    };\n    const deleteDocument = async doc => {\n      try {\n        loading.value = true;\n        await api.delete(`/api/documents/${doc.id}`);\n\n        // Remove document from list\n        documents.value = documents.value.filter(d => d.id !== doc.id);\n\n        // Show success message\n        store.dispatch('showToast', {\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Document deleted successfully'\n        });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        store.dispatch('showToast', {\n          severity: 'error',\n          summary: 'Error',\n          detail: error.response?.data?.message || 'Failed to delete document'\n        });\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    };\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n    const formatFileType = type => {\n      if (!type) return 'Unknown';\n      const lookup = {\n        'application/pdf': 'PDF',\n        'application/msword': 'Word',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'Word',\n        'application/vnd.ms-excel': 'Excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'Excel',\n        'application/vnd.ms-powerpoint': 'PowerPoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'PowerPoint',\n        'text/plain': 'Text',\n        'image/jpeg': 'JPEG',\n        'image/png': 'PNG'\n      };\n      return lookup[type] || type.split('/')[1].toUpperCase();\n    };\n    const getDocumentIcon = fileType => {\n      if (!fileType) return 'pi-file-o';\n      const type = fileType.toLowerCase();\n      if (type.includes('pdf')) return 'pi-file-pdf';\n      if (type.includes('word') || type.includes('document')) return 'pi-file-word';\n      if (type.includes('excel') || type.includes('sheet')) return 'pi-file-excel';\n      if (type.includes('powerpoint') || type.includes('presentation')) return 'pi-file-powerpoint';\n      if (type.includes('zip') || type.includes('rar')) return 'pi-file-archive';\n      if (type.includes('jpg') || type.includes('jpeg') || type.includes('png') || type.includes('gif')) return 'pi-file-image';\n      if (type.includes('text') || type.includes('txt')) return 'pi-file-lines';\n      return 'pi-file-o';\n    };\n    const truncateText = (text, maxLength) => {\n      if (!text) return '';\n      if (text.length <= maxLength) return text;\n      return text.substr(0, maxLength) + '...';\n    };\n\n    // Load departments on mount\n    onMounted(async () => {\n      try {\n        await store.dispatch('departments/fetchDepartments');\n        loadDocuments();\n      } catch (error) {\n        console.error('Error initializing documents page:', error);\n      }\n    });\n    return {\n      // State\n      loading,\n      documents,\n      pagination,\n      filters,\n      uploadDialogVisible,\n      editDialogVisible,\n      documentForm,\n      editForm,\n      selectedDocument,\n      selectedFile,\n      uploading,\n      uploadProgress,\n      submitted,\n      editSubmitted,\n      // Computed\n      categories,\n      departments,\n      // Methods\n      loadDocuments,\n      onPageChange,\n      clearFilters,\n      openUploadDialog,\n      closeUploadDialog,\n      onFileSelect,\n      onFileClear,\n      uploadDocument,\n      viewDocument,\n      downloadDocument,\n      canEditDocument,\n      canDeleteDocument,\n      editDocument,\n      closeEditDialog,\n      saveDocumentChanges,\n      confirmDeleteDocument,\n      // Formatters\n      formatDate,\n      formatFileSize,\n      formatFileType,\n      getDocumentIcon,\n      truncateText\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","useRouter","useConfirm","InputText","Button","Dropdown","ProgressSpinner","ProgressBar","FileUpload","Paginator","Dialog","Textarea","Checkbox","Tag","ConfirmDialog","api","name","components","setup","store","router","confirm","loading","documents","selectedDocument","selectedFile","uploading","uploadProgress","submitted","editSubmitted","uploadDialogVisible","editDialogVisible","pagination","current_page","per_page","total","last_page","filters","searchTerm","category","departmentId","documentForm","title","description","isPublic","editForm","isAdmin","getters","currentUser","categories","value","departments","depts","departmentsList","state","list","forEach","dept","push","id","loadDocuments","page","response","get","params","limit","search","undefined","data","error","console","dispatch","severity","summary","detail","onPageChange","event","clearFilters","openUploadDialog","closeUploadDialog","onFileSelect","files","filename","replace","fileType","type","includes","onFileClear","uploadDocument","formData","FormData","append","post","headers","onUploadProgress","progressEvent","Math","round","loaded","unshift","message","viewDocument","downloadDocument","doc","file_path","window","open","canEditDocument","created_by","canDeleteDocument","editDocument","department_id","is_public","closeEditDialog","saveDocumentChanges","put","index","findIndex","d","confirmDeleteDocument","require","header","icon","acceptClass","accept","deleteDocument","reject","delete","filter","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","formatFileType","lookup","split","toUpperCase","getDocumentIcon","toLowerCase","truncateText","text","maxLength","length","substr"],"sources":["/home/pi/projects/intranet/frontend/src/views/Documents.vue"],"sourcesContent":["<template>\r\n    <div class=\"documents-container\">\r\n      <div class=\"page-header\">\r\n        <h1 class=\"page-title\">Document Repository</h1>\r\n        <div class=\"page-actions\">\r\n          <Button \r\n            label=\"Upload Document\" \r\n            icon=\"pi pi-upload\" \r\n            class=\"p-button-primary\" \r\n            @click=\"openUploadDialog\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Filters -->\r\n      <div class=\"card filter-card\">\r\n        <div class=\"grid\">\r\n          <div class=\"col-12 md:col-4\">\r\n            <span class=\"p-input-icon-left w-full\">\r\n              <i class=\"pi pi-search\" />\r\n              <InputText \r\n                v-model=\"filters.searchTerm\" \r\n                placeholder=\"Search documents\" \r\n                class=\"w-full\"\r\n                @keyup.enter=\"loadDocuments\"\r\n              />\r\n            </span>\r\n          </div>\r\n          \r\n          <div class=\"col-12 md:col-3\">\r\n            <Dropdown\r\n              v-model=\"filters.category\"\r\n              :options=\"categories\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"value\"\r\n              placeholder=\"Select category\"\r\n              class=\"w-full\"\r\n              @change=\"loadDocuments\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"col-12 md:col-3\">\r\n            <Dropdown\r\n              v-model=\"filters.departmentId\"\r\n              :options=\"departments\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"id\"\r\n              placeholder=\"Select department\"\r\n              class=\"w-full\"\r\n              @change=\"loadDocuments\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"col-12 md:col-2\">\r\n            <Button \r\n              icon=\"pi pi-filter-slash\" \r\n              label=\"Clear\" \r\n              class=\"p-button-outlined w-full\" \r\n              @click=\"clearFilters\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Loading state -->\r\n      <div v-if=\"loading\" class=\"card loading-card\">\r\n        <ProgressSpinner class=\"spinner\" />\r\n        <p>Loading documents...</p>\r\n      </div>\r\n      \r\n      <!-- Empty state -->\r\n      <div v-else-if=\"documents.length === 0\" class=\"card empty-state\">\r\n        <i class=\"pi pi-folder-open empty-icon\"></i>\r\n        <h3>No documents found</h3>\r\n        <p>There are no documents matching your criteria. Try adjusting your filters or upload a new document.</p>\r\n        <Button label=\"Upload Document\" icon=\"pi pi-upload\" @click=\"openUploadDialog\" />\r\n      </div>\r\n      \r\n      <!-- Documents list -->\r\n      <div v-else class=\"document-list\">\r\n        <div class=\"grid\">\r\n          <div \r\n            v-for=\"doc in documents\" \r\n            :key=\"doc.id\" \r\n            class=\"col-12 md:col-6 lg:col-4\"\r\n          >\r\n            <div class=\"card document-card\">\r\n              <div class=\"document-card-content\">\r\n                <div class=\"document-icon-container\">\r\n                  <i class=\"document-icon pi\" :class=\"getDocumentIcon(doc.file_type)\"></i>\r\n                </div>\r\n                \r\n                <div class=\"document-details\">\r\n                  <div class=\"document-title\">{{ doc.title }}</div>\r\n                  <div class=\"document-meta\">\r\n                    <span class=\"document-type\">{{ formatFileType(doc.file_type) }}</span>\r\n                    <span class=\"document-date\">{{ formatDate(doc.created_at) }}</span>\r\n                  </div>\r\n                  <div class=\"document-info\">\r\n                    <span v-if=\"doc.department_name\" class=\"document-department\">\r\n                      <i class=\"pi pi-building\"></i> {{ doc.department_name }}\r\n                    </span>\r\n                    <span class=\"document-size\">\r\n                      <i class=\"pi pi-file\"></i> {{ formatFileSize(doc.file_size) }}\r\n                    </span>\r\n                  </div>\r\n                  <div v-if=\"doc.description\" class=\"document-description\">\r\n                    {{ truncateText(doc.description, 100) }}\r\n                  </div>\r\n                  <Tag \r\n                    v-if=\"doc.is_public\" \r\n                    severity=\"info\" \r\n                    value=\"Public\" \r\n                    class=\"document-tag\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"document-actions\">\r\n                <Button \r\n                  icon=\"pi pi-eye\" \r\n                  class=\"p-button-rounded p-button-text\" \r\n                  @click=\"viewDocument(doc.id)\"\r\n                  tooltip=\"View\"\r\n                  tooltipOptions=\"{ position: 'top' }\"\r\n                />\r\n                <Button \r\n                  icon=\"pi pi-download\" \r\n                  class=\"p-button-rounded p-button-text\" \r\n                  @click=\"downloadDocument(doc)\"\r\n                  tooltip=\"Download\"\r\n                  tooltipOptions=\"{ position: 'top' }\"\r\n                />\r\n                <Button \r\n                  v-if=\"canEditDocument(doc)\"\r\n                  icon=\"pi pi-pencil\" \r\n                  class=\"p-button-rounded p-button-text\" \r\n                  @click=\"editDocument(doc)\"\r\n                  tooltip=\"Edit\"\r\n                  tooltipOptions=\"{ position: 'top' }\"\r\n                />\r\n                <Button \r\n                  v-if=\"canDeleteDocument(doc)\"\r\n                  icon=\"pi pi-trash\" \r\n                  class=\"p-button-rounded p-button-text p-button-danger\" \r\n                  @click=\"confirmDeleteDocument(doc)\"\r\n                  tooltip=\"Delete\"\r\n                  tooltipOptions=\"{ position: 'top' }\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Pagination -->\r\n        <div class=\"pagination-container\">\r\n          <Paginator \r\n            v-if=\"pagination.total > pagination.per_page\"\r\n            :rows=\"pagination.per_page\" \r\n            :totalRecords=\"pagination.total\"\r\n            :first=\"(pagination.current_page - 1) * pagination.per_page\"\r\n            :rowsPerPageOptions=\"[10, 20, 50]\"\r\n            @page=\"onPageChange($event)\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Upload document dialog -->\r\n      <Dialog \r\n        v-model:visible=\"uploadDialogVisible\" \r\n        header=\"Upload Document\" \r\n        :modal=\"true\"\r\n        :style=\"{ width: '500px' }\"\r\n        :closable=\"!uploading\"\r\n        :closeOnEscape=\"!uploading\"\r\n      >\r\n        <div class=\"upload-form\">\r\n          <div class=\"form-field\">\r\n            <label for=\"documentTitle\">Title <span class=\"required\">*</span></label>\r\n            <InputText \r\n              id=\"documentTitle\" \r\n              v-model=\"documentForm.title\" \r\n              class=\"w-full\"\r\n              :disabled=\"uploading\"\r\n              :class=\"{ 'p-invalid': submitted && !documentForm.title }\"\r\n            />\r\n            <small v-if=\"submitted && !documentForm.title\" class=\"p-error\">Title is required</small>\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <label for=\"documentDescription\">Description</label>\r\n            <Textarea \r\n              id=\"documentDescription\" \r\n              v-model=\"documentForm.description\" \r\n              rows=\"3\" \r\n              class=\"w-full\"\r\n              :disabled=\"uploading\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <label for=\"documentCategory\">Category</label>\r\n            <Dropdown\r\n              id=\"documentCategory\"\r\n              v-model=\"documentForm.category\"\r\n              :options=\"categories\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"value\"\r\n              placeholder=\"Select category\"\r\n              class=\"w-full\"\r\n              :disabled=\"uploading\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <label for=\"documentDepartment\">Department</label>\r\n            <Dropdown\r\n              id=\"documentDepartment\"\r\n              v-model=\"documentForm.departmentId\"\r\n              :options=\"departments\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"id\"\r\n              placeholder=\"Select department\"\r\n              class=\"w-full\"\r\n              :disabled=\"uploading\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <div class=\"flex align-items-center\">\r\n              <Checkbox \r\n                id=\"isPublic\" \r\n                v-model=\"documentForm.isPublic\" \r\n                :binary=\"true\"\r\n                :disabled=\"uploading\"\r\n              />\r\n              <label for=\"isPublic\" class=\"ml-2\">Make document public</label>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-field file-upload\">\r\n            <label>Document File <span class=\"required\">*</span></label>\r\n            <FileUpload\r\n              name=\"document\"\r\n              :multiple=\"false\"\r\n              accept=\"application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-powerpoint, application/vnd.openxmlformats-officedocument.presentationml.presentation, text/plain, image/jpeg, image/png\"\r\n              :maxFileSize=\"10000000\"\r\n              @select=\"onFileSelect\"\r\n              @clear=\"onFileClear\"\r\n              :disabled=\"uploading\"\r\n              :auto=\"false\"\r\n              chooseLabel=\"Select Document\"\r\n              :class=\"{ 'p-invalid': submitted && !selectedFile }\"\r\n            >\r\n              <template #empty>\r\n                <p>Drag and drop a file here or click to browse.</p>\r\n                <p class=\"text-sm\">Supported formats: PDF, Word, Excel, PowerPoint, Text, and Images</p>\r\n                <p class=\"text-sm\">Maximum file size: 10MB</p>\r\n              </template>\r\n            </FileUpload>\r\n            <small v-if=\"submitted && !selectedFile\" class=\"p-error\">Document file is required</small>\r\n          </div>\r\n          \r\n          <ProgressBar v-if=\"uploading\" :value=\"uploadProgress\" class=\"mt-3\" />\r\n        </div>\r\n        \r\n        <template #footer>\r\n          <Button \r\n            label=\"Cancel\" \r\n            icon=\"pi pi-times\" \r\n            class=\"p-button-text\" \r\n            @click=\"closeUploadDialog\" \r\n            :disabled=\"uploading\"\r\n          />\r\n          <Button \r\n            label=\"Upload\" \r\n            icon=\"pi pi-upload\" \r\n            @click=\"uploadDocument\" \r\n            :loading=\"uploading\"\r\n          />\r\n        </template>\r\n      </Dialog>\r\n      \r\n      <!-- Edit document dialog -->\r\n      <Dialog \r\n        v-model:visible=\"editDialogVisible\" \r\n        header=\"Edit Document\" \r\n        :modal=\"true\"\r\n        :style=\"{ width: '500px' }\"\r\n      >\r\n        <div class=\"edit-form\" v-if=\"selectedDocument\">\r\n          <div class=\"form-field\">\r\n            <label for=\"editTitle\">Title <span class=\"required\">*</span></label>\r\n            <InputText \r\n              id=\"editTitle\" \r\n              v-model=\"editForm.title\" \r\n              class=\"w-full\"\r\n              :class=\"{ 'p-invalid': editSubmitted && !editForm.title }\"\r\n            />\r\n            <small v-if=\"editSubmitted && !editForm.title\" class=\"p-error\">Title is required</small>\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <label for=\"editDescription\">Description</label>\r\n            <Textarea \r\n              id=\"editDescription\" \r\n              v-model=\"editForm.description\" \r\n              rows=\"3\" \r\n              class=\"w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <label for=\"editCategory\">Category</label>\r\n            <Dropdown\r\n              id=\"editCategory\"\r\n              v-model=\"editForm.category\"\r\n              :options=\"categories\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"value\"\r\n              placeholder=\"Select category\"\r\n              class=\"w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <label for=\"editDepartment\">Department</label>\r\n            <Dropdown\r\n              id=\"editDepartment\"\r\n              v-model=\"editForm.departmentId\"\r\n              :options=\"departments\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"id\"\r\n              placeholder=\"Select department\"\r\n              class=\"w-full\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-field\">\r\n            <div class=\"flex align-items-center\">\r\n              <Checkbox \r\n                id=\"editIsPublic\" \r\n                v-model=\"editForm.isPublic\" \r\n                :binary=\"true\"\r\n              />\r\n              <label for=\"editIsPublic\" class=\"ml-2\">Make document public</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <template #footer>\r\n          <Button \r\n            label=\"Cancel\" \r\n            icon=\"pi pi-times\" \r\n            class=\"p-button-text\" \r\n            @click=\"closeEditDialog\"\r\n          />\r\n          <Button \r\n            label=\"Save\" \r\n            icon=\"pi pi-check\" \r\n            @click=\"saveDocumentChanges\"\r\n          />\r\n        </template>\r\n      </Dialog>\r\n      \r\n      <!-- Delete confirmation dialog -->\r\n      <ConfirmDialog></ConfirmDialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, reactive, computed, onMounted } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import { useConfirm } from 'primevue/useconfirm';\r\n  import InputText from 'primevue/inputtext';\r\n  import Button from 'primevue/button';\r\n  import Dropdown from 'primevue/dropdown';\r\n  import ProgressSpinner from 'primevue/progressspinner';\r\n  import ProgressBar from 'primevue/progressbar';\r\n  import FileUpload from 'primevue/fileupload';\r\n  import Paginator from 'primevue/paginator';\r\n  import Dialog from 'primevue/dialog';\r\n  import Textarea from 'primevue/textarea';\r\n  import Checkbox from 'primevue/checkbox';\r\n  import Tag from 'primevue/tag';\r\n  import ConfirmDialog from 'primevue/confirmdialog';\r\n  import api from '../services/api';\r\n  \r\n  export default {\r\n    name: 'DocumentsView',\r\n    components: {\r\n      InputText,\r\n      Button,\r\n      Dropdown,\r\n      ProgressSpinner,\r\n      ProgressBar,\r\n      FileUpload,\r\n      Paginator,\r\n      Dialog,\r\n      Textarea,\r\n      Checkbox,\r\n      Tag,\r\n      ConfirmDialog\r\n    },\r\n    \r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n      const confirm = useConfirm();\r\n      \r\n      // State\r\n      const loading = ref(false);\r\n      const documents = ref([]);\r\n      const selectedDocument = ref(null);\r\n      const selectedFile = ref(null);\r\n      const uploading = ref(false);\r\n      const uploadProgress = ref(0);\r\n      const submitted = ref(false);\r\n      const editSubmitted = ref(false);\r\n      const uploadDialogVisible = ref(false);\r\n      const editDialogVisible = ref(false);\r\n      \r\n      // Pagination\r\n      const pagination = ref({\r\n        current_page: 1,\r\n        per_page: 20,\r\n        total: 0,\r\n        last_page: 1\r\n      });\r\n      \r\n      // Filters\r\n      const filters = reactive({\r\n        searchTerm: '',\r\n        category: null,\r\n        departmentId: null\r\n      });\r\n      \r\n      // Form data\r\n      const documentForm = reactive({\r\n        title: '',\r\n        description: '',\r\n        category: null,\r\n        departmentId: null,\r\n        isPublic: false\r\n      });\r\n      \r\n      const editForm = reactive({\r\n        title: '',\r\n        description: '',\r\n        category: null,\r\n        departmentId: null,\r\n        isPublic: false\r\n      });\r\n      \r\n      // Computed values\r\n      const isAdmin = computed(() => store.getters['auth/isAdmin']);\r\n      const currentUser = computed(() => store.getters['auth/currentUser']);\r\n      \r\n      const categories = computed(() => [\r\n        { name: 'All Categories', value: null },\r\n        { name: 'Report', value: 'report' },\r\n        { name: 'Policy', value: 'policy' },\r\n        { name: 'Procedure', value: 'procedure' },\r\n        { name: 'Form', value: 'form' },\r\n        { name: 'Presentation', value: 'presentation' },\r\n        { name: 'Template', value: 'template' },\r\n        { name: 'Financial', value: 'financial' },\r\n        { name: 'HR', value: 'hr' },\r\n        { name: 'Marketing', value: 'marketing' },\r\n        { name: 'Technical', value: 'technical' },\r\n        { name: 'Other', value: 'other' }\r\n      ]);\r\n      \r\n      const departments = computed(() => {\r\n        const depts = [{ name: 'All Departments', value: null }];\r\n        const departmentsList = store.state.departments?.list || [];\r\n        \r\n        departmentsList.forEach(dept => {\r\n          depts.push({\r\n            name: dept.name,\r\n            id: dept.id\r\n          });\r\n        });\r\n        \r\n        return depts;\r\n      });\r\n      \r\n      // Methods\r\n      const loadDocuments = async (page = 1) => {\r\n        try {\r\n          loading.value = true;\r\n          \r\n          const response = await api.get('/api/documents', {\r\n            params: {\r\n              page,\r\n              limit: pagination.value.per_page,\r\n              search: filters.searchTerm || undefined,\r\n              category: filters.category || undefined,\r\n              departmentId: filters.departmentId || undefined\r\n            }\r\n          });\r\n          \r\n          documents.value = response.data.data;\r\n          pagination.value = response.data.pagination;\r\n        } catch (error) {\r\n          console.error('Error loading documents:', error);\r\n          store.dispatch('showToast', {\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: 'Failed to load documents'\r\n          });\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n      \r\n      const onPageChange = (event) => {\r\n        const page = event.page + 1;\r\n        loadDocuments(page);\r\n      };\r\n      \r\n      const clearFilters = () => {\r\n        filters.searchTerm = '';\r\n        filters.category = null;\r\n        filters.departmentId = null;\r\n        loadDocuments();\r\n      };\r\n      \r\n      const openUploadDialog = () => {\r\n        // Reset form\r\n        documentForm.title = '';\r\n        documentForm.description = '';\r\n        documentForm.category = null;\r\n        documentForm.departmentId = currentUser.value?.departmentId || null;\r\n        documentForm.isPublic = false;\r\n        \r\n        selectedFile.value = null;\r\n        submitted.value = false;\r\n        uploadDialogVisible.value = true;\r\n      };\r\n      \r\n      const closeUploadDialog = () => {\r\n        if (uploading.value) return;\r\n        uploadDialogVisible.value = false;\r\n      };\r\n      \r\n      const onFileSelect = (event) => {\r\n        selectedFile.value = event.files[0];\r\n        \r\n        // Auto-fill title from filename if empty\r\n        if (!documentForm.title && selectedFile.value) {\r\n          // Remove extension\r\n          const filename = selectedFile.value.name.replace(/\\.[^/.]+$/, '');\r\n          documentForm.title = filename;\r\n        }\r\n        \r\n        // Auto-detect category from file type if empty\r\n        if (!documentForm.category && selectedFile.value) {\r\n          const fileType = selectedFile.value.type;\r\n          \r\n          if (fileType.includes('pdf')) {\r\n            documentForm.category = 'report';\r\n          } else if (fileType.includes('word')) {\r\n            documentForm.category = 'policy';\r\n          } else if (fileType.includes('excel') || fileType.includes('spreadsheet')) {\r\n            documentForm.category = 'financial';\r\n          } else if (fileType.includes('powerpoint') || fileType.includes('presentation')) {\r\n            documentForm.category = 'presentation';\r\n          }\r\n        }\r\n      };\r\n      \r\n      const onFileClear = () => {\r\n        selectedFile.value = null;\r\n      };\r\n      \r\n      const uploadDocument = async () => {\r\n        submitted.value = true;\r\n        \r\n        // Validate form\r\n        if (!documentForm.title || !selectedFile.value) {\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          uploading.value = true;\r\n          uploadProgress.value = 0;\r\n          \r\n          // Create form data\r\n          const formData = new FormData();\r\n          formData.append('title', documentForm.title);\r\n          formData.append('document', selectedFile.value);\r\n          \r\n          if (documentForm.description) {\r\n            formData.append('description', documentForm.description);\r\n          }\r\n          \r\n          if (documentForm.category) {\r\n            formData.append('category', documentForm.category);\r\n          }\r\n          \r\n          if (documentForm.departmentId) {\r\n            formData.append('departmentId', documentForm.departmentId);\r\n          }\r\n          \r\n          formData.append('isPublic', documentForm.isPublic);\r\n          \r\n          // Upload with progress tracking\r\n          const response = await api.post('/api/documents', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            },\r\n            onUploadProgress: (progressEvent) => {\r\n              uploadProgress.value = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n            }\r\n          });\r\n          \r\n          // Add document to list\r\n          documents.value.unshift(response.data.data);\r\n          \r\n          // Close dialog\r\n          uploadDialogVisible.value = false;\r\n          \r\n          // Show success message\r\n          store.dispatch('showToast', {\r\n            severity: 'success',\r\n            summary: 'Success',\r\n            detail: 'Document uploaded successfully'\r\n          });\r\n        } catch (error) {\r\n          console.error('Error uploading document:', error);\r\n          store.dispatch('showToast', {\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: error.response?.data?.message || 'Failed to upload document'\r\n          });\r\n        } finally {\r\n          uploading.value = false;\r\n        }\r\n      };\r\n      \r\n      const viewDocument = (id) => {\r\n        router.push(`/documents/${id}`);\r\n      };\r\n      \r\n      const downloadDocument = (doc) => {\r\n        // In production, this would trigger a direct download\r\n        if (doc.file_path) {\r\n          window.open(doc.file_path, '_blank');\r\n        }\r\n      };\r\n      \r\n      const canEditDocument = (doc) => {\r\n        if (isAdmin.value) return true;\r\n        return doc.created_by === currentUser.value?.id;\r\n      };\r\n      \r\n      const canDeleteDocument = (doc) => {\r\n        if (isAdmin.value) return true;\r\n        return doc.created_by === currentUser.value?.id;\r\n      };\r\n      \r\n      const editDocument = (doc) => {\r\n        selectedDocument.value = doc;\r\n        \r\n        // Copy values to edit form\r\n        editForm.title = doc.title;\r\n        editForm.description = doc.description || '';\r\n        editForm.category = doc.category;\r\n        editForm.departmentId = doc.department_id;\r\n        editForm.isPublic = doc.is_public;\r\n        \r\n        editSubmitted.value = false;\r\n        editDialogVisible.value = true;\r\n      };\r\n      \r\n      const closeEditDialog = () => {\r\n        editDialogVisible.value = false;\r\n      };\r\n      \r\n      const saveDocumentChanges = async () => {\r\n        editSubmitted.value = true;\r\n        \r\n        // Validate form\r\n        if (!editForm.title) {\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          loading.value = true;\r\n          \r\n          const response = await api.put(`/api/documents/${selectedDocument.value.id}`, {\r\n            title: editForm.title,\r\n            description: editForm.description,\r\n            category: editForm.category,\r\n            departmentId: editForm.departmentId,\r\n            isPublic: editForm.isPublic\r\n          });\r\n          \r\n          // Update document in list\r\n          const index = documents.value.findIndex(d => d.id === selectedDocument.value.id);\r\n          if (index !== -1) {\r\n            documents.value[index] = response.data.data;\r\n          }\r\n          \r\n          // Close dialog\r\n          editDialogVisible.value = false;\r\n          \r\n          // Show success message\r\n          store.dispatch('showToast', {\r\n            severity: 'success',\r\n            summary: 'Success',\r\n            detail: 'Document updated successfully'\r\n          });\r\n        } catch (error) {\r\n          console.error('Error updating document:', error);\r\n          store.dispatch('showToast', {\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: error.response?.data?.message || 'Failed to update document'\r\n          });\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n      \r\n      const confirmDeleteDocument = (doc) => {\r\n        confirm.require({\r\n          message: 'Are you sure you want to delete this document?',\r\n          header: 'Delete Confirmation',\r\n          icon: 'pi pi-exclamation-triangle',\r\n          acceptClass: 'p-button-danger',\r\n          accept: () => deleteDocument(doc),\r\n          reject: () => {}\r\n        });\r\n      };\r\n      \r\n      const deleteDocument = async (doc) => {\r\n        try {\r\n          loading.value = true;\r\n          \r\n          await api.delete(`/api/documents/${doc.id}`);\r\n          \r\n          // Remove document from list\r\n          documents.value = documents.value.filter(d => d.id !== doc.id);\r\n          \r\n          // Show success message\r\n          store.dispatch('showToast', {\r\n            severity: 'success',\r\n            summary: 'Success',\r\n            detail: 'Document deleted successfully'\r\n          });\r\n        } catch (error) {\r\n          console.error('Error deleting document:', error);\r\n          store.dispatch('showToast', {\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: error.response?.data?.message || 'Failed to delete document'\r\n          });\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n      \r\n      const formatDate = (dateString) => {\r\n        if (!dateString) return '';\r\n        const date = new Date(dateString);\r\n        return date.toLocaleDateString('en-US', {\r\n          year: 'numeric',\r\n          month: 'short',\r\n          day: 'numeric'\r\n        });\r\n      };\r\n      \r\n      const formatFileSize = (bytes) => {\r\n        if (!bytes) return '0 Bytes';\r\n        \r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        \r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n      };\r\n      \r\n      const formatFileType = (type) => {\r\n        if (!type) return 'Unknown';\r\n        \r\n        const lookup = {\r\n          'application/pdf': 'PDF',\r\n          'application/msword': 'Word',\r\n          'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'Word',\r\n          'application/vnd.ms-excel': 'Excel',\r\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'Excel',\r\n          'application/vnd.ms-powerpoint': 'PowerPoint',\r\n          'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'PowerPoint',\r\n          'text/plain': 'Text',\r\n          'image/jpeg': 'JPEG',\r\n          'image/png': 'PNG'\r\n        };\r\n        \r\n        return lookup[type] || type.split('/')[1].toUpperCase();\r\n      };\r\n      \r\n      const getDocumentIcon = (fileType) => {\r\n        if (!fileType) return 'pi-file-o';\r\n        \r\n        const type = fileType.toLowerCase();\r\n        \r\n        if (type.includes('pdf')) return 'pi-file-pdf';\r\n        if (type.includes('word') || type.includes('document')) return 'pi-file-word';\r\n        if (type.includes('excel') || type.includes('sheet')) return 'pi-file-excel';\r\n        if (type.includes('powerpoint') || type.includes('presentation')) return 'pi-file-powerpoint';\r\n        if (type.includes('zip') || type.includes('rar')) return 'pi-file-archive';\r\n        if (type.includes('jpg') || type.includes('jpeg') || \r\n            type.includes('png') || type.includes('gif')) return 'pi-file-image';\r\n        if (type.includes('text') || type.includes('txt')) return 'pi-file-lines';\r\n        \r\n        return 'pi-file-o';\r\n      };\r\n      \r\n      const truncateText = (text, maxLength) => {\r\n        if (!text) return '';\r\n        if (text.length <= maxLength) return text;\r\n        \r\n        return text.substr(0, maxLength) + '...';\r\n      };\r\n      \r\n      // Load departments on mount\r\n      onMounted(async () => {\r\n        try {\r\n          await store.dispatch('departments/fetchDepartments');\r\n          loadDocuments();\r\n        } catch (error) {\r\n          console.error('Error initializing documents page:', error);\r\n        }\r\n      });\r\n      \r\n      return {\r\n        // State\r\n        loading,\r\n        documents,\r\n        pagination,\r\n        filters,\r\n        uploadDialogVisible,\r\n        editDialogVisible,\r\n        documentForm,\r\n        editForm,\r\n        selectedDocument,\r\n        selectedFile,\r\n        uploading,\r\n        uploadProgress,\r\n        submitted,\r\n        editSubmitted,\r\n        \r\n        // Computed\r\n        categories,\r\n        departments,\r\n        \r\n        // Methods\r\n        loadDocuments,\r\n        onPageChange,\r\n        clearFilters,\r\n        openUploadDialog,\r\n        closeUploadDialog,\r\n        onFileSelect,\r\n        onFileClear,\r\n        uploadDocument,\r\n        viewDocument,\r\n        downloadDocument,\r\n        canEditDocument,\r\n        canDeleteDocument,\r\n        editDocument,\r\n        closeEditDialog,\r\n        saveDocumentChanges,\r\n        confirmDeleteDocument,\r\n        \r\n        // Formatters\r\n        formatDate,\r\n        formatFileSize,\r\n        formatFileType,\r\n        getDocumentIcon,\r\n        truncateText\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .documents-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .page-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .page-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n  \r\n  .filter-card {\r\n    margin-bottom: 1.5rem;\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .loading-card, .empty-state {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 3rem;\r\n    text-align: center;\r\n  }\r\n  \r\n  .spinner {\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .empty-icon {\r\n    font-size: 3rem;\r\n    color: var(--text-color-secondary);\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .document-list {\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .document-card {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    transition: transform 0.2s;\r\n  }\r\n  \r\n  .document-card:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .document-card-content {\r\n    display: flex;\r\n    padding: 1rem;\r\n    flex: 1;\r\n  }\r\n  \r\n  .document-icon-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border-radius: 0.5rem;\r\n    margin-right: 1rem;\r\n    background-color: rgba(59, 130, 246, 0.1);\r\n  }\r\n  \r\n  .document-icon {\r\n    font-size: 1.5rem;\r\n    color: var(--primary-color);\r\n  }\r\n  \r\n  .document-details {\r\n    flex: 1;\r\n  }\r\n  \r\n  .document-title {\r\n    font-weight: 600;\r\n    font-size: 1rem;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  \r\n  .document-meta {\r\n    display: flex;\r\n    font-size: 0.75rem;\r\n    color: var(--text-color-secondary);\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .document-type {\r\n    margin-right: 1rem;\r\n  }\r\n  \r\n  .document-info {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: 0.75rem;\r\n    color: var(--text-color-secondary);\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .document-department, .document-size {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 1rem;\r\n  }\r\n  \r\n  .document-department i, .document-size i {\r\n    margin-right: 0.25rem;\r\n  }\r\n  \r\n  .document-description {\r\n    font-size: 0.875rem;\r\n    margin-bottom: 0.5rem;\r\n    color: var(--text-color-secondary);\r\n  }\r\n  \r\n  .document-tag {\r\n    margin-top: 0.25rem;\r\n  }\r\n  \r\n  .document-actions {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding: 0.5rem;\r\n    border-top: 1px solid var(--surface-border);\r\n  }\r\n  \r\n  .pagination-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 1.5rem;\r\n  }\r\n  \r\n  .form-field {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  \r\n  .form-field label {\r\n    display: block;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .form-field .required {\r\n    color: var(--danger-color);\r\n  }\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    .page-header {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n    \r\n    .page-actions {\r\n      margin-top: 1rem;\r\n      width: 100%;\r\n    }\r\n    \r\n    .page-actions button {\r\n      width: 100%;\r\n    }\r\n    \r\n    .document-card-content {\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .document-icon-container {\r\n      margin-right: 0;\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n  </style>\r\n<!-- \r\n  export default {\r\n    name: 'DocumentsView',\r\n    components: {\r\n      InputText,\r\n      Button,\r\n      Dropdown,\r\n      ProgressSpinner,\r\n      ProgressBar,\r\n      FileUpload,\r\n      Paginator,\r\n      Dialog,\r\n      Textarea,\r\n      Checkbox,\r\n      Tag,\r\n      ConfirmDialog-->"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}