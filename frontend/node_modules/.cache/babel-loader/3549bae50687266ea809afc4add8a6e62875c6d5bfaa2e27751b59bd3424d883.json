{"ast":null,"code":"import { ref, reactive, computed, onMounted, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { useConfirm } from 'primevue/useconfirm';\nimport { useToast } from 'primevue/usetoast';\nimport { marked } from 'marked';\nimport DOMPurify from 'dompurify';\n\n// PrimeVue components\nimport Button from 'primevue/button';\nimport InputText from 'primevue/inputtext';\nimport Dropdown from 'primevue/dropdown';\nimport Textarea from 'primevue/textarea';\nimport Chips from 'primevue/chips';\nimport ProgressSpinner from 'primevue/progressspinner';\nimport Dialog from 'primevue/dialog';\nimport TreeTable from 'primevue/treetable';\nimport Column from 'primevue/column';\nimport Breadcrumb from 'primevue/breadcrumb';\nimport Timeline from 'primevue/timeline';\nimport Tooltip from 'primevue/tooltip';\nimport ConfirmDialog from 'primevue/confirmdialog';\nimport Ripple from 'primevue/ripple';\nexport default {\n  name: 'WikiView',\n  components: {\n    Button,\n    InputText,\n    Dropdown,\n    Textarea,\n    Chips,\n    ProgressSpinner,\n    Dialog,\n    TreeTable,\n    Column,\n    Breadcrumb,\n    Timeline,\n    ConfirmDialog\n  },\n  directives: {\n    tooltip: Tooltip,\n    ripple: Ripple\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const confirm = useConfirm();\n    const toast = useToast();\n\n    // State\n    const searchQuery = ref('');\n    const isSearching = ref(false);\n    const pageDialogVisible = ref(false);\n    const revisionsDialogVisible = ref(false);\n    const markdownHelpVisible = ref(false);\n    const dialogMode = ref('create');\n    const submitted = ref(false);\n    const saving = ref(false);\n    const expandedKeys = ref({});\n\n    // Debounce search\n    let searchTimeout = null;\n\n    // Form state for page\n    const pageForm = reactive({\n      id: null,\n      title: '',\n      content: '',\n      parentId: null,\n      departmentId: null,\n      tags: []\n    });\n\n    // Departments (fetch from store or API)\n    const departments = ref([{\n      id: '1',\n      name: 'Finance'\n    }, {\n      id: '2',\n      name: 'Human Resources'\n    }, {\n      id: '3',\n      name: 'Marketing'\n    }, {\n      id: '4',\n      name: 'Engineering'\n    }, {\n      id: '5',\n      name: 'Operations'\n    }]);\n\n    // Computed properties\n    const isLoading = computed(() => store.state.knowledge.isLoading);\n    const wikiPages = computed(() => store.state.knowledge.wikiPages);\n    const wikiTree = computed(() => store.state.knowledge.wikiTree);\n    const currentPage = computed(() => store.state.knowledge.currentPage);\n    const pageRevisions = computed(() => store.state.knowledge.pageRevisions);\n    const searchResults = computed(() => store.state.knowledge.searchResults);\n\n    // Format wiki tree for TreeTable component\n    const wikiTreeNodes = computed(() => {\n      return formatTreeNodes(wikiTree.value);\n    });\n\n    // Options for parent page dropdown\n    const parentPageOptions = computed(() => {\n      const options = [];\n\n      // Add option for no parent (root level)\n      options.push({\n        id: null,\n        title: 'No Parent (Top Level)'\n      });\n\n      // Add all pages except current page and its descendants\n      if (wikiPages.value) {\n        wikiPages.value.forEach(page => {\n          // Skip current page and its descendants to prevent circular references\n          if (pageForm.id && (page.id === pageForm.id || isDescendant(page.id, pageForm.id))) {\n            return;\n          }\n          options.push({\n            id: page.id,\n            title: page.title\n          });\n        });\n      }\n      return options;\n    });\n\n    // Breadcrumb trail for current page\n    const breadcrumbItems = computed(() => {\n      if (!currentPage.value) return [];\n      const items = [{\n        label: 'Wiki Home',\n        command: () => router.push('/wiki')\n      }];\n      if (store.getters['knowledge/breadcrumbPath'] && store.getters['knowledge/breadcrumbPath'].length > 0) {\n        store.getters['knowledge/breadcrumbPath'].forEach((item, index) => {\n          if (index === 0) return; // Skip home item as we already added it\n\n          items.push({\n            label: item.title,\n            command: () => viewPage(item.id),\n            class: item.isActive ? 'active-breadcrumb' : ''\n          });\n        });\n      }\n      return items;\n    });\n\n    // Format revisions for timeline component\n    const formattedRevisions = computed(() => {\n      return pageRevisions.value.map(revision => ({\n        id: revision.id,\n        title: `Version ${revision.version}`,\n        date: formatDate(revision.created_at),\n        author: revision.created_by_name || 'Unknown',\n        description: revision.change_description || '',\n        color: revision.is_current ? '#4caf50' : '#2196f3'\n      }));\n    });\n\n    // Rendered markdown content\n    const renderedContent = computed(() => {\n      if (!currentPage.value || !currentPage.value.content) return '';\n\n      // Convert markdown to HTML and sanitize\n      const html = marked(currentPage.value.content);\n      return DOMPurify.sanitize(html);\n    });\n\n    // Format date\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    };\n\n    // Format tree nodes for TreeTable component\n    const formatTreeNodes = (tree, parent = null) => {\n      if (!tree || tree.length === 0) return [];\n      return tree.map(item => {\n        const node = {\n          key: item.id,\n          id: item.id,\n          title: item.title,\n          data: {\n            id: item.id,\n            title: item.title,\n            createdBy: item.created_by_name,\n            updatedAt: item.updated_at\n          }\n        };\n\n        // If item has children, add them\n        if (item.children && item.children.length > 0) {\n          node.children = formatTreeNodes(item.children, item);\n        }\n        return node;\n      });\n    };\n\n    // Check if a page is a descendant of another page\n    const isDescendant = (pageId, potentialAncestorId) => {\n      // Find the page\n      const page = wikiPages.value.find(p => p.id === pageId);\n      if (!page) return false;\n\n      // If the page has no parent, it can't be a descendant\n      if (!page.parent_id) return false;\n\n      // If the page's parent is the potential ancestor, it is a descendant\n      if (page.parent_id === potentialAncestorId) return true;\n\n      // Recursively check if the page's parent is a descendant of the potential ancestor\n      return isDescendant(page.parent_id, potentialAncestorId);\n    };\n\n    // Handle search input with debounce\n    const debounceSearch = () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout);\n      }\n      searchTimeout = setTimeout(() => {\n        if (searchQuery.value.length >= 2) {\n          performSearch();\n        } else if (searchQuery.value.length === 0) {\n          clearSearch();\n        }\n      }, 300);\n    };\n\n    // Perform search\n    const performSearch = async () => {\n      if (!searchQuery.value || searchQuery.value.length < 2) return;\n      isSearching.value = true;\n      try {\n        await store.dispatch('knowledge/searchWikiPages', searchQuery.value);\n      } catch (error) {\n        console.error('Error searching wiki:', error);\n      } finally {\n        isSearching.value = false;\n      }\n    };\n\n    // Clear search\n    const clearSearch = () => {\n      searchQuery.value = '';\n      store.dispatch('knowledge/setSearchResults', []);\n    };\n\n    // View wiki page\n    const viewPage = async id => {\n      if (!id) {\n        // Reset current page if no ID provided\n        store.commit('knowledge/setCurrentPage', null);\n        return;\n      }\n      try {\n        await store.dispatch('knowledge/fetchWikiPage', id);\n\n        // Expand parents in tree\n        const page = store.state.knowledge.currentPage;\n        if (page && page.parent_id) {\n          expandParentNodes(page.parent_id);\n        }\n\n        // Navigate to page URL if not already there\n        if (router.currentRoute.value.path !== `/wiki/${id}`) {\n          router.push(`/wiki/${id}`);\n        }\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to load wiki page',\n          life: 3000\n        });\n      }\n    };\n\n    // Expand parent nodes in tree\n    const expandParentNodes = parentId => {\n      if (!parentId) return;\n      expandedKeys.value[parentId] = true;\n\n      // Find parent's parent to expand it too\n      const parentPage = wikiPages.value.find(p => p.id === parentId);\n      if (parentPage && parentPage.parent_id) {\n        expandParentNodes(parentPage.parent_id);\n      }\n    };\n\n    // Open new page dialog\n    const openNewPageDialog = () => {\n      resetPageForm();\n      dialogMode.value = 'create';\n      pageDialogVisible.value = true;\n    };\n\n    // Edit current page\n    const editPage = () => {\n      if (!currentPage.value) return;\n      resetPageForm();\n\n      // Copy data to form\n      pageForm.id = currentPage.value.id;\n      pageForm.title = currentPage.value.title;\n      pageForm.content = currentPage.value.content;\n      pageForm.parentId = currentPage.value.parent_id;\n      pageForm.departmentId = currentPage.value.department_id;\n      pageForm.tags = currentPage.value.tags || [];\n      dialogMode.value = 'edit';\n      pageDialogVisible.value = true;\n    };\n\n    // View page revisions\n    const viewRevisions = async () => {\n      if (!currentPage.value) return;\n      try {\n        // If revisions are not already loaded with the page\n        if (!pageRevisions.value || pageRevisions.value.length === 0) {\n          await store.dispatch('knowledge/fetchPageRevisions', currentPage.value.id);\n        }\n        revisionsDialogVisible.value = true;\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to load revision history',\n          life: 3000\n        });\n      }\n    };\n\n    // View specific revision\n    const viewRevision = async revisionId => {\n      if (!currentPage.value) return;\n      try {\n        await store.dispatch('knowledge/fetchRevision', {\n          id: currentPage.value.id,\n          revisionId\n        });\n\n        // Open edit dialog with revision content\n        resetPageForm();\n\n        // Get the revision data\n        const revision = store.state.knowledge.currentRevision;\n        pageForm.id = currentPage.value.id;\n        pageForm.title = revision.title;\n        pageForm.content = revision.content;\n        pageForm.parentId = revision.parent_id;\n        pageForm.departmentId = revision.department_id;\n        pageForm.tags = revision.tags || [];\n        dialogMode.value = 'edit';\n        pageDialogVisible.value = true;\n        revisionsDialogVisible.value = false;\n\n        // Show info toast\n        toast.add({\n          severity: 'info',\n          summary: 'Viewing Revision',\n          detail: `Viewing version from ${formatDate(revision.created_at)}`,\n          life: 5000\n        });\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to load revision',\n          life: 3000\n        });\n      }\n    };\n\n    // Restore revision\n    const restoreRevision = async revisionId => {\n      if (!currentPage.value) return;\n      confirm.require({\n        message: 'Are you sure you want to restore this version? Current content will be overwritten.',\n        header: 'Restore Confirmation',\n        icon: 'pi pi-info-circle',\n        acceptClass: 'p-button-primary',\n        accept: async () => {\n          try {\n            // First fetch the revision\n            await store.dispatch('knowledge/fetchRevision', {\n              id: currentPage.value.id,\n              revisionId\n            });\n\n            // Get the revision data\n            const revision = store.state.knowledge.currentRevision;\n\n            // Prepare update data\n            const updateData = {\n              id: currentPage.value.id,\n              title: revision.title,\n              content: revision.content,\n              parentId: revision.parent_id,\n              departmentId: revision.department_id,\n              tags: revision.tags || [],\n              changeDescription: `Restored version from ${formatDate(revision.created_at)}`\n            };\n\n            // Update page with revision content\n            await store.dispatch('knowledge/updateWikiPage', updateData);\n\n            // Close dialog and refresh page\n            revisionsDialogVisible.value = false;\n            await viewPage(currentPage.value.id);\n            toast.add({\n              severity: 'success',\n              summary: 'Revision Restored',\n              detail: 'The page has been restored to a previous version',\n              life: 3000\n            });\n          } catch (error) {\n            toast.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Failed to restore revision',\n              life: 3000\n            });\n          }\n        },\n        reject: () => {}\n      });\n    };\n\n    // Confirm delete page\n    const confirmDeletePage = () => {\n      if (!currentPage.value) return;\n      confirm.require({\n        message: 'Are you sure you want to delete this page? This action cannot be undone.',\n        header: 'Delete Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        acceptClass: 'p-button-danger',\n        accept: () => deletePage(),\n        reject: () => {}\n      });\n    };\n\n    // Delete page\n    const deletePage = async () => {\n      if (!currentPage.value) return;\n      try {\n        await store.dispatch('knowledge/deleteWikiPage', currentPage.value.id);\n\n        // Navigate back to wiki home\n        router.push('/wiki');\n\n        // Show success toast\n        toast.add({\n          severity: 'success',\n          summary: 'Page Deleted',\n          detail: 'Wiki page has been deleted successfully',\n          life: 3000\n        });\n\n        // Refresh wiki tree\n        fetchWikiTree();\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to delete wiki page',\n          life: 3000\n        });\n      }\n    };\n\n    // Close page dialog\n    const closePageDialog = () => {\n      pageDialogVisible.value = false;\n      submitted.value = false;\n    };\n\n    // Reset page form\n    const resetPageForm = () => {\n      Object.assign(pageForm, {\n        id: null,\n        title: '',\n        content: '',\n        parentId: null,\n        departmentId: null,\n        tags: []\n      });\n    };\n\n    // Show markdown help\n    const showMarkdownHelp = () => {\n      markdownHelpVisible.value = true;\n    };\n\n    // Save page (create or update)\n    const savePage = async () => {\n      submitted.value = true;\n\n      // Validate required fields\n      if (!pageForm.title || !pageForm.content) {\n        return;\n      }\n      saving.value = true;\n      try {\n        // Prepare page data\n        const pageData = {\n          title: pageForm.title,\n          content: pageForm.content,\n          parentId: pageForm.parentId,\n          departmentId: pageForm.departmentId,\n          tags: pageForm.tags\n        };\n\n        // Add change description for edit mode\n        if (dialogMode.value === 'edit') {\n          pageData.changeDescription = 'Updated page content';\n        }\n        let savedPage;\n        if (dialogMode.value === 'create') {\n          // Create new page\n          savedPage = await store.dispatch('knowledge/createWikiPage', pageData);\n        } else {\n          // Update existing page\n          savedPage = await store.dispatch('knowledge/updateWikiPage', {\n            id: pageForm.id,\n            ...pageData\n          });\n        }\n\n        // Close dialog\n        pageDialogVisible.value = false;\n        submitted.value = false;\n\n        // Show success message\n        toast.add({\n          severity: 'success',\n          summary: dialogMode.value === 'create' ? 'Page Created' : 'Page Updated',\n          detail: dialogMode.value === 'create' ? 'Wiki page has been created successfully' : 'Wiki page has been updated successfully',\n          life: 3000\n        });\n\n        // Navigate to saved page\n        if (savedPage) {\n          // Refresh wiki tree first\n          await fetchWikiTree();\n\n          // Then view the page\n          await viewPage(savedPage.id);\n        }\n      } catch (error) {\n        console.error('Error saving wiki page:', error);\n        const errorMsg = error.response?.data?.message || 'Failed to save wiki page';\n        toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: errorMsg,\n          life: 3000\n        });\n      } finally {\n        saving.value = false;\n      }\n    };\n\n    // Fetch wiki tree\n    const fetchWikiTree = async () => {\n      try {\n        await store.dispatch('knowledge/fetchWikiTree');\n      } catch (error) {\n        console.error('Error fetching wiki tree:', error);\n      }\n    };\n\n    // Load initial data\n    const loadInitialData = async () => {\n      try {\n        // Fetch wiki pages and tree structure\n        await Promise.all([store.dispatch('knowledge/fetchWikiPages'), fetchWikiTree()]);\n\n        // If route includes an ID, load that page\n        const pageId = router.currentRoute.value.params.id;\n        if (pageId) {\n          await viewPage(pageId);\n        }\n      } catch (error) {\n        console.error('Error loading wiki data:', error);\n        toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to load wiki data',\n          life: 3000\n        });\n      }\n    };\n\n    // Initialize component\n    onMounted(() => {\n      loadInitialData();\n\n      // Load departments (in a real app, this would come from an API)\n      store.dispatch('departments/fetchDepartments').then(response => {\n        if (response && response.data) {\n          departments.value = response.data.map(dept => ({\n            id: dept.id,\n            name: dept.name\n          }));\n        }\n      }).catch(error => {\n        console.error('Error loading departments:', error);\n      });\n    });\n\n    // Watch for route changes\n    watch(() => router.currentRoute.value.params.id, newId => {\n      if (newId) {\n        viewPage(newId);\n      } else {\n        // Reset current page if no ID in route\n        store.commit('knowledge/setCurrentPage', null);\n      }\n    });\n    return {\n      // State\n      searchQuery,\n      isSearching,\n      pageDialogVisible,\n      revisionsDialogVisible,\n      markdownHelpVisible,\n      dialogMode,\n      submitted,\n      saving,\n      expandedKeys,\n      pageForm,\n      departments,\n      // Computed properties\n      isLoading,\n      wikiPages,\n      wikiTreeNodes,\n      currentPage,\n      parentPageOptions,\n      breadcrumbItems,\n      pageRevisions,\n      formattedRevisions,\n      renderedContent,\n      searchResults,\n      // Methods\n      formatDate,\n      debounceSearch,\n      clearSearch,\n      viewPage,\n      openNewPageDialog,\n      editPage,\n      closePageDialog,\n      savePage,\n      viewRevisions,\n      viewRevision,\n      restoreRevision,\n      confirmDeletePage,\n      showMarkdownHelp\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","watch","useStore","useRouter","useConfirm","useToast","marked","DOMPurify","Button","InputText","Dropdown","Textarea","Chips","ProgressSpinner","Dialog","TreeTable","Column","Breadcrumb","Timeline","Tooltip","ConfirmDialog","Ripple","name","components","directives","tooltip","ripple","setup","store","router","confirm","toast","searchQuery","isSearching","pageDialogVisible","revisionsDialogVisible","markdownHelpVisible","dialogMode","submitted","saving","expandedKeys","searchTimeout","pageForm","id","title","content","parentId","departmentId","tags","departments","isLoading","state","knowledge","wikiPages","wikiTree","currentPage","pageRevisions","searchResults","wikiTreeNodes","formatTreeNodes","value","parentPageOptions","options","push","forEach","page","isDescendant","breadcrumbItems","items","label","command","getters","length","item","index","viewPage","class","isActive","formattedRevisions","map","revision","version","date","formatDate","created_at","author","created_by_name","description","change_description","color","is_current","renderedContent","html","sanitize","dateString","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","tree","parent","node","key","data","createdBy","updatedAt","updated_at","children","pageId","potentialAncestorId","find","p","parent_id","debounceSearch","clearTimeout","setTimeout","performSearch","clearSearch","dispatch","error","console","commit","expandParentNodes","currentRoute","path","add","severity","summary","detail","life","parentPage","openNewPageDialog","resetPageForm","editPage","department_id","viewRevisions","viewRevision","revisionId","currentRevision","restoreRevision","require","message","header","icon","acceptClass","accept","updateData","changeDescription","reject","confirmDeletePage","deletePage","fetchWikiTree","closePageDialog","Object","assign","showMarkdownHelp","savePage","pageData","savedPage","errorMsg","response","loadInitialData","Promise","all","params","then","dept","catch","newId"],"sources":["/home/pi/projects/intranet/frontend/src/views/Wiki.vue"],"sourcesContent":["<template>\r\n  <div class=\"wiki-container\">\r\n    <!-- Page header with title and actions -->\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Knowledge Base</h1>\r\n      <div class=\"page-actions\">\r\n        <Button \r\n          label=\"New Page\" \r\n          icon=\"pi pi-plus\" \r\n          @click=\"openNewPageDialog\"\r\n          class=\"p-button-primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Wiki content area with sidebar and main content -->\r\n    <div class=\"wiki-content\">\r\n      <!-- Sidebar for tree navigation -->\r\n      <div class=\"wiki-sidebar card\">\r\n        <div class=\"wiki-search p-input-icon-left w-full\">\r\n          <i class=\"pi pi-search\" />\r\n          <InputText \r\n            v-model=\"searchQuery\" \r\n            placeholder=\"Search wiki...\" \r\n            class=\"w-full\"\r\n            @input=\"debounceSearch\"\r\n          />\r\n        </div>\r\n        \r\n        <div v-if=\"isSearching\" class=\"wiki-sidebar-loading\">\r\n          <ProgressSpinner style=\"width: 50px; height: 50px\" />\r\n        </div>\r\n        \r\n        <div v-else-if=\"searchQuery && searchResults.length > 0\" class=\"wiki-search-results\">\r\n          <h3 class=\"search-results-title\">Search Results</h3>\r\n          <ul class=\"search-results-list\">\r\n            <li \r\n              v-for=\"result in searchResults\" \r\n              :key=\"result.id\" \r\n              class=\"search-result-item p-ripple\"\r\n              @click=\"viewPage(result.id)\"\r\n            >\r\n              <div class=\"search-result-title\">{{ result.title }}</div>\r\n              <div class=\"search-result-path\">{{ result.path }}</div>\r\n              <Ripple />\r\n            </li>\r\n          </ul>\r\n          <Button \r\n            label=\"Clear Search\" \r\n            icon=\"pi pi-times\" \r\n            class=\"p-button-text p-button-sm mt-2\" \r\n            @click=\"clearSearch\"\r\n          />\r\n        </div>\r\n        \r\n        <div v-else-if=\"searchQuery && searchResults.length === 0\" class=\"wiki-empty-results\">\r\n          <i class=\"pi pi-search\"></i>\r\n          <p>No pages match your search</p>\r\n          <Button \r\n            label=\"Clear\" \r\n            icon=\"pi pi-times\" \r\n            class=\"p-button-text p-button-sm\" \r\n            @click=\"clearSearch\"\r\n          />\r\n        </div>\r\n        \r\n        <div v-else class=\"wiki-tree\">\r\n          <h3 class=\"wiki-tree-title\">Wiki Pages</h3>\r\n          <div v-if=\"isLoading\" class=\"wiki-sidebar-loading\">\r\n            <ProgressSpinner style=\"width: 50px; height: 50px\" />\r\n          </div>\r\n          <div v-else>\r\n            <TreeTable :value=\"wikiTreeNodes\" selectionMode=\"single\" :expandedKeys=\"expandedKeys\">\r\n              <Column field=\"title\" expander>\r\n                <template #body=\"{ data }\">\r\n                  <div \r\n                    class=\"wiki-node p-ripple\" \r\n                    :class=\"{ 'active-node': currentPage && currentPage.id === data.id }\"\r\n                    @click=\"viewPage(data.id)\"\r\n                  >\r\n                    {{ data.title }}\r\n                    <Ripple />\r\n                  </div>\r\n                </template>\r\n              </Column>\r\n            </TreeTable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Main content area -->\r\n      <div class=\"wiki-main\">\r\n        <!-- Loading state -->\r\n        <div v-if=\"isLoading\" class=\"wiki-loading\">\r\n          <ProgressSpinner />\r\n        </div>\r\n        \r\n        <!-- Empty state - no page selected -->\r\n        <div v-else-if=\"!currentPage\" class=\"wiki-empty card\">\r\n          <div class=\"wiki-empty-content\">\r\n            <i class=\"pi pi-book\"></i>\r\n            <h2>Welcome to the Knowledge Base</h2>\r\n            <p>Select a page from the sidebar or create a new one to get started.</p>\r\n            <Button \r\n              label=\"Create Your First Page\" \r\n              icon=\"pi pi-plus\" \r\n              @click=\"openNewPageDialog\" \r\n              class=\"p-button-primary mt-3\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Wiki page content -->\r\n        <div v-else class=\"wiki-page card\">\r\n          <!-- Breadcrumb navigation -->\r\n          <Breadcrumb :model=\"breadcrumbItems\" class=\"wiki-breadcrumb mb-3\" />\r\n          \r\n          <!-- Page header with title and metadata -->\r\n          <div class=\"wiki-page-header\">\r\n            <h1 class=\"wiki-page-title\">{{ currentPage.title }}</h1>\r\n            <div class=\"wiki-page-meta\">\r\n              <span class=\"wiki-page-author\">\r\n                <i class=\"pi pi-user\"></i>\r\n                {{ currentPage.created_by_name }}\r\n              </span>\r\n              <span class=\"wiki-page-date\">\r\n                <i class=\"pi pi-calendar\"></i>\r\n                {{ formatDate(currentPage.updated_at || currentPage.created_at) }}\r\n              </span>\r\n              <div class=\"wiki-page-actions\">\r\n                <Button \r\n                  icon=\"pi pi-pencil\" \r\n                  class=\"p-button-text p-button-rounded\" \r\n                  @click=\"editPage\" \r\n                  v-tooltip.top=\"'Edit Page'\" \r\n                />\r\n                <Button \r\n                  icon=\"pi pi-history\" \r\n                  class=\"p-button-text p-button-rounded\" \r\n                  @click=\"viewRevisions\" \r\n                  v-tooltip.top=\"'View History'\" \r\n                />\r\n                <Button \r\n                  icon=\"pi pi-trash\" \r\n                  class=\"p-button-text p-button-rounded p-button-danger\" \r\n                  @click=\"confirmDeletePage\" \r\n                  v-tooltip.top=\"'Delete Page'\" \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Page content rendered as markdown -->\r\n          <div class=\"wiki-page-content p-4\">\r\n            <div v-html=\"renderedContent\"></div>\r\n          </div>\r\n          \r\n          <!-- Page footer with tags and other metadata -->\r\n          <div class=\"wiki-page-footer\" v-if=\"currentPage.tags && currentPage.tags.length > 0\">\r\n            <div class=\"wiki-page-tags\">\r\n              <i class=\"pi pi-tags\"></i>\r\n              <span \r\n                v-for=\"tag in currentPage.tags\" \r\n                :key=\"tag\"\r\n                class=\"wiki-tag\"\r\n              >{{ tag }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Wiki page dialog (create/edit) -->\r\n    <Dialog \r\n      v-model:visible=\"pageDialogVisible\" \r\n      :style=\"{ width: '80%', maxWidth: '800px' }\" \r\n      :header=\"dialogMode === 'create' ? 'Create New Page' : 'Edit Page'\" \r\n      :modal=\"true\" \r\n      class=\"p-fluid wiki-dialog\"\r\n    >\r\n      <div class=\"wiki-form\">\r\n        <div class=\"field\">\r\n          <label for=\"pageTitle\">Title*</label>\r\n          <InputText \r\n            id=\"pageTitle\" \r\n            v-model=\"pageForm.title\" \r\n            required \r\n            :class=\"{ 'p-invalid': submitted && !pageForm.title }\"\r\n          />\r\n          <small v-if=\"submitted && !pageForm.title\" class=\"p-error\">Title is required.</small>\r\n        </div>\r\n        \r\n        <div class=\"field\">\r\n          <label for=\"pageParent\">Parent Page</label>\r\n          <Dropdown \r\n            id=\"pageParent\" \r\n            v-model=\"pageForm.parentId\" \r\n            :options=\"parentPageOptions\" \r\n            optionLabel=\"title\" \r\n            optionValue=\"id\" \r\n            placeholder=\"No Parent (Top Level)\" \r\n          />\r\n        </div>\r\n        \r\n        <div class=\"field\">\r\n          <label for=\"pageDepartment\">Department</label>\r\n          <Dropdown \r\n            id=\"pageDepartment\" \r\n            v-model=\"pageForm.departmentId\" \r\n            :options=\"departments\" \r\n            optionLabel=\"name\" \r\n            optionValue=\"id\" \r\n            placeholder=\"No Department\" \r\n          />\r\n        </div>\r\n        \r\n        <div class=\"field\">\r\n          <label for=\"pageTags\">Tags</label>\r\n          <Chips \r\n            id=\"pageTags\" \r\n            v-model=\"pageForm.tags\" \r\n            separator=\",\" \r\n            placeholder=\"Add tags (press enter or comma to add)\"\r\n          />\r\n          <small class=\"form-helper-text\">Tags help with organization and searching</small>\r\n        </div>\r\n        \r\n        <div class=\"field\">\r\n          <label for=\"pageContent\">Content*</label>\r\n          <Textarea \r\n            id=\"pageContent\" \r\n            v-model=\"pageForm.content\" \r\n            rows=\"12\" \r\n            required\r\n            :class=\"{ 'p-invalid': submitted && !pageForm.content }\"\r\n          />\r\n          <small v-if=\"submitted && !pageForm.content\" class=\"p-error\">Content is required.</small>\r\n          <small class=\"form-helper-text\">\r\n            This editor supports Markdown formatting. \r\n            <a href=\"#\" @click.prevent=\"showMarkdownHelp\">View formatting help</a>\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <Button \r\n          label=\"Cancel\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"closePageDialog\" \r\n        />\r\n        <Button \r\n          label=\"Save\" \r\n          icon=\"pi pi-check\" \r\n          @click=\"savePage\" \r\n          :loading=\"saving\"\r\n        />\r\n      </template>\r\n    </Dialog>\r\n    \r\n    <!-- Revisions dialog -->\r\n    <Dialog \r\n      v-model:visible=\"revisionsDialogVisible\" \r\n      :style=\"{ width: '650px' }\" \r\n      header=\"Page History\" \r\n      :modal=\"true\"\r\n      class=\"wiki-revisions-dialog\"\r\n    >\r\n      <div v-if=\"pageRevisions.length === 0\" class=\"empty-revisions\">\r\n        <i class=\"pi pi-history\"></i>\r\n        <p>No revision history available</p>\r\n      </div>\r\n      <div v-else class=\"revisions-list\">\r\n        <Timeline :value=\"formattedRevisions\">\r\n          <template #content=\"slotProps\">\r\n            <div class=\"revision-item\">\r\n              <div class=\"revision-content\">\r\n                <h3>{{ slotProps.item.title }}</h3>\r\n                <div class=\"revision-meta\">\r\n                  <span class=\"revision-date\">{{ slotProps.item.date }}</span>\r\n                  <span class=\"revision-author\">{{ slotProps.item.author }}</span>\r\n                </div>\r\n                <p v-if=\"slotProps.item.description\" class=\"revision-description\">\r\n                  {{ slotProps.item.description }}\r\n                </p>\r\n                <div class=\"revision-actions\">\r\n                  <Button \r\n                    label=\"View\" \r\n                    icon=\"pi pi-eye\" \r\n                    class=\"p-button-sm p-button-text\" \r\n                    @click=\"viewRevision(slotProps.item.id)\"\r\n                  />\r\n                  <Button \r\n                    label=\"Restore\" \r\n                    icon=\"pi pi-replay\" \r\n                    class=\"p-button-sm p-button-text\" \r\n                    @click=\"restoreRevision(slotProps.item.id)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </Timeline>\r\n      </div>\r\n      \r\n      <template #footer>\r\n        <Button \r\n          label=\"Close\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"revisionsDialogVisible = false\" \r\n        />\r\n      </template>\r\n    </Dialog>\r\n    \r\n    <!-- Markdown help dialog -->\r\n    <Dialog \r\n      v-model:visible=\"markdownHelpVisible\" \r\n      :style=\"{ width: '700px' }\" \r\n      header=\"Markdown Formatting Guide\" \r\n      :modal=\"true\"\r\n    >\r\n      <div class=\"markdown-help\">\r\n        <div class=\"markdown-help-section\">\r\n          <h3>Basic Formatting</h3>\r\n          <div class=\"markdown-example-grid\">\r\n            <div class=\"markdown-example\">\r\n              <div class=\"markdown-code\">**Bold text**</div>\r\n              <div class=\"markdown-result\"><strong>Bold text</strong></div>\r\n            </div>\r\n            <div class=\"markdown-example\">\r\n              <div class=\"markdown-code\">*Italic text*</div>\r\n              <div class=\"markdown-result\"><em>Italic text</em></div>\r\n            </div>\r\n            <div class=\"markdown-example\">\r\n              <div class=\"markdown-code\">~~Strikethrough~~</div>\r\n              <div class=\"markdown-result\"><s>Strikethrough</s></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"markdown-help-section\">\r\n          <h3>Headings</h3>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\"># Heading 1</div>\r\n            <div class=\"markdown-result\"><h1 style=\"margin: 0\">Heading 1</h1></div>\r\n          </div>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">## Heading 2</div>\r\n            <div class=\"markdown-result\"><h2 style=\"margin: 0\">Heading 2</h2></div>\r\n          </div>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">### Heading 3</div>\r\n            <div class=\"markdown-result\"><h3 style=\"margin: 0\">Heading 3</h3></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"markdown-help-section\">\r\n          <h3>Lists</h3>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">\r\n              - Item 1<br>\r\n              - Item 2<br>\r\n              - Item 3\r\n            </div>\r\n            <div class=\"markdown-result\">\r\n              <ul style=\"margin: 0\">\r\n                <li>Item 1</li>\r\n                <li>Item 2</li>\r\n                <li>Item 3</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">\r\n              1. First item<br>\r\n              2. Second item<br>\r\n              3. Third item\r\n            </div>\r\n            <div class=\"markdown-result\">\r\n              <ol style=\"margin: 0\">\r\n                <li>First item</li>\r\n                <li>Second item</li>\r\n                <li>Third item</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"markdown-help-section\">\r\n          <h3>Links and Images</h3>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">[Link text](https://example.com)</div>\r\n            <div class=\"markdown-result\"><a href=\"#\">Link text</a></div>\r\n          </div>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">![Alt text](image-url.jpg)</div>\r\n            <div class=\"markdown-result\">Image with alt text</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"markdown-help-section\">\r\n          <h3>Code</h3>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">`inline code`</div>\r\n            <div class=\"markdown-result\"><code>inline code</code></div>\r\n          </div>\r\n          <div class=\"markdown-example\">\r\n            <div class=\"markdown-code\">\r\n              ```<br>\r\n              // Code block<br>\r\n              function example() {<br>\r\n              &nbsp;&nbsp;return true;<br>\r\n              }<br>\r\n              ```\r\n            </div>\r\n            <div class=\"markdown-result\">\r\n              <pre style=\"margin: 0\"><code>// Code block\r\nfunction example() {\r\n  return true;\r\n}</code></pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <template #footer>\r\n        <Button \r\n          label=\"Close\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"markdownHelpVisible = false\" \r\n        />\r\n      </template>\r\n    </Dialog>\r\n    \r\n    <!-- Confirm Dialog -->\r\n    <ConfirmDialog />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted, watch } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { useConfirm } from 'primevue/useconfirm';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { marked } from 'marked';\r\nimport DOMPurify from 'dompurify';\r\n\r\n// PrimeVue components\r\nimport Button from 'primevue/button';\r\nimport InputText from 'primevue/inputtext';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Textarea from 'primevue/textarea';\r\nimport Chips from 'primevue/chips';\r\nimport ProgressSpinner from 'primevue/progressspinner';\r\nimport Dialog from 'primevue/dialog';\r\nimport TreeTable from 'primevue/treetable';\r\nimport Column from 'primevue/column';\r\nimport Breadcrumb from 'primevue/breadcrumb';\r\nimport Timeline from 'primevue/timeline';\r\nimport Tooltip from 'primevue/tooltip';\r\nimport ConfirmDialog from 'primevue/confirmdialog';\r\nimport Ripple from 'primevue/ripple';\r\n\r\nexport default {\r\n  name: 'WikiView',\r\n  components: {\r\n    Button,\r\n    InputText,\r\n    Dropdown,\r\n    Textarea,\r\n    Chips,\r\n    ProgressSpinner,\r\n    Dialog,\r\n    TreeTable,\r\n    Column,\r\n    Breadcrumb,\r\n    Timeline,\r\n    ConfirmDialog\r\n  },\r\n  directives: {\r\n    tooltip: Tooltip,\r\n    ripple: Ripple\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    const confirm = useConfirm();\r\n    const toast = useToast();\r\n\r\n    // State\r\n    const searchQuery = ref('');\r\n    const isSearching = ref(false);\r\n    const pageDialogVisible = ref(false);\r\n    const revisionsDialogVisible = ref(false);\r\n    const markdownHelpVisible = ref(false);\r\n    const dialogMode = ref('create');\r\n    const submitted = ref(false);\r\n    const saving = ref(false);\r\n    const expandedKeys = ref({});\r\n    \r\n    // Debounce search\r\n    let searchTimeout = null;\r\n    \r\n    // Form state for page\r\n    const pageForm = reactive({\r\n      id: null,\r\n      title: '',\r\n      content: '',\r\n      parentId: null,\r\n      departmentId: null,\r\n      tags: []\r\n    });\r\n\r\n    // Departments (fetch from store or API)\r\n    const departments = ref([\r\n      { id: '1', name: 'Finance' },\r\n      { id: '2', name: 'Human Resources' },\r\n      { id: '3', name: 'Marketing' },\r\n      { id: '4', name: 'Engineering' },\r\n      { id: '5', name: 'Operations' }\r\n    ]);\r\n\r\n    // Computed properties\r\n    const isLoading = computed(() => store.state.knowledge.isLoading);\r\n    const wikiPages = computed(() => store.state.knowledge.wikiPages);\r\n    const wikiTree = computed(() => store.state.knowledge.wikiTree);\r\n    const currentPage = computed(() => store.state.knowledge.currentPage);\r\n    const pageRevisions = computed(() => store.state.knowledge.pageRevisions);\r\n    const searchResults = computed(() => store.state.knowledge.searchResults);\r\n\r\n    // Format wiki tree for TreeTable component\r\n    const wikiTreeNodes = computed(() => {\r\n      return formatTreeNodes(wikiTree.value);\r\n    });\r\n\r\n    // Options for parent page dropdown\r\n    const parentPageOptions = computed(() => {\r\n      const options = [];\r\n      \r\n      // Add option for no parent (root level)\r\n      options.push({ id: null, title: 'No Parent (Top Level)' });\r\n      \r\n      // Add all pages except current page and its descendants\r\n      if (wikiPages.value) {\r\n        wikiPages.value.forEach(page => {\r\n          // Skip current page and its descendants to prevent circular references\r\n          if (pageForm.id && (page.id === pageForm.id || isDescendant(page.id, pageForm.id))) {\r\n            return;\r\n          }\r\n          options.push({ id: page.id, title: page.title });\r\n        });\r\n      }\r\n      \r\n      return options;\r\n    });\r\n\r\n    // Breadcrumb trail for current page\r\n    const breadcrumbItems = computed(() => {\r\n      if (!currentPage.value) return [];\r\n      \r\n      const items = [\r\n        { label: 'Wiki Home', command: () => router.push('/wiki') }\r\n      ];\r\n      \r\n      if (store.getters['knowledge/breadcrumbPath'] && store.getters['knowledge/breadcrumbPath'].length > 0) {\r\n        store.getters['knowledge/breadcrumbPath'].forEach((item, index) => {\r\n          if (index === 0) return; // Skip home item as we already added it\r\n          \r\n          items.push({\r\n            label: item.title,\r\n            command: () => viewPage(item.id),\r\n            class: item.isActive ? 'active-breadcrumb' : ''\r\n          });\r\n        });\r\n      }\r\n      \r\n      return items;\r\n    });\r\n\r\n    // Format revisions for timeline component\r\n    const formattedRevisions = computed(() => {\r\n      return pageRevisions.value.map(revision => ({\r\n        id: revision.id,\r\n        title: `Version ${revision.version}`,\r\n        date: formatDate(revision.created_at),\r\n        author: revision.created_by_name || 'Unknown',\r\n        description: revision.change_description || '',\r\n        color: revision.is_current ? '#4caf50' : '#2196f3'\r\n      }));\r\n    });\r\n\r\n    // Rendered markdown content\r\n    const renderedContent = computed(() => {\r\n      if (!currentPage.value || !currentPage.value.content) return '';\r\n      \r\n      // Convert markdown to HTML and sanitize\r\n      const html = marked(currentPage.value.content);\r\n      return DOMPurify.sanitize(html);\r\n    });\r\n\r\n    // Format date\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '';\r\n      const date = new Date(dateString);\r\n      return new Intl.DateTimeFormat('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date);\r\n    };\r\n\r\n    // Format tree nodes for TreeTable component\r\n    const formatTreeNodes = (tree, parent = null) => {\r\n      if (!tree || tree.length === 0) return [];\r\n      \r\n      return tree.map(item => {\r\n        const node = {\r\n          key: item.id,\r\n          id: item.id,\r\n          title: item.title,\r\n          data: {\r\n            id: item.id,\r\n            title: item.title,\r\n            createdBy: item.created_by_name,\r\n            updatedAt: item.updated_at\r\n          }\r\n        };\r\n        \r\n        // If item has children, add them\r\n        if (item.children && item.children.length > 0) {\r\n          node.children = formatTreeNodes(item.children, item);\r\n        }\r\n        \r\n        return node;\r\n      });\r\n    };\r\n\r\n    // Check if a page is a descendant of another page\r\n    const isDescendant = (pageId, potentialAncestorId) => {\r\n      // Find the page\r\n      const page = wikiPages.value.find(p => p.id === pageId);\r\n      if (!page) return false;\r\n      \r\n      // If the page has no parent, it can't be a descendant\r\n      if (!page.parent_id) return false;\r\n      \r\n      // If the page's parent is the potential ancestor, it is a descendant\r\n      if (page.parent_id === potentialAncestorId) return true;\r\n      \r\n      // Recursively check if the page's parent is a descendant of the potential ancestor\r\n      return isDescendant(page.parent_id, potentialAncestorId);\r\n    };\r\n\r\n    // Handle search input with debounce\r\n    const debounceSearch = () => {\r\n      if (searchTimeout) {\r\n        clearTimeout(searchTimeout);\r\n      }\r\n      \r\n      searchTimeout = setTimeout(() => {\r\n        if (searchQuery.value.length >= 2) {\r\n          performSearch();\r\n        } else if (searchQuery.value.length === 0) {\r\n          clearSearch();\r\n        }\r\n      }, 300);\r\n    };\r\n\r\n    // Perform search\r\n    const performSearch = async () => {\r\n      if (!searchQuery.value || searchQuery.value.length < 2) return;\r\n      \r\n      isSearching.value = true;\r\n      try {\r\n        await store.dispatch('knowledge/searchWikiPages', searchQuery.value);\r\n      } catch (error) {\r\n        console.error('Error searching wiki:', error);\r\n      } finally {\r\n        isSearching.value = false;\r\n      }\r\n    };\r\n\r\n    // Clear search\r\n    const clearSearch = () => {\r\n      searchQuery.value = '';\r\n      store.dispatch('knowledge/setSearchResults', []);\r\n    };\r\n\r\n    // View wiki page\r\n    const viewPage = async (id) => {\r\n      if (!id) {\r\n        // Reset current page if no ID provided\r\n        store.commit('knowledge/setCurrentPage', null);\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await store.dispatch('knowledge/fetchWikiPage', id);\r\n        \r\n        // Expand parents in tree\r\n        const page = store.state.knowledge.currentPage;\r\n        if (page && page.parent_id) {\r\n          expandParentNodes(page.parent_id);\r\n        }\r\n        \r\n        // Navigate to page URL if not already there\r\n        if (router.currentRoute.value.path !== `/wiki/${id}`) {\r\n          router.push(`/wiki/${id}`);\r\n        }\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load wiki page',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Expand parent nodes in tree\r\n    const expandParentNodes = (parentId) => {\r\n      if (!parentId) return;\r\n      \r\n      expandedKeys.value[parentId] = true;\r\n      \r\n      // Find parent's parent to expand it too\r\n      const parentPage = wikiPages.value.find(p => p.id === parentId);\r\n      if (parentPage && parentPage.parent_id) {\r\n        expandParentNodes(parentPage.parent_id);\r\n      }\r\n    };\r\n\r\n    // Open new page dialog\r\n    const openNewPageDialog = () => {\r\n      resetPageForm();\r\n      dialogMode.value = 'create';\r\n      pageDialogVisible.value = true;\r\n    };\r\n\r\n    // Edit current page\r\n    const editPage = () => {\r\n      if (!currentPage.value) return;\r\n      \r\n      resetPageForm();\r\n      \r\n      // Copy data to form\r\n      pageForm.id = currentPage.value.id;\r\n      pageForm.title = currentPage.value.title;\r\n      pageForm.content = currentPage.value.content;\r\n      pageForm.parentId = currentPage.value.parent_id;\r\n      pageForm.departmentId = currentPage.value.department_id;\r\n      pageForm.tags = currentPage.value.tags || [];\r\n      \r\n      dialogMode.value = 'edit';\r\n      pageDialogVisible.value = true;\r\n    };\r\n\r\n    // View page revisions\r\n    const viewRevisions = async () => {\r\n      if (!currentPage.value) return;\r\n      \r\n      try {\r\n        // If revisions are not already loaded with the page\r\n        if (!pageRevisions.value || pageRevisions.value.length === 0) {\r\n          await store.dispatch('knowledge/fetchPageRevisions', currentPage.value.id);\r\n        }\r\n        \r\n        revisionsDialogVisible.value = true;\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load revision history',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // View specific revision\r\n    const viewRevision = async (revisionId) => {\r\n      if (!currentPage.value) return;\r\n      \r\n      try {\r\n        await store.dispatch('knowledge/fetchRevision', {\r\n          id: currentPage.value.id,\r\n          revisionId\r\n        });\r\n        \r\n        // Open edit dialog with revision content\r\n        resetPageForm();\r\n        \r\n        // Get the revision data\r\n        const revision = store.state.knowledge.currentRevision;\r\n        \r\n        pageForm.id = currentPage.value.id;\r\n        pageForm.title = revision.title;\r\n        pageForm.content = revision.content;\r\n        pageForm.parentId = revision.parent_id;\r\n        pageForm.departmentId = revision.department_id;\r\n        pageForm.tags = revision.tags || [];\r\n        \r\n        dialogMode.value = 'edit';\r\n        pageDialogVisible.value = true;\r\n        revisionsDialogVisible.value = false;\r\n        \r\n        // Show info toast\r\n        toast.add({\r\n          severity: 'info',\r\n          summary: 'Viewing Revision',\r\n          detail: `Viewing version from ${formatDate(revision.created_at)}`,\r\n          life: 5000\r\n        });\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load revision',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Restore revision\r\n    const restoreRevision = async (revisionId) => {\r\n      if (!currentPage.value) return;\r\n      \r\n      confirm.require({\r\n        message: 'Are you sure you want to restore this version? Current content will be overwritten.',\r\n        header: 'Restore Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-primary',\r\n        accept: async () => {\r\n          try {\r\n            // First fetch the revision\r\n            await store.dispatch('knowledge/fetchRevision', {\r\n              id: currentPage.value.id,\r\n              revisionId\r\n            });\r\n            \r\n            // Get the revision data\r\n            const revision = store.state.knowledge.currentRevision;\r\n            \r\n            // Prepare update data\r\n            const updateData = {\r\n              id: currentPage.value.id,\r\n              title: revision.title,\r\n              content: revision.content,\r\n              parentId: revision.parent_id,\r\n              departmentId: revision.department_id,\r\n              tags: revision.tags || [],\r\n              changeDescription: `Restored version from ${formatDate(revision.created_at)}`\r\n            };\r\n            \r\n            // Update page with revision content\r\n            await store.dispatch('knowledge/updateWikiPage', updateData);\r\n            \r\n            // Close dialog and refresh page\r\n            revisionsDialogVisible.value = false;\r\n            await viewPage(currentPage.value.id);\r\n            \r\n            toast.add({\r\n              severity: 'success',\r\n              summary: 'Revision Restored',\r\n              detail: 'The page has been restored to a previous version',\r\n              life: 3000\r\n            });\r\n          } catch (error) {\r\n            toast.add({\r\n              severity: 'error',\r\n              summary: 'Error',\r\n              detail: 'Failed to restore revision',\r\n              life: 3000\r\n            });\r\n          }\r\n        },\r\n        reject: () => {}\r\n      });\r\n    };\r\n\r\n    // Confirm delete page\r\n    const confirmDeletePage = () => {\r\n      if (!currentPage.value) return;\r\n      \r\n      confirm.require({\r\n        message: 'Are you sure you want to delete this page? This action cannot be undone.',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => deletePage(),\r\n        reject: () => {}\r\n      });\r\n    };\r\n\r\n    // Delete page\r\n    const deletePage = async () => {\r\n      if (!currentPage.value) return;\r\n      \r\n      try {\r\n        await store.dispatch('knowledge/deleteWikiPage', currentPage.value.id);\r\n        \r\n        // Navigate back to wiki home\r\n        router.push('/wiki');\r\n        \r\n        // Show success toast\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'Page Deleted',\r\n          detail: 'Wiki page has been deleted successfully',\r\n          life: 3000\r\n        });\r\n        \r\n        // Refresh wiki tree\r\n        fetchWikiTree();\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to delete wiki page',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Close page dialog\r\n    const closePageDialog = () => {\r\n      pageDialogVisible.value = false;\r\n      submitted.value = false;\r\n    };\r\n\r\n    // Reset page form\r\n    const resetPageForm = () => {\r\n      Object.assign(pageForm, {\r\n        id: null,\r\n        title: '',\r\n        content: '',\r\n        parentId: null,\r\n        departmentId: null,\r\n        tags: []\r\n      });\r\n    };\r\n\r\n    // Show markdown help\r\n    const showMarkdownHelp = () => {\r\n      markdownHelpVisible.value = true;\r\n    };\r\n\r\n    // Save page (create or update)\r\n    const savePage = async () => {\r\n      submitted.value = true;\r\n      \r\n      // Validate required fields\r\n      if (!pageForm.title || !pageForm.content) {\r\n        return;\r\n      }\r\n      \r\n      saving.value = true;\r\n      \r\n      try {\r\n        // Prepare page data\r\n        const pageData = {\r\n          title: pageForm.title,\r\n          content: pageForm.content,\r\n          parentId: pageForm.parentId,\r\n          departmentId: pageForm.departmentId,\r\n          tags: pageForm.tags\r\n        };\r\n        \r\n        // Add change description for edit mode\r\n        if (dialogMode.value === 'edit') {\r\n          pageData.changeDescription = 'Updated page content';\r\n        }\r\n        \r\n        let savedPage;\r\n        \r\n        if (dialogMode.value === 'create') {\r\n          // Create new page\r\n          savedPage = await store.dispatch('knowledge/createWikiPage', pageData);\r\n        } else {\r\n          // Update existing page\r\n          savedPage = await store.dispatch('knowledge/updateWikiPage', {\r\n            id: pageForm.id,\r\n            ...pageData\r\n          });\r\n        }\r\n        \r\n        // Close dialog\r\n        pageDialogVisible.value = false;\r\n        submitted.value = false;\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: dialogMode.value === 'create' ? 'Page Created' : 'Page Updated',\r\n          detail: dialogMode.value === 'create' ? 'Wiki page has been created successfully' : 'Wiki page has been updated successfully',\r\n          life: 3000\r\n        });\r\n        \r\n        // Navigate to saved page\r\n        if (savedPage) {\r\n          // Refresh wiki tree first\r\n          await fetchWikiTree();\r\n          \r\n          // Then view the page\r\n          await viewPage(savedPage.id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error saving wiki page:', error);\r\n        \r\n        const errorMsg = error.response?.data?.message || 'Failed to save wiki page';\r\n        \r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: errorMsg,\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        saving.value = false;\r\n      }\r\n    };\r\n\r\n    // Fetch wiki tree\r\n    const fetchWikiTree = async () => {\r\n      try {\r\n        await store.dispatch('knowledge/fetchWikiTree');\r\n      } catch (error) {\r\n        console.error('Error fetching wiki tree:', error);\r\n      }\r\n    };\r\n\r\n    // Load initial data\r\n    const loadInitialData = async () => {\r\n      try {\r\n        // Fetch wiki pages and tree structure\r\n        await Promise.all([\r\n          store.dispatch('knowledge/fetchWikiPages'),\r\n          fetchWikiTree()\r\n        ]);\r\n        \r\n        // If route includes an ID, load that page\r\n        const pageId = router.currentRoute.value.params.id;\r\n        if (pageId) {\r\n          await viewPage(pageId);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading wiki data:', error);\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load wiki data',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Initialize component\r\n    onMounted(() => {\r\n      loadInitialData();\r\n      \r\n      // Load departments (in a real app, this would come from an API)\r\n      store.dispatch('departments/fetchDepartments')\r\n        .then(response => {\r\n          if (response && response.data) {\r\n            departments.value = response.data.map(dept => ({\r\n              id: dept.id,\r\n              name: dept.name\r\n            }));\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error loading departments:', error);\r\n        });\r\n    });\r\n\r\n    // Watch for route changes\r\n    watch(() => router.currentRoute.value.params.id, (newId) => {\r\n      if (newId) {\r\n        viewPage(newId);\r\n      } else {\r\n        // Reset current page if no ID in route\r\n        store.commit('knowledge/setCurrentPage', null);\r\n      }\r\n    });\r\n\r\n    return {\r\n      // State\r\n      searchQuery,\r\n      isSearching,\r\n      pageDialogVisible,\r\n      revisionsDialogVisible,\r\n      markdownHelpVisible,\r\n      dialogMode,\r\n      submitted,\r\n      saving,\r\n      expandedKeys,\r\n      pageForm,\r\n      departments,\r\n      \r\n      // Computed properties\r\n      isLoading,\r\n      wikiPages,\r\n      wikiTreeNodes,\r\n      currentPage,\r\n      parentPageOptions,\r\n      breadcrumbItems,\r\n      pageRevisions,\r\n      formattedRevisions,\r\n      renderedContent,\r\n      searchResults,\r\n      \r\n      // Methods\r\n      formatDate,\r\n      debounceSearch,\r\n      clearSearch,\r\n      viewPage,\r\n      openNewPageDialog,\r\n      editPage,\r\n      closePageDialog,\r\n      savePage,\r\n      viewRevisions,\r\n      viewRevision,\r\n      restoreRevision,\r\n      confirmDeletePage,\r\n      showMarkdownHelp\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.wiki-container {\r\n  padding: 1rem;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n/* Wiki content layout */\r\n.wiki-content {\r\n  display: flex;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.wiki-sidebar {\r\n  width: 300px;\r\n  flex-shrink: 0;\r\n  height: calc(100vh - 180px);\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n}\r\n\r\n.wiki-main {\r\n  flex: 1;\r\n  min-width: 0; /* For proper text wrapping */\r\n}\r\n\r\n.wiki-search {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.wiki-tree-title, .search-results-title {\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n/* Wiki tree customization */\r\n.wiki-node {\r\n  padding: 0.375rem 0.25rem;\r\n  border-radius: 4px;\r\n  transition: background-color 0.2s;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n.wiki-node:hover {\r\n  background-color: var(--surface-hover);\r\n}\r\n\r\n.active-node {\r\n  background-color: var(--primary-color-lighter, rgba(103, 58, 183, 0.1));\r\n  font-weight: 500;\r\n}\r\n\r\n/* Search results styling */\r\n.search-results-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.search-result-item {\r\n  padding: 0.75rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 0.5rem;\r\n  background-color: var(--surface-ground);\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.search-result-item:hover {\r\n  background-color: var(--surface-hover);\r\n}\r\n\r\n.search-result-title {\r\n  font-weight: 500;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.search-result-path {\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n/* Wiki empty states */\r\n.wiki-empty, .wiki-sidebar-loading, .wiki-empty-results {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 3rem 1rem;\r\n  text-align: center;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.wiki-empty i, .wiki-empty-results i {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n  opacity: 0.6;\r\n}\r\n\r\n.wiki-empty h2 {\r\n  margin-top: 0;\r\n  margin-bottom: 0.5rem;\r\n  color: var(--text-color);\r\n}\r\n\r\n/* Wiki page styling */\r\n.wiki-page {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.wiki-page-header {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.wiki-page-title {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin: 0 0 0.5rem 0;\r\n  color: var(--text-color);\r\n}\r\n\r\n.wiki-page-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.wiki-page-author, .wiki-page-date {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.wiki-page-actions {\r\n  margin-left: auto;\r\n}\r\n\r\n.wiki-page-content {\r\n  line-height: 1.6;\r\n  font-size: 1rem;\r\n}\r\n\r\n.wiki-page-content h1 {\r\n  font-size: 1.75rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.wiki-page-content h2 {\r\n  font-size: 1.5rem;\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.wiki-page-content h3 {\r\n  font-size: 1.25rem;\r\n  margin-top: 1.25rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.wiki-page-content p {\r\n  margin: 0 0 1rem 0;\r\n}\r\n\r\n.wiki-page-content ul, .wiki-page-content ol {\r\n  margin: 0 0 1rem 0;\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.wiki-page-content code {\r\n  background-color: var(--surface-ground);\r\n  padding: 0.125rem 0.25rem;\r\n  border-radius: 3px;\r\n  font-family: monospace;\r\n}\r\n\r\n.wiki-page-content pre {\r\n  background-color: var(--surface-ground);\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n  overflow-x: auto;\r\n  margin: 0 0 1rem 0;\r\n}\r\n\r\n.wiki-page-content pre code {\r\n  background-color: transparent;\r\n  padding: 0;\r\n}\r\n\r\n.wiki-page-content blockquote {\r\n  border-left: 4px solid var(--primary-color-lighter, rgba(103, 58, 183, 0.3));\r\n  padding-left: 1rem;\r\n  margin: 0 0 1rem 0;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.wiki-page-footer {\r\n  margin-top: 2rem;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid var(--surface-border);\r\n}\r\n\r\n.wiki-page-tags {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.wiki-tag {\r\n  background-color: var(--surface-ground);\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 3px;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n/* Revision dialog styling */\r\n.revision-item {\r\n  padding: 0.5rem 0;\r\n}\r\n\r\n.revision-content {\r\n  background-color: var(--surface-ground);\r\n  padding: 1rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n.revision-content h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  font-size: 1rem;\r\n}\r\n\r\n.revision-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.revision-description {\r\n  font-size: 0.875rem;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.revision-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 0.5rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n/* Markdown help styling */\r\n.markdown-help-section {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.markdown-help-section h3 {\r\n  margin: 0 0 0.75rem 0;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 1px solid var(--surface-border);\r\n}\r\n\r\n.markdown-example-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.markdown-example {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.markdown-code {\r\n  background-color: var(--surface-ground);\r\n  padding: 0.5rem;\r\n  border-radius: 4px 4px 0 0;\r\n  font-family: monospace;\r\n  border: 1px solid var(--surface-border);\r\n}\r\n\r\n.markdown-result {\r\n  background-color: var(--surface-card);\r\n  padding: 0.5rem;\r\n  border-radius: 0 0 4px 4px;\r\n  border: 1px solid var(--surface-border);\r\n  border-top: none;\r\n}\r\n\r\n/* Helper text for form fields */\r\n.form-helper-text {\r\n  font-size: 0.75rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media screen and (max-width: 991px) {\r\n  .wiki-content {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .wiki-sidebar {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: 300px;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .wiki-page-meta {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .wiki-page-actions {\r\n    margin-left: 0;\r\n    margin-top: 0.5rem;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 576px) {\r\n  .page-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .markdown-example-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .wiki-page-title {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}