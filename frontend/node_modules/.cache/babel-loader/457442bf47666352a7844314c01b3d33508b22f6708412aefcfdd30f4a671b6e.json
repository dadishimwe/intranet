{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"header-left\"\n};\nconst _hoisted_3 = {\n  class: \"header-title\"\n};\nconst _hoisted_4 = {\n  class: \"header-right\"\n};\nconst _hoisted_5 = {\n  class: \"header-item\"\n};\nconst _hoisted_6 = {\n  class: \"header-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_Menu = _resolveComponent(\"Menu\");\n  const _component_Avatar = _resolveComponent(\"Avatar\");\n  return _openBlock(), _createElementBlock(\"header\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.isMobile ? (_openBlock(), _createBlock(_component_Button, {\n    key: 0,\n    icon: \"pi pi-bars\",\n    class: \"p-button-text p-button-rounded menu-toggle\",\n    onClick: $setup.onToggleSidebar\n  }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), _createElementVNode(\"h1\", _hoisted_3, _toDisplayString($setup.currentPageTitle), 1)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_Button, {\n    icon: \"pi pi-bell\",\n    badge: \"0\",\n    class: \"p-button-text p-button-rounded\",\n    onClick: $setup.toggleNotifications\n  }, null, 8, [\"onClick\"]), _createVNode(_component_Menu, {\n    ref: \"notificationMenu\",\n    model: $setup.notificationItems,\n    popup: true,\n    class: \"notification-menu\"\n  }, null, 8, [\"model\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_Avatar, {\n    image: $setup.userImage || undefined,\n    label: $setup.userInitials,\n    shape: \"circle\",\n    class: \"header-avatar\",\n    onClick: $setup.toggleUserMenu\n  }, null, 8, [\"image\", \"label\", \"onClick\"]), _createVNode(_component_Menu, {\n    ref: \"userMenu\",\n    model: $setup.userMenuItems,\n    popup: true\n  }, null, 8, [\"model\"])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","isMobile","_createBlock","_component_Button","key","icon","onClick","onToggleSidebar","_createCommentVNode","_hoisted_3","_toDisplayString","currentPageTitle","_hoisted_4","_hoisted_5","_createVNode","badge","toggleNotifications","_component_Menu","ref","model","notificationItems","popup","_hoisted_6","_component_Avatar","image","userImage","undefined","label","userInitials","shape","toggleUserMenu","userMenuItems"],"sources":["/home/pi/projects/intranet/frontend/src/components/layout/Header.vue"],"sourcesContent":["<template>\r\n    <header class=\"header\">\r\n      <div class=\"header-left\">\r\n        <!-- Mobile menu toggle button -->\r\n        <Button \r\n          v-if=\"isMobile\" \r\n          icon=\"pi pi-bars\" \r\n          class=\"p-button-text p-button-rounded menu-toggle\" \r\n          @click=\"onToggleSidebar\" \r\n        />\r\n        \r\n        <!-- Page title -->\r\n        <h1 class=\"header-title\">{{ currentPageTitle }}</h1>\r\n      </div>\r\n      \r\n      <div class=\"header-right\">\r\n        <!-- Notifications dropdown -->\r\n        <div class=\"header-item\">\r\n          <Button \r\n            icon=\"pi pi-bell\" \r\n            badge=\"0\" \r\n            class=\"p-button-text p-button-rounded\" \r\n            @click=\"toggleNotifications\" \r\n          />\r\n          \r\n          <Menu \r\n            ref=\"notificationMenu\" \r\n            :model=\"notificationItems\" \r\n            :popup=\"true\" \r\n            class=\"notification-menu\" \r\n          />\r\n        </div>\r\n        \r\n        <!-- Profile dropdown -->\r\n        <div class=\"header-item\">\r\n          <Avatar \r\n            :image=\"userImage || undefined\" \r\n            :label=\"userInitials\" \r\n            shape=\"circle\" \r\n            class=\"header-avatar\"\r\n            @click=\"toggleUserMenu\" \r\n          />\r\n          \r\n          <Menu \r\n            ref=\"userMenu\" \r\n            :model=\"userMenuItems\" \r\n            :popup=\"true\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted, onBeforeUnmount } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter, useRoute } from 'vue-router';\r\n  import Button from 'primevue/button';\r\n  import Avatar from 'primevue/avatar';\r\n  import Menu from 'primevue/menu';\r\n  \r\n  export default {\r\n    name: 'Header',\r\n    components: {\r\n      Button,\r\n      Avatar,\r\n      Menu\r\n    },\r\n    emits: ['toggle-sidebar'],\r\n    setup(props, { emit }) {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n      const route = useRoute();\r\n      const windowWidth = ref(window.innerWidth);\r\n      const notificationMenu = ref(null);\r\n      const userMenu = ref(null);\r\n      \r\n      // Computed properties\r\n      const isMobile = computed(() => windowWidth.value < 768);\r\n      \r\n      const currentPageTitle = computed(() => {\r\n        const routeMap = {\r\n          'Home': 'Dashboard',\r\n          'Users': 'Users',\r\n          'UserDetails': 'User Profile',\r\n          'OrgChart': 'Organization Chart',\r\n          'Departments': 'Departments',\r\n          'Documents': 'Documents',\r\n          'Calendar': 'Calendar',\r\n          'Wiki': 'Knowledge Base',\r\n          'Expenses': 'Expenses'\r\n        };\r\n        \r\n        return routeMap[route.name] || 'Dashboard';\r\n      });\r\n      \r\n      const userInitials = computed(() => {\r\n        const user = store.state.user;\r\n        if (user.firstName && user.lastName) {\r\n          return `${user.firstName.charAt(0)}${user.lastName.charAt(0)}`;\r\n        }\r\n        return user.email ? user.email.charAt(0).toUpperCase() : '?';\r\n      });\r\n      \r\n      const userImage = computed(() => {\r\n        return store.state.user.profileImage || null;\r\n      });\r\n      \r\n      // Notification menu items\r\n      const notificationItems = ref([\r\n        {\r\n          label: 'No new notifications',\r\n          disabled: true\r\n        },\r\n        { separator: true },\r\n        {\r\n          label: 'View all notifications',\r\n          icon: 'pi pi-list',\r\n          command: () => {\r\n            // Navigate to notifications page\r\n          }\r\n        }\r\n      ]);\r\n      \r\n      // User menu items\r\n      const userMenuItems = ref([\r\n        {\r\n          label: 'Profile',\r\n          icon: 'pi pi-user',\r\n          command: () => {\r\n            router.push(`/users/${store.state.user.id}`);\r\n          }\r\n        },\r\n        {\r\n          label: 'Settings',\r\n          icon: 'pi pi-cog',\r\n          command: () => {\r\n            // Navigate to settings page\r\n          }\r\n        },\r\n        { separator: true },\r\n        {\r\n          label: 'Logout',\r\n          icon: 'pi pi-sign-out',\r\n          command: async () => {\r\n            await store.dispatch('logout');\r\n            router.push('/login');\r\n          }\r\n        }\r\n      ]);\r\n      \r\n      // Methods\r\n      const onToggleSidebar = () => {\r\n        emit('toggle-sidebar');\r\n      };\r\n      \r\n      const toggleNotifications = (event) => {\r\n        notificationMenu.value.toggle(event);\r\n      };\r\n      \r\n      const toggleUserMenu = (event) => {\r\n        userMenu.value.toggle(event);\r\n      };\r\n      \r\n      const onResize = () => {\r\n        windowWidth.value = window.innerWidth;\r\n      };\r\n      \r\n      // Lifecycle hooks\r\n      onMounted(() => {\r\n        window.addEventListener('resize', onResize);\r\n      });\r\n      \r\n      onBeforeUnmount(() => {\r\n        window.removeEventListener('resize', onResize);\r\n      });\r\n      \r\n      return {\r\n        isMobile,\r\n        currentPageTitle,\r\n        userInitials,\r\n        userImage,\r\n        notificationItems,\r\n        userMenuItems,\r\n        notificationMenu,\r\n        userMenu,\r\n        onToggleSidebar,\r\n        toggleNotifications,\r\n        toggleUserMenu\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .header {\r\n    height: var(--topbar-height);\r\n    background-color: var(--surface-card);\r\n    border-bottom: 1px solid var(--surface-border);\r\n    padding: 0 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 997;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  }\r\n  \r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .menu-toggle {\r\n    display: none;\r\n  }\r\n  \r\n  .header-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n    color: var(--text-color);\r\n    margin: 0;\r\n  }\r\n  \r\n  .header-right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .header-item {\r\n    position: relative;\r\n  }\r\n  \r\n  .header-avatar {\r\n    cursor: pointer;\r\n    transition: transform 0.2s;\r\n  }\r\n  \r\n  .header-avatar:hover {\r\n    transform: scale(1.05);\r\n  }\r\n  \r\n  /* Mobile styles */\r\n  @media screen and (max-width: 767px) {\r\n    .menu-toggle {\r\n      display: block;\r\n    }\r\n    \r\n    .header-title {\r\n      font-size: 1rem;\r\n      max-width: 200px;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n  }\r\n  \r\n  /* Custom styling for notification menu */\r\n  :deep(.notification-menu) {\r\n    width: 300px;\r\n  }\r\n  </style>"],"mappings":";;EACYA,KAAK,EAAC;AAAQ;;EACfA,KAAK,EAAC;AAAa;;EAUlBA,KAAK,EAAC;AAAc;;EAGrBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAa;;EAiBnBA,KAAK,EAAC;AAAa;;;;;uBAjC5BC,mBAAA,CAiDS,UAjDTC,UAiDS,GAhDPC,mBAAA,CAWM,OAXNC,UAWM,GARIC,MAAA,CAAAC,QAAQ,I,cADhBC,YAAA,CAKEC,iBAAA;IATVC,GAAA;IAMUC,IAAI,EAAC,YAAY;IACjBV,KAAK,EAAC,4CAA4C;IACjDW,OAAK,EAAEN,MAAA,CAAAO;8BARlBC,mBAAA,YAYQV,mBAAA,CAAoD,MAApDW,UAAoD,EAAAC,gBAAA,CAAxBV,MAAA,CAAAW,gBAAgB,M,GAG9Cb,mBAAA,CAkCM,OAlCNc,UAkCM,GAhCJd,mBAAA,CAcM,OAdNe,UAcM,GAbJC,YAAA,CAKEX,iBAAA;IAJAE,IAAI,EAAC,YAAY;IACjBU,KAAK,EAAC,GAAG;IACTpB,KAAK,EAAC,gCAAgC;IACrCW,OAAK,EAAEN,MAAA,CAAAgB;4BAGVF,YAAA,CAKEG,eAAA;IAJAC,GAAG,EAAC,kBAAkB;IACrBC,KAAK,EAAEnB,MAAA,CAAAoB,iBAAiB;IACxBC,KAAK,EAAE,IAAI;IACZ1B,KAAK,EAAC;4BAKVG,mBAAA,CAcM,OAdNwB,UAcM,GAbJR,YAAA,CAMES,iBAAA;IALCC,KAAK,EAAExB,MAAA,CAAAyB,SAAS,IAAIC,SAAS;IAC7BC,KAAK,EAAE3B,MAAA,CAAA4B,YAAY;IACpBC,KAAK,EAAC,QAAQ;IACdlC,KAAK,EAAC,eAAe;IACpBW,OAAK,EAAEN,MAAA,CAAA8B;8CAGVhB,YAAA,CAIEG,eAAA;IAHAC,GAAG,EAAC,UAAU;IACbC,KAAK,EAAEnB,MAAA,CAAA+B,aAAa;IACpBV,KAAK,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}