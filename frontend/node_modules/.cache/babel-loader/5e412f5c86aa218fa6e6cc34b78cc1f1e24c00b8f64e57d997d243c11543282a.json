{"ast":null,"code":"import { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport Button from 'primevue/button';\nimport Avatar from 'primevue/avatar';\nimport Menu from 'primevue/menu';\nexport default {\n  name: 'Header',\n  components: {\n    Button,\n    Avatar,\n    Menu\n  },\n  emits: ['toggle-sidebar'],\n  setup(props, {\n    emit\n  }) {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const windowWidth = ref(window.innerWidth);\n    const notificationMenu = ref(null);\n    const userMenu = ref(null);\n\n    // Computed properties\n    const isMobile = computed(() => windowWidth.value < 768);\n    const currentPageTitle = computed(() => {\n      const routeMap = {\n        'Home': 'Dashboard',\n        'Users': 'Users',\n        'UserDetails': 'User Profile',\n        'OrgChart': 'Organization Chart',\n        'Departments': 'Departments',\n        'Documents': 'Documents',\n        'Calendar': 'Calendar',\n        'Wiki': 'Knowledge Base',\n        'Expenses': 'Expenses'\n      };\n      return routeMap[route.name] || 'Dashboard';\n    });\n    const userInitials = computed(() => {\n      const user = store.state.user;\n      if (user.firstName && user.lastName) {\n        return `${user.firstName.charAt(0)}${user.lastName.charAt(0)}`;\n      }\n      return user.email ? user.email.charAt(0).toUpperCase() : '?';\n    });\n    const userImage = computed(() => {\n      return store.state.user.profileImage || null;\n    });\n\n    // Notification menu items\n    const notificationItems = ref([{\n      label: 'No new notifications',\n      disabled: true\n    }, {\n      separator: true\n    }, {\n      label: 'View all notifications',\n      icon: 'pi pi-list',\n      command: () => {\n        // Navigate to notifications page\n      }\n    }]);\n\n    // User menu items\n    const userMenuItems = ref([{\n      label: 'Profile',\n      icon: 'pi pi-user',\n      command: () => {\n        router.push(`/users/${store.state.user.id}`);\n      }\n    }, {\n      label: 'Settings',\n      icon: 'pi pi-cog',\n      command: () => {\n        // Navigate to settings page\n      }\n    }, {\n      separator: true\n    }, {\n      label: 'Logout',\n      icon: 'pi pi-sign-out',\n      command: async () => {\n        await store.dispatch('logout');\n        router.push('/login');\n      }\n    }]);\n\n    // Methods\n    const onToggleSidebar = () => {\n      emit('toggle-sidebar');\n    };\n    const toggleNotifications = event => {\n      notificationMenu.value.toggle(event);\n    };\n    const toggleUserMenu = event => {\n      userMenu.value.toggle(event);\n    };\n    const onResize = () => {\n      windowWidth.value = window.innerWidth;\n    };\n\n    // Lifecycle hooks\n    onMounted(() => {\n      window.addEventListener('resize', onResize);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', onResize);\n    });\n    return {\n      isMobile,\n      currentPageTitle,\n      userInitials,\n      userImage,\n      notificationItems,\n      userMenuItems,\n      notificationMenu,\n      userMenu,\n      onToggleSidebar,\n      toggleNotifications,\n      toggleUserMenu\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","useStore","useRouter","useRoute","Button","Avatar","Menu","name","components","emits","setup","props","emit","store","router","route","windowWidth","window","innerWidth","notificationMenu","userMenu","isMobile","value","currentPageTitle","routeMap","userInitials","user","state","firstName","lastName","charAt","email","toUpperCase","userImage","profileImage","notificationItems","label","disabled","separator","icon","command","userMenuItems","push","id","dispatch","onToggleSidebar","toggleNotifications","event","toggle","toggleUserMenu","onResize","addEventListener","removeEventListener"],"sources":["/home/pi/projects/intranet/frontend/src/components/layout/Header.vue"],"sourcesContent":["<template>\r\n    <header class=\"header\">\r\n      <div class=\"header-left\">\r\n        <!-- Mobile menu toggle button -->\r\n        <Button \r\n          v-if=\"isMobile\" \r\n          icon=\"pi pi-bars\" \r\n          class=\"p-button-text p-button-rounded menu-toggle\" \r\n          @click=\"onToggleSidebar\" \r\n        />\r\n        \r\n        <!-- Page title -->\r\n        <h1 class=\"header-title\">{{ currentPageTitle }}</h1>\r\n      </div>\r\n      \r\n      <div class=\"header-right\">\r\n        <!-- Notifications dropdown -->\r\n        <div class=\"header-item\">\r\n          <Button \r\n            icon=\"pi pi-bell\" \r\n            badge=\"0\" \r\n            class=\"p-button-text p-button-rounded\" \r\n            @click=\"toggleNotifications\" \r\n          />\r\n          \r\n          <Menu \r\n            ref=\"notificationMenu\" \r\n            :model=\"notificationItems\" \r\n            :popup=\"true\" \r\n            class=\"notification-menu\" \r\n          />\r\n        </div>\r\n        \r\n        <!-- Profile dropdown -->\r\n        <div class=\"header-item\">\r\n          <Avatar \r\n            :image=\"userImage || undefined\" \r\n            :label=\"userInitials\" \r\n            shape=\"circle\" \r\n            class=\"header-avatar\"\r\n            @click=\"toggleUserMenu\" \r\n          />\r\n          \r\n          <Menu \r\n            ref=\"userMenu\" \r\n            :model=\"userMenuItems\" \r\n            :popup=\"true\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, computed, onMounted, onBeforeUnmount } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter, useRoute } from 'vue-router';\r\n  import Button from 'primevue/button';\r\n  import Avatar from 'primevue/avatar';\r\n  import Menu from 'primevue/menu';\r\n  \r\n  export default {\r\n    name: 'Header',\r\n    components: {\r\n      Button,\r\n      Avatar,\r\n      Menu\r\n    },\r\n    emits: ['toggle-sidebar'],\r\n    setup(props, { emit }) {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n      const route = useRoute();\r\n      const windowWidth = ref(window.innerWidth);\r\n      const notificationMenu = ref(null);\r\n      const userMenu = ref(null);\r\n      \r\n      // Computed properties\r\n      const isMobile = computed(() => windowWidth.value < 768);\r\n      \r\n      const currentPageTitle = computed(() => {\r\n        const routeMap = {\r\n          'Home': 'Dashboard',\r\n          'Users': 'Users',\r\n          'UserDetails': 'User Profile',\r\n          'OrgChart': 'Organization Chart',\r\n          'Departments': 'Departments',\r\n          'Documents': 'Documents',\r\n          'Calendar': 'Calendar',\r\n          'Wiki': 'Knowledge Base',\r\n          'Expenses': 'Expenses'\r\n        };\r\n        \r\n        return routeMap[route.name] || 'Dashboard';\r\n      });\r\n      \r\n      const userInitials = computed(() => {\r\n        const user = store.state.user;\r\n        if (user.firstName && user.lastName) {\r\n          return `${user.firstName.charAt(0)}${user.lastName.charAt(0)}`;\r\n        }\r\n        return user.email ? user.email.charAt(0).toUpperCase() : '?';\r\n      });\r\n      \r\n      const userImage = computed(() => {\r\n        return store.state.user.profileImage || null;\r\n      });\r\n      \r\n      // Notification menu items\r\n      const notificationItems = ref([\r\n        {\r\n          label: 'No new notifications',\r\n          disabled: true\r\n        },\r\n        { separator: true },\r\n        {\r\n          label: 'View all notifications',\r\n          icon: 'pi pi-list',\r\n          command: () => {\r\n            // Navigate to notifications page\r\n          }\r\n        }\r\n      ]);\r\n      \r\n      // User menu items\r\n      const userMenuItems = ref([\r\n        {\r\n          label: 'Profile',\r\n          icon: 'pi pi-user',\r\n          command: () => {\r\n            router.push(`/users/${store.state.user.id}`);\r\n          }\r\n        },\r\n        {\r\n          label: 'Settings',\r\n          icon: 'pi pi-cog',\r\n          command: () => {\r\n            // Navigate to settings page\r\n          }\r\n        },\r\n        { separator: true },\r\n        {\r\n          label: 'Logout',\r\n          icon: 'pi pi-sign-out',\r\n          command: async () => {\r\n            await store.dispatch('logout');\r\n            router.push('/login');\r\n          }\r\n        }\r\n      ]);\r\n      \r\n      // Methods\r\n      const onToggleSidebar = () => {\r\n        emit('toggle-sidebar');\r\n      };\r\n      \r\n      const toggleNotifications = (event) => {\r\n        notificationMenu.value.toggle(event);\r\n      };\r\n      \r\n      const toggleUserMenu = (event) => {\r\n        userMenu.value.toggle(event);\r\n      };\r\n      \r\n      const onResize = () => {\r\n        windowWidth.value = window.innerWidth;\r\n      };\r\n      \r\n      // Lifecycle hooks\r\n      onMounted(() => {\r\n        window.addEventListener('resize', onResize);\r\n      });\r\n      \r\n      onBeforeUnmount(() => {\r\n        window.removeEventListener('resize', onResize);\r\n      });\r\n      \r\n      return {\r\n        isMobile,\r\n        currentPageTitle,\r\n        userInitials,\r\n        userImage,\r\n        notificationItems,\r\n        userMenuItems,\r\n        notificationMenu,\r\n        userMenu,\r\n        onToggleSidebar,\r\n        toggleNotifications,\r\n        toggleUserMenu\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .header {\r\n    height: var(--topbar-height);\r\n    background-color: var(--surface-card);\r\n    border-bottom: 1px solid var(--surface-border);\r\n    padding: 0 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 997;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  }\r\n  \r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .menu-toggle {\r\n    display: none;\r\n  }\r\n  \r\n  .header-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n    color: var(--text-color);\r\n    margin: 0;\r\n  }\r\n  \r\n  .header-right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .header-item {\r\n    position: relative;\r\n  }\r\n  \r\n  .header-avatar {\r\n    cursor: pointer;\r\n    transition: transform 0.2s;\r\n  }\r\n  \r\n  .header-avatar:hover {\r\n    transform: scale(1.05);\r\n  }\r\n  \r\n  /* Mobile styles */\r\n  @media screen and (max-width: 767px) {\r\n    .menu-toggle {\r\n      display: block;\r\n    }\r\n    \r\n    .header-title {\r\n      font-size: 1rem;\r\n      max-width: 200px;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n  }\r\n  \r\n  /* Custom styling for notification menu */\r\n  :deep(.notification-menu) {\r\n    width: 300px;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}