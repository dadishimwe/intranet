{"ast":null,"code":"import { createApp } from 'vue';\nimport { createStore } from 'vuex';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport PrimeVue from 'primevue/config';\nimport ToastService from 'primevue/toastservice';\nimport ConfirmationService from 'primevue/confirmationservice';\n\n// Import PrimeVue components and styles\nimport 'primevue/resources/themes/saga-blue/theme.css';\nimport 'primevue/resources/primevue.min.css';\nimport 'primeicons/primeicons.css';\nimport '/node_modules/primeflex/primeflex.css';\n\n// Import main app component\nimport App from './App.vue';\n\n// Import API service\nimport api from './services/api';\n\n// Import route components\nimport Login from './views/Login.vue';\nimport Home from './views/Home.vue';\nimport NotFound from './views/NotFound.vue';\nimport Users from './views/Users.vue';\nimport UserDetails from './views/UserDetails.vue';\nimport OrgChart from './views/OrgChart.vue';\nimport Departments from './views/Departments.vue';\nimport Documents from './views/Documents.vue';\nimport Calendar from './views/Calendar.vue';\nimport Wiki from './views/Wiki.vue';\nimport Expenses from './views/Expenses.vue';\nimport Unauthorized from './views/Unauthorized.vue';\n\n// Define routes\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/users',\n  name: 'Users',\n  component: Users,\n  meta: {\n    requiresAuth: true,\n    requiredRoles: ['admin', 'manager']\n  }\n}, {\n  path: '/users/:id',\n  name: 'UserDetails',\n  component: UserDetails,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/organization',\n  name: 'OrgChart',\n  component: OrgChart,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/departments',\n  name: 'Departments',\n  component: Departments,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/documents',\n  name: 'Documents',\n  component: Documents,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/calendar',\n  name: 'Calendar',\n  component: Calendar,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/wiki',\n  name: 'Wiki',\n  component: Wiki,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/expenses',\n  name: 'Expenses',\n  component: Expenses,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/unauthorized',\n  name: 'Unauthorized',\n  component: Unauthorized,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: NotFound,\n  meta: {\n    requiresAuth: false\n  }\n}];\n\n// Create router\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// Router guard for authentication\nrouter.beforeEach((to, from, next) => {\n  const auth = localStorage.getItem('token');\n  const userData = JSON.parse(localStorage.getItem('user') || '{}');\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiredRoles = to.meta.requiredRoles || [];\n\n  // Handle authentication check\n  if (requiresAuth && !auth) {\n    next({\n      name: 'Login',\n      query: {\n        redirect: to.fullPath\n      }\n    });\n    return;\n  }\n\n  // Handle role-based access\n  if (requiresAuth && requiredRoles.length > 0 && !requiredRoles.includes(userData.role)) {\n    next({\n      name: 'Unauthorized'\n    });\n    return;\n  }\n\n  // Prevent authenticated users from accessing login page\n  if (to.name === 'Login' && auth) {\n    next({\n      name: 'Home'\n    });\n    return;\n  }\n  next();\n});\n\n// Create Vuex store\nconst store = createStore({\n  state() {\n    return {\n      isAuthenticated: !!localStorage.getItem('token'),\n      user: JSON.parse(localStorage.getItem('user') || '{}'),\n      notifications: [],\n      loading: false,\n      appTitle: 'Corporate Intranet'\n    };\n  },\n  mutations: {\n    setAuthenticated(state, status) {\n      state.isAuthenticated = status;\n    },\n    setUser(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    setToken(state, token) {\n      localStorage.setItem('token', token);\n      state.isAuthenticated = true;\n      api.setAuthHeader(token);\n    },\n    clearAuth(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.isAuthenticated = false;\n      state.user = {};\n      api.removeAuthHeader();\n    },\n    addNotification(state, notification) {\n      state.notifications.push(notification);\n    },\n    clearNotifications(state) {\n      state.notifications = [];\n    },\n    setLoading(state, status) {\n      state.loading = status;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        commit('setLoading', true);\n        const response = await api.post('/auth/login', credentials);\n        const {\n          token,\n          user\n        } = response.data.data;\n        commit('setToken', token);\n        commit('setUser', user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        commit('clearAuth');\n        return {\n          success: false,\n          message: error.response?.data?.message || 'Login failed'\n        };\n      } finally {\n        commit('setLoading', false);\n      }\n    },\n    async logout({\n      commit\n    }) {\n      try {\n        commit('setLoading', true);\n        await api.post('/auth/logout');\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        commit('clearAuth');\n        commit('setLoading', false);\n      }\n    },\n    async refreshToken({\n      commit,\n      state\n    }) {\n      try {\n        // Only refresh if authenticated\n        if (!state.isAuthenticated) return false;\n        const response = await api.post('/auth/refresh-token');\n        const {\n          token\n        } = response.data.data;\n        commit('setToken', token);\n        return true;\n      } catch (error) {\n        console.error('Token refresh error:', error);\n        commit('clearAuth');\n        return false;\n      }\n    },\n    async getUserProfile({\n      commit\n    }) {\n      try {\n        commit('setLoading', true);\n        const response = await api.get('/auth/profile');\n        commit('setUser', response.data.data);\n        return response.data.data;\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        throw error;\n      } finally {\n        commit('setLoading', false);\n      }\n    }\n  },\n  getters: {\n    isAdmin(state) {\n      return state.user.role === 'admin';\n    },\n    isManager(state) {\n      return state.user.role === 'manager';\n    },\n    hasRole: state => roles => {\n      return roles.includes(state.user.role);\n    },\n    userName(state) {\n      return state.user.firstName ? `${state.user.firstName} ${state.user.lastName}` : state.user.email;\n    }\n  }\n});\n\n// Initialize API service with auth token\nif (localStorage.getItem('token')) {\n  api.setAuthHeader(localStorage.getItem('token'));\n}\n\n// Create and mount Vue app\nconst app = createApp(App);\n\n// Use plugins\napp.use(router);\napp.use(store);\napp.use(PrimeVue, {\n  ripple: true\n});\napp.use(ToastService);\napp.use(ConfirmationService);\n\n// Global error handler\napp.config.errorHandler = (err, vm, info) => {\n  console.error('Global error:', err);\n  console.error('Info:', info);\n\n  // Handle authentication errors\n  if (err.response && err.response.status === 401) {\n    store.commit('clearAuth');\n    router.push('/login');\n  }\n};\n\n// Mount the app\napp.mount('#app');","map":{"version":3,"names":["createApp","createStore","createRouter","createWebHistory","PrimeVue","ToastService","ConfirmationService","App","api","Login","Home","NotFound","Users","UserDetails","OrgChart","Departments","Documents","Calendar","Wiki","Expenses","Unauthorized","routes","path","name","component","meta","requiresAuth","requiredRoles","router","history","beforeEach","to","from","next","auth","localStorage","getItem","userData","JSON","parse","matched","some","record","query","redirect","fullPath","length","includes","role","store","state","isAuthenticated","user","notifications","loading","appTitle","mutations","setAuthenticated","status","setUser","setItem","stringify","setToken","token","setAuthHeader","clearAuth","removeItem","removeAuthHeader","addNotification","notification","push","clearNotifications","setLoading","actions","login","commit","credentials","response","post","data","success","error","message","logout","console","refreshToken","getUserProfile","get","getters","isAdmin","isManager","hasRole","roles","userName","firstName","lastName","email","app","use","ripple","config","errorHandler","err","vm","info","mount"],"sources":["/home/pi/projects/intranet/frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\r\nimport { createStore } from 'vuex';\r\nimport { createRouter, createWebHistory } from 'vue-router';\r\nimport PrimeVue from 'primevue/config';\r\nimport ToastService from 'primevue/toastservice';\r\nimport ConfirmationService from 'primevue/confirmationservice';\r\n\r\n// Import PrimeVue components and styles\r\nimport 'primevue/resources/themes/saga-blue/theme.css';\r\nimport 'primevue/resources/primevue.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport '/node_modules/primeflex/primeflex.css';\r\n\r\n// Import main app component\r\nimport App from './App.vue';\r\n\r\n// Import API service\r\nimport api from './services/api';\r\n\r\n// Import route components\r\nimport Login from './views/Login.vue';\r\nimport Home from './views/Home.vue';\r\nimport NotFound from './views/NotFound.vue';\r\nimport Users from './views/Users.vue';\r\nimport UserDetails from './views/UserDetails.vue';\r\nimport OrgChart from './views/OrgChart.vue';\r\nimport Departments from './views/Departments.vue';\r\nimport Documents from './views/Documents.vue';\r\nimport Calendar from './views/Calendar.vue';\r\nimport Wiki from './views/Wiki.vue';\r\nimport Expenses from './views/Expenses.vue';\r\nimport Unauthorized from './views/Unauthorized.vue';\r\n\r\n// Define routes\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/users',\r\n    name: 'Users',\r\n    component: Users,\r\n    meta: { requiresAuth: true, requiredRoles: ['admin', 'manager'] }\r\n  },\r\n  {\r\n    path: '/users/:id',\r\n    name: 'UserDetails',\r\n    component: UserDetails,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/organization',\r\n    name: 'OrgChart',\r\n    component: OrgChart,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/departments',\r\n    name: 'Departments',\r\n    component: Departments,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/documents',\r\n    name: 'Documents',\r\n    component: Documents,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/calendar',\r\n    name: 'Calendar',\r\n    component: Calendar,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/wiki',\r\n    name: 'Wiki',\r\n    component: Wiki,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/expenses',\r\n    name: 'Expenses',\r\n    component: Expenses,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/unauthorized',\r\n    name: 'Unauthorized',\r\n    component: Unauthorized,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/:pathMatch(.*)*',\r\n    name: 'NotFound',\r\n    component: NotFound,\r\n    meta: { requiresAuth: false }\r\n  }\r\n];\r\n\r\n// Create router\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\n// Router guard for authentication\r\nrouter.beforeEach((to, from, next) => {\r\n  const auth = localStorage.getItem('token');\r\n  const userData = JSON.parse(localStorage.getItem('user') || '{}');\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const requiredRoles = to.meta.requiredRoles || [];\r\n  \r\n  // Handle authentication check\r\n  if (requiresAuth && !auth) {\r\n    next({ name: 'Login', query: { redirect: to.fullPath } });\r\n    return;\r\n  }\r\n  \r\n  // Handle role-based access\r\n  if (requiresAuth && requiredRoles.length > 0 && !requiredRoles.includes(userData.role)) {\r\n    next({ name: 'Unauthorized' });\r\n    return;\r\n  }\r\n  \r\n  // Prevent authenticated users from accessing login page\r\n  if (to.name === 'Login' && auth) {\r\n    next({ name: 'Home' });\r\n    return;\r\n  }\r\n  \r\n  next();\r\n});\r\n\r\n// Create Vuex store\r\nconst store = createStore({\r\n  state() {\r\n    return {\r\n      isAuthenticated: !!localStorage.getItem('token'),\r\n      user: JSON.parse(localStorage.getItem('user') || '{}'),\r\n      notifications: [],\r\n      loading: false,\r\n      appTitle: 'Corporate Intranet'\r\n    };\r\n  },\r\n  mutations: {\r\n    setAuthenticated(state, status) {\r\n      state.isAuthenticated = status;\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    },\r\n    setToken(state, token) {\r\n      localStorage.setItem('token', token);\r\n      state.isAuthenticated = true;\r\n      api.setAuthHeader(token);\r\n    },\r\n    clearAuth(state) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      state.isAuthenticated = false;\r\n      state.user = {};\r\n      api.removeAuthHeader();\r\n    },\r\n    addNotification(state, notification) {\r\n      state.notifications.push(notification);\r\n    },\r\n    clearNotifications(state) {\r\n      state.notifications = [];\r\n    },\r\n    setLoading(state, status) {\r\n      state.loading = status;\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      try {\r\n        commit('setLoading', true);\r\n        const response = await api.post('/auth/login', credentials);\r\n        const { token, user } = response.data.data;\r\n        \r\n        commit('setToken', token);\r\n        commit('setUser', user);\r\n        \r\n        return { success: true };\r\n      } catch (error) {\r\n        commit('clearAuth');\r\n        return { \r\n          success: false, \r\n          message: error.response?.data?.message || 'Login failed'\r\n        };\r\n      } finally {\r\n        commit('setLoading', false);\r\n      }\r\n    },\r\n    async logout({ commit }) {\r\n      try {\r\n        commit('setLoading', true);\r\n        await api.post('/auth/logout');\r\n      } catch (error) {\r\n        console.error('Logout error:', error);\r\n      } finally {\r\n        commit('clearAuth');\r\n        commit('setLoading', false);\r\n      }\r\n    },\r\n    async refreshToken({ commit, state }) {\r\n      try {\r\n        // Only refresh if authenticated\r\n        if (!state.isAuthenticated) return false;\r\n        \r\n        const response = await api.post('/auth/refresh-token');\r\n        const { token } = response.data.data;\r\n        \r\n        commit('setToken', token);\r\n        return true;\r\n      } catch (error) {\r\n        console.error('Token refresh error:', error);\r\n        commit('clearAuth');\r\n        return false;\r\n      }\r\n    },\r\n    async getUserProfile({ commit }) {\r\n      try {\r\n        commit('setLoading', true);\r\n        const response = await api.get('/auth/profile');\r\n        commit('setUser', response.data.data);\r\n        return response.data.data;\r\n      } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n        throw error;\r\n      } finally {\r\n        commit('setLoading', false);\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    isAdmin(state) {\r\n      return state.user.role === 'admin';\r\n    },\r\n    isManager(state) {\r\n      return state.user.role === 'manager';\r\n    },\r\n    hasRole: (state) => (roles) => {\r\n      return roles.includes(state.user.role);\r\n    },\r\n    userName(state) {\r\n      return state.user.firstName \r\n        ? `${state.user.firstName} ${state.user.lastName}`\r\n        : state.user.email;\r\n    }\r\n  }\r\n});\r\n\r\n// Initialize API service with auth token\r\nif (localStorage.getItem('token')) {\r\n  api.setAuthHeader(localStorage.getItem('token'));\r\n}\r\n\r\n// Create and mount Vue app\r\nconst app = createApp(App);\r\n\r\n// Use plugins\r\napp.use(router);\r\napp.use(store);\r\napp.use(PrimeVue, { ripple: true });\r\napp.use(ToastService);\r\napp.use(ConfirmationService);\r\n\r\n// Global error handler\r\napp.config.errorHandler = (err, vm, info) => {\r\n  console.error('Global error:', err);\r\n  console.error('Info:', info);\r\n  \r\n  // Handle authentication errors\r\n  if (err.response && err.response.status === 401) {\r\n    store.commit('clearAuth');\r\n    router.push('/login');\r\n  }\r\n};\r\n\r\n// Mount the app\r\napp.mount('#app');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}