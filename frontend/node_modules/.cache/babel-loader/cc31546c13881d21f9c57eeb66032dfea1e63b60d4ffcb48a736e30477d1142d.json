{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"users-container\"\n};\nconst _hoisted_2 = {\n  class: \"page-header\"\n};\nconst _hoisted_3 = {\n  class: \"page-actions\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"user-filters\"\n};\nconst _hoisted_6 = {\n  class: \"grid\"\n};\nconst _hoisted_7 = {\n  class: \"col-12 md:col-4\"\n};\nconst _hoisted_8 = {\n  class: \"p-input-icon-left w-full\"\n};\nconst _hoisted_9 = {\n  class: \"col-12 md:col-3\"\n};\nconst _hoisted_10 = {\n  class: \"col-12 md:col-3\"\n};\nconst _hoisted_11 = {\n  class: \"col-12 md:col-2\"\n};\nconst _hoisted_12 = {\n  class: \"p-inputgroup w-full\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"user-list\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"empty-message\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"grid\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  class: \"user-card-header\"\n};\nconst _hoisted_19 = {\n  class: \"user-info\"\n};\nconst _hoisted_20 = {\n  class: \"user-name\"\n};\nconst _hoisted_21 = {\n  class: \"user-title\"\n};\nconst _hoisted_22 = {\n  class: \"user-card-content\"\n};\nconst _hoisted_23 = {\n  class: \"user-detail\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"user-detail\"\n};\nconst _hoisted_25 = {\n  key: 1,\n  class: \"user-detail\"\n};\nconst _hoisted_26 = {\n  class: \"user-card-footer\"\n};\nconst _hoisted_27 = {\n  class: \"user-form\"\n};\nconst _hoisted_28 = {\n  class: \"profile-image-upload\"\n};\nconst _hoisted_29 = {\n  class: \"profile-image-container\"\n};\nconst _hoisted_30 = {\n  class: \"profile-upload-overlay\"\n};\nconst _hoisted_31 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_32 = {\n  class: \"grid\"\n};\nconst _hoisted_33 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_34 = {\n  class: \"field\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_36 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_37 = {\n  class: \"field\"\n};\nconst _hoisted_38 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_39 = {\n  class: \"col-12\"\n};\nconst _hoisted_40 = {\n  class: \"field\"\n};\nconst _hoisted_41 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_42 = {\n  key: 1,\n  class: \"p-error\"\n};\nconst _hoisted_43 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_44 = {\n  class: \"field\"\n};\nconst _hoisted_45 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_46 = {\n  class: \"field\"\n};\nconst _hoisted_47 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_48 = {\n  class: \"field\"\n};\nconst _hoisted_49 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_50 = {\n  class: \"field\"\n};\nconst _hoisted_51 = {\n  key: 0,\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_52 = {\n  class: \"field\"\n};\nconst _hoisted_53 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_54 = {\n  key: 1,\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_55 = {\n  class: \"field\"\n};\nconst _hoisted_56 = {\n  class: \"field-checkbox\"\n};\nconst _hoisted_57 = {\n  class: \"col-12\"\n};\nconst _hoisted_58 = {\n  class: \"inline-flex align-items-center\"\n};\nconst _hoisted_59 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_60 = {\n  class: \"field\"\n};\nconst _hoisted_61 = {\n  for: \"password\"\n};\nconst _hoisted_62 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_63 = {\n  class: \"col-12 md:col-6\"\n};\nconst _hoisted_64 = {\n  class: \"field\"\n};\nconst _hoisted_65 = {\n  for: \"confirmPassword\"\n};\nconst _hoisted_66 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_67 = {\n  key: 1,\n  class: \"p-error\"\n};\nconst _hoisted_68 = {\n  key: 3,\n  class: \"col-12\"\n};\nconst _hoisted_69 = {\n  key: 0,\n  class: \"user-details\"\n};\nconst _hoisted_70 = {\n  class: \"user-details-header\"\n};\nconst _hoisted_71 = {\n  class: \"user-header-info\"\n};\nconst _hoisted_72 = {\n  class: \"user-full-name\"\n};\nconst _hoisted_73 = {\n  class: \"user-job-title\"\n};\nconst _hoisted_74 = {\n  class: \"user-tags\"\n};\nconst _hoisted_75 = {\n  class: \"user-details-content\"\n};\nconst _hoisted_76 = {\n  class: \"user-info-section\"\n};\nconst _hoisted_77 = {\n  class: \"user-info-grid\"\n};\nconst _hoisted_78 = {\n  class: \"info-group\"\n};\nconst _hoisted_79 = {\n  class: \"info-value\"\n};\nconst _hoisted_80 = [\"href\"];\nconst _hoisted_81 = {\n  key: 0,\n  class: \"info-group\"\n};\nconst _hoisted_82 = {\n  class: \"info-value\"\n};\nconst _hoisted_83 = [\"href\"];\nconst _hoisted_84 = {\n  class: \"user-info-section\"\n};\nconst _hoisted_85 = {\n  class: \"user-info-grid\"\n};\nconst _hoisted_86 = {\n  key: 0,\n  class: \"info-group\"\n};\nconst _hoisted_87 = {\n  class: \"info-value\"\n};\nconst _hoisted_88 = {\n  key: 1,\n  class: \"info-group\"\n};\nconst _hoisted_89 = {\n  class: \"info-value\"\n};\nconst _hoisted_90 = {\n  key: 0,\n  class: \"user-info-section\"\n};\nconst _hoisted_91 = {\n  class: \"direct-reports-list\"\n};\nconst _hoisted_92 = [\"onClick\"];\nconst _hoisted_93 = {\n  class: \"report-info\"\n};\nconst _hoisted_94 = {\n  class: \"report-name\"\n};\nconst _hoisted_95 = {\n  class: \"report-title\"\n};\nconst _hoisted_96 = {\n  class: \"user-info-section\"\n};\nconst _hoisted_97 = {\n  class: \"user-info-grid\"\n};\nconst _hoisted_98 = {\n  class: \"info-group\"\n};\nconst _hoisted_99 = {\n  class: \"info-value\"\n};\nconst _hoisted_100 = {\n  class: \"info-group\"\n};\nconst _hoisted_101 = {\n  class: \"info-value\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  const _component_InputText = _resolveComponent(\"InputText\");\n  const _component_Dropdown = _resolveComponent(\"Dropdown\");\n  const _component_ProgressSpinner = _resolveComponent(\"ProgressSpinner\");\n  const _component_Avatar = _resolveComponent(\"Avatar\");\n  const _component_Tag = _resolveComponent(\"Tag\");\n  const _component_Ripple = _resolveComponent(\"Ripple\");\n  const _component_Paginator = _resolveComponent(\"Paginator\");\n  const _component_FileUpload = _resolveComponent(\"FileUpload\");\n  const _component_Checkbox = _resolveComponent(\"Checkbox\");\n  const _component_Divider = _resolveComponent(\"Divider\");\n  const _component_Password = _resolveComponent(\"Password\");\n  const _component_Dialog = _resolveComponent(\"Dialog\");\n  const _component_ConfirmDialog = _resolveComponent(\"ConfirmDialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[19] || (_cache[19] = _createElementVNode(\"h1\", {\n    class: \"page-title\"\n  }, \"Company Directory\", -1)), _createElementVNode(\"div\", _hoisted_3, [$setup.isAdmin ? (_openBlock(), _createBlock(_component_Button, {\n    key: 0,\n    label: \"Add User\",\n    icon: \"pi pi-plus\",\n    onClick: _ctx.openNewUserAppDialog,\n    class: \"p-button-primary\"\n  }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, [_cache[20] || (_cache[20] = _createElementVNode(\"i\", {\n    class: \"pi pi-search\"\n  }, null, -1)), _createVNode(_component_InputText, {\n    modelValue: $setup.filters.searchTerm,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.searchTerm = $event),\n    placeholder: \"Search users\",\n    class: \"w-full\",\n    onInput: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"onInput\"])])]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_Dropdown, {\n    modelValue: $setup.filters.departmentId,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.departmentId = $event),\n    options: $setup.departments,\n    optionLabel: \"name\",\n    optionValue: \"id\",\n    placeholder: \"All AppDepartments\",\n    class: \"w-full\",\n    onChange: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"options\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_Dropdown, {\n    modelValue: $setup.filters.role,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.role = $event),\n    options: $setup.roleOptions,\n    optionLabel: \"label\",\n    optionValue: \"value\",\n    placeholder: \"All Roles\",\n    class: \"w-full\",\n    onChange: $setup.onFilterChange\n  }, null, 8, [\"modelValue\", \"options\", \"onChange\"])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[21] || (_cache[21] = _createElementVNode(\"span\", {\n    class: \"p-inputgroup-addon\"\n  }, [_createElementVNode(\"i\", {\n    class: \"pi pi-user\"\n  })], -1)), _createVNode(_component_Button, {\n    label: $setup.filters.isActive !== false ? 'Active Only' : 'All Users',\n    class: _normalizeClass([{\n      'p-button-success': $setup.filters.isActive !== false\n    }, \"w-full\"]),\n    onClick: $setup.toggleActiveFilter\n  }, null, 8, [\"label\", \"class\", \"onClick\"])])])])]), $setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_ProgressSpinner)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [$setup.users.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _cache[22] || (_cache[22] = [_createElementVNode(\"i\", {\n    class: \"pi pi-users\"\n  }, null, -1), _createElementVNode(\"p\", null, \"No users found\", -1)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.users, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id,\n      class: \"col-12 md:col-6 lg:col-4 xl:col-3\"\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"user-card p-ripple\", {\n        'inactive-user': !user.is_active\n      }]),\n      onClick: $event => $setup.viewUser(user)\n    }, [_createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_Avatar, {\n      image: user.profile_image,\n      size: \"large\",\n      shape: \"circle\",\n      pt: {\n        image: {\n          style: {\n            objectFit: 'cover',\n            width: '64px',\n            height: '64px'\n          }\n        }\n      }\n    }, null, 8, [\"image\"]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"h3\", _hoisted_20, _toDisplayString(user.first_name) + \" \" + _toDisplayString(user.last_name), 1), _createElementVNode(\"div\", _hoisted_21, _toDisplayString(user.job_title || 'No title'), 1)])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_cache[23] || (_cache[23] = _createElementVNode(\"i\", {\n      class: \"pi pi-envelope\"\n    }, null, -1)), _createElementVNode(\"span\", null, _toDisplayString(user.email), 1)]), user.department_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_cache[24] || (_cache[24] = _createElementVNode(\"i\", {\n      class: \"pi pi-sitemap\"\n    }, null, -1)), _createElementVNode(\"span\", null, _toDisplayString(user.department_name), 1)])) : _createCommentVNode(\"\", true), user.phone ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_cache[25] || (_cache[25] = _createElementVNode(\"i\", {\n      class: \"pi pi-phone\"\n    }, null, -1)), _createElementVNode(\"span\", null, _toDisplayString(user.phone), 1)])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_Tag, {\n      value: user.role,\n      severity: $setup.getRoleSeverity(user.role)\n    }, null, 8, [\"value\", \"severity\"]), !user.is_active ? (_openBlock(), _createBlock(_component_Tag, {\n      key: 0,\n      value: \"Inactive\",\n      severity: \"danger\"\n    })) : _createCommentVNode(\"\", true)]), _createVNode(_component_Ripple)], 10, _hoisted_17)]);\n  }), 128))])), $setup.users.length > 0 ? (_openBlock(), _createBlock(_component_Paginator, {\n    key: 2,\n    rows: $setup.pagination.per_page,\n    totalRecords: $setup.pagination.total,\n    rowsPerPageOptions: [12, 24, 48],\n    onPage: _cache[3] || (_cache[3] = $event => $setup.onPageChange($event)),\n    template: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n    class: \"user-paginator\"\n  }, null, 8, [\"rows\", \"totalRecords\"])) : _createCommentVNode(\"\", true)]))]), _createVNode(_component_Dialog, {\n    visible: $setup.userDialogVisible,\n    \"onUpdate:visible\": _cache[16] || (_cache[16] = $event => $setup.userDialogVisible = $event),\n    style: {\n      width: '650px'\n    },\n    header: $setup.dialogMode === 'create' ? 'New User' : 'Edit User',\n    modal: true,\n    class: \"p-fluid user-dialog\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_Button, {\n      label: \"Cancel\",\n      icon: \"pi pi-times\",\n      class: \"p-button-text\",\n      onClick: _ctx.closeUserAppDialog\n    }, null, 8, [\"onClick\"]), $setup.dialogMode === 'edit' && $setup.isAdmin ? (_openBlock(), _createBlock(_component_Button, {\n      key: 0,\n      label: \"Delete\",\n      icon: \"pi pi-trash\",\n      class: \"p-button-danger mr-2\",\n      onClick: $setup.confirmDeleteUser\n    }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true), _createVNode(_component_Button, {\n      label: \"Save\",\n      icon: \"pi pi-check\",\n      onClick: $setup.saveUser,\n      loading: $setup.saving\n    }, null, 8, [\"onClick\", \"loading\"])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createVNode(_component_Avatar, {\n      image: $setup.userForm.profileImageUrl || null,\n      size: \"xlarge\",\n      shape: \"circle\",\n      pt: {\n        image: {\n          style: {\n            objectFit: 'cover',\n            width: '100px',\n            height: '100px'\n          }\n        }\n      }\n    }, {\n      icon: _withCtx(() => _cache[26] || (_cache[26] = [_createElementVNode(\"i\", {\n        class: \"pi pi-user\",\n        style: {\n          \"font-size\": \"2rem\"\n        }\n      }, null, -1)])),\n      _: 1\n    }, 8, [\"image\"]), _createElementVNode(\"div\", _hoisted_30, [_createVNode(_component_FileUpload, {\n      mode: \"basic\",\n      name: \"profile\",\n      accept: \"image/*\",\n      maxFileSize: 1000000,\n      chooseLabel: \"\",\n      class: \"p-button-rounded p-button-outlined p-button-sm profile-upload-button\",\n      onSelect: $setup.onProfileImageSelect,\n      onError: $setup.onProfileImageError\n    }, {\n      chooseicon: _withCtx(() => _cache[27] || (_cache[27] = [_createElementVNode(\"i\", {\n        class: \"pi pi-camera\"\n      }, null, -1)])),\n      _: 1\n    }, 8, [\"onSelect\", \"onError\"])])]), $setup.profileImageError ? (_openBlock(), _createElementBlock(\"small\", _hoisted_31, _toDisplayString($setup.profileImageError), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n      for: \"firstName\"\n    }, \"First Name*\", -1)), _createVNode(_component_InputText, {\n      id: \"firstName\",\n      modelValue: $setup.userForm.firstName,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.userForm.firstName = $event),\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.userForm.firstName\n      })\n    }, null, 8, [\"modelValue\", \"class\"]), $setup.submitted && !$setup.userForm.firstName ? (_openBlock(), _createElementBlock(\"small\", _hoisted_35, \"First name is required.\")) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n      for: \"lastName\"\n    }, \"Last Name*\", -1)), _createVNode(_component_InputText, {\n      id: \"lastName\",\n      modelValue: $setup.userForm.lastName,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.userForm.lastName = $event),\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.userForm.lastName\n      })\n    }, null, 8, [\"modelValue\", \"class\"]), $setup.submitted && !$setup.userForm.lastName ? (_openBlock(), _createElementBlock(\"small\", _hoisted_38, \"Last name is required.\")) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_39, [_createElementVNode(\"div\", _hoisted_40, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n      for: \"email\"\n    }, \"Email*\", -1)), _createVNode(_component_InputText, {\n      id: \"email\",\n      modelValue: $setup.userForm.email,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.userForm.email = $event),\n      type: \"email\",\n      required: \"\",\n      disabled: $setup.dialogMode === 'edit',\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.userForm.email\n      })\n    }, null, 8, [\"modelValue\", \"disabled\", \"class\"]), $setup.submitted && !$setup.userForm.email ? (_openBlock(), _createElementBlock(\"small\", _hoisted_41, \"Email is required.\")) : $setup.emailError ? (_openBlock(), _createElementBlock(\"small\", _hoisted_42, _toDisplayString($setup.emailError), 1)) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"div\", _hoisted_44, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n      for: \"jobTitle\"\n    }, \"Job Title\", -1)), _createVNode(_component_InputText, {\n      id: \"jobTitle\",\n      modelValue: $setup.userForm.jobTitle,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.userForm.jobTitle = $event)\n    }, null, 8, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"div\", _hoisted_46, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n      for: \"phone\"\n    }, \"Phone\", -1)), _createVNode(_component_InputText, {\n      id: \"phone\",\n      modelValue: $setup.userForm.phone,\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.userForm.phone = $event)\n    }, null, 8, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, [_cache[33] || (_cache[33] = _createElementVNode(\"label\", {\n      for: \"department\"\n    }, \"Department\", -1)), _createVNode(_component_Dropdown, {\n      id: \"department\",\n      modelValue: $setup.userForm.departmentId,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.userForm.departmentId = $event),\n      options: $setup.departments,\n      optionLabel: \"name\",\n      optionValue: \"id\",\n      placeholder: \"Select Department\"\n    }, null, 8, [\"modelValue\", \"options\"])])]), _createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"div\", _hoisted_50, [_cache[34] || (_cache[34] = _createElementVNode(\"label\", {\n      for: \"manager\"\n    }, \"Manager\", -1)), _createVNode(_component_Dropdown, {\n      id: \"manager\",\n      modelValue: $setup.userForm.managerId,\n      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.userForm.managerId = $event),\n      options: $setup.managers,\n      optionLabel: \"name\",\n      optionValue: \"id\",\n      placeholder: \"Select Manager\"\n    }, null, 8, [\"modelValue\", \"options\"])])]), $setup.isAdmin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_51, [_createElementVNode(\"div\", _hoisted_52, [_cache[35] || (_cache[35] = _createElementVNode(\"label\", {\n      for: \"role\"\n    }, \"Role*\", -1)), _createVNode(_component_Dropdown, {\n      id: \"role\",\n      modelValue: $setup.userForm.role,\n      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.userForm.role = $event),\n      options: $setup.roleOptions,\n      optionLabel: \"label\",\n      optionValue: \"value\",\n      placeholder: \"Select Role\",\n      required: \"\",\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && !$setup.userForm.role\n      })\n    }, null, 8, [\"modelValue\", \"options\", \"class\"]), $setup.submitted && !$setup.userForm.role ? (_openBlock(), _createElementBlock(\"small\", _hoisted_53, \"Role is required.\")) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true), $setup.isAdmin && $setup.dialogMode === 'edit' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_54, [_createElementVNode(\"div\", _hoisted_55, [_cache[37] || (_cache[37] = _createElementVNode(\"label\", {\n      for: \"isActive\"\n    }, \"Status\", -1)), _createElementVNode(\"div\", _hoisted_56, [_createVNode(_component_Checkbox, {\n      id: \"isActive\",\n      modelValue: $setup.userForm.isActive,\n      \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.userForm.isActive = $event),\n      binary: true\n    }, null, 8, [\"modelValue\"]), _cache[36] || (_cache[36] = _createElementVNode(\"label\", {\n      for: \"isActive\"\n    }, \"Active user\", -1))])])])) : _createCommentVNode(\"\", true), $setup.dialogMode === 'create' || $setup.showPasswordFields ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 2\n    }, [_createElementVNode(\"div\", _hoisted_57, [_createVNode(_component_Divider, {\n      align: \"left\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_58, [_cache[38] || (_cache[38] = _createElementVNode(\"i\", {\n        class: \"pi pi-lock mr-2\"\n      }, null, -1)), _createElementVNode(\"b\", null, _toDisplayString($setup.dialogMode === 'create' ? 'Set Password' : 'Change Password'), 1)])]),\n      _: 1\n    })]), _createElementVNode(\"div\", _hoisted_59, [_createElementVNode(\"div\", _hoisted_60, [_createElementVNode(\"label\", _hoisted_61, \"Password\" + _toDisplayString($setup.dialogMode === 'create' ? '*' : ''), 1), _createVNode(_component_Password, {\n      id: \"password\",\n      modelValue: $setup.userForm.password,\n      \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.userForm.password = $event),\n      toggleMask: \"\",\n      feedback: true,\n      required: $setup.dialogMode === 'create',\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && $setup.dialogMode === 'create' && !$setup.userForm.password\n      })\n    }, null, 8, [\"modelValue\", \"required\", \"class\"]), $setup.submitted && $setup.dialogMode === 'create' && !$setup.userForm.password ? (_openBlock(), _createElementBlock(\"small\", _hoisted_62, \"Password is required for new users.\")) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_63, [_createElementVNode(\"div\", _hoisted_64, [_createElementVNode(\"label\", _hoisted_65, \"Confirm Password\" + _toDisplayString($setup.dialogMode === 'create' ? '*' : ''), 1), _createVNode(_component_Password, {\n      id: \"confirmPassword\",\n      modelValue: $setup.userForm.confirmPassword,\n      \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.userForm.confirmPassword = $event),\n      toggleMask: \"\",\n      feedback: false,\n      required: $setup.dialogMode === 'create',\n      class: _normalizeClass({\n        'p-invalid': $setup.submitted && ($setup.dialogMode === 'create' && !$setup.userForm.confirmPassword || $setup.passwordMismatch)\n      })\n    }, null, 8, [\"modelValue\", \"required\", \"class\"]), $setup.submitted && $setup.dialogMode === 'create' && !$setup.userForm.confirmPassword ? (_openBlock(), _createElementBlock(\"small\", _hoisted_66, \"Please confirm the password.\")) : $setup.passwordMismatch ? (_openBlock(), _createElementBlock(\"small\", _hoisted_67, \"Passwords do not match.\")) : _createCommentVNode(\"\", true)])])], 64)) : _createCommentVNode(\"\", true), $setup.dialogMode === 'edit' && !$setup.showPasswordFields ? (_openBlock(), _createElementBlock(\"div\", _hoisted_68, [_createVNode(_component_Button, {\n      label: \"Change Password\",\n      icon: \"pi pi-lock\",\n      class: \"p-button-outlined p-button-secondary mt-2\",\n      type: \"button\",\n      onClick: _cache[15] || (_cache[15] = $event => $setup.showPasswordFields = true)\n    })])) : _createCommentVNode(\"\", true)])])]),\n    _: 1\n  }, 8, [\"visible\", \"header\"]), _createVNode(_component_Dialog, {\n    visible: $setup.userDetailsVisible,\n    \"onUpdate:visible\": _cache[18] || (_cache[18] = $event => $setup.userDetailsVisible = $event),\n    style: {\n      width: '650px'\n    },\n    header: $setup.selectedUser ? `${$setup.selectedUser.first_name} ${$setup.selectedUser.last_name}` : 'User Details',\n    modal: true,\n    class: \"user-details-dialog\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_Button, {\n      label: \"Close\",\n      icon: \"pi pi-times\",\n      class: \"p-button-text\",\n      onClick: _cache[17] || (_cache[17] = $event => $setup.userDetailsVisible = false)\n    }), $setup.canEditUser ? (_openBlock(), _createBlock(_component_Button, {\n      key: 0,\n      label: \"Edit\",\n      icon: \"pi pi-pencil\",\n      onClick: $setup.editFromDetails\n    }, null, 8, [\"onClick\"])) : _createCommentVNode(\"\", true)]),\n    default: _withCtx(() => [$setup.selectedUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_69, [_createElementVNode(\"div\", _hoisted_70, [_createVNode(_component_Avatar, {\n      image: $setup.selectedUser.profile_image,\n      size: \"xlarge\",\n      shape: \"circle\",\n      pt: {\n        image: {\n          style: {\n            objectFit: 'cover',\n            width: '120px',\n            height: '120px'\n          }\n        }\n      }\n    }, null, 8, [\"image\"]), _createElementVNode(\"div\", _hoisted_71, [_createElementVNode(\"h2\", _hoisted_72, _toDisplayString($setup.selectedUser.first_name) + \" \" + _toDisplayString($setup.selectedUser.last_name), 1), _createElementVNode(\"div\", _hoisted_73, _toDisplayString($setup.selectedUser.job_title || 'No title'), 1), _createElementVNode(\"div\", _hoisted_74, [_createVNode(_component_Tag, {\n      value: $setup.selectedUser.role,\n      severity: $setup.getRoleSeverity($setup.selectedUser.role)\n    }, null, 8, [\"value\", \"severity\"]), !$setup.selectedUser.is_active ? (_openBlock(), _createBlock(_component_Tag, {\n      key: 0,\n      value: \"Inactive\",\n      severity: \"danger\"\n    })) : _createCommentVNode(\"\", true)])])]), _createElementVNode(\"div\", _hoisted_75, [_createElementVNode(\"div\", _hoisted_76, [_cache[41] || (_cache[41] = _createElementVNode(\"h3\", null, \"Contact Information\", -1)), _createElementVNode(\"div\", _hoisted_77, [_createElementVNode(\"div\", _hoisted_78, [_cache[39] || (_cache[39] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Email\", -1)), _createElementVNode(\"div\", _hoisted_79, [_createElementVNode(\"a\", {\n      href: `mailto:${$setup.selectedUser.email}`\n    }, _toDisplayString($setup.selectedUser.email), 9, _hoisted_80)])]), $setup.selectedUser.phone ? (_openBlock(), _createElementBlock(\"div\", _hoisted_81, [_cache[40] || (_cache[40] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Phone\", -1)), _createElementVNode(\"div\", _hoisted_82, [_createElementVNode(\"a\", {\n      href: `tel:${$setup.selectedUser.phone}`\n    }, _toDisplayString($setup.selectedUser.phone), 9, _hoisted_83)])])) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_84, [_cache[44] || (_cache[44] = _createElementVNode(\"h3\", null, \"Organization\", -1)), _createElementVNode(\"div\", _hoisted_85, [$setup.selectedUser.department_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_86, [_cache[42] || (_cache[42] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Department\", -1)), _createElementVNode(\"div\", _hoisted_87, _toDisplayString($setup.selectedUser.department_name), 1)])) : _createCommentVNode(\"\", true), $setup.selectedUser.manager_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_88, [_cache[43] || (_cache[43] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Manager\", -1)), _createElementVNode(\"div\", _hoisted_89, _toDisplayString($setup.selectedUser.manager_name), 1)])) : _createCommentVNode(\"\", true)])]), $setup.directReports.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_90, [_cache[45] || (_cache[45] = _createElementVNode(\"h3\", null, \"Direct Reports\", -1)), _createElementVNode(\"div\", _hoisted_91, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.directReports, report => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: report.id,\n        class: \"direct-report-item p-ripple\",\n        onClick: $event => $setup.viewUser(report)\n      }, [_createVNode(_component_Avatar, {\n        image: report.profile_image,\n        size: \"small\",\n        shape: \"circle\",\n        pt: {\n          image: {\n            style: {\n              objectFit: 'cover',\n              width: '32px',\n              height: '32px'\n            }\n          }\n        }\n      }, null, 8, [\"image\"]), _createElementVNode(\"div\", _hoisted_93, [_createElementVNode(\"div\", _hoisted_94, _toDisplayString(report.first_name) + \" \" + _toDisplayString(report.last_name), 1), _createElementVNode(\"div\", _hoisted_95, _toDisplayString(report.job_title || 'No title'), 1)]), _createVNode(_component_Button, {\n        icon: \"pi pi-chevron-right\",\n        class: \"p-button-text p-button-rounded\"\n      }), _createVNode(_component_Ripple)], 8, _hoisted_92);\n    }), 128))])])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_96, [_cache[48] || (_cache[48] = _createElementVNode(\"h3\", null, \"Account\", -1)), _createElementVNode(\"div\", _hoisted_97, [_createElementVNode(\"div\", _hoisted_98, [_cache[46] || (_cache[46] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Last Login\", -1)), _createElementVNode(\"div\", _hoisted_99, _toDisplayString($setup.selectedUser.last_login ? $setup.formatDate($setup.selectedUser.last_login) : 'Never'), 1)]), _createElementVNode(\"div\", _hoisted_100, [_cache[47] || (_cache[47] = _createElementVNode(\"div\", {\n      class: \"info-label\"\n    }, \"Created\", -1)), _createElementVNode(\"div\", _hoisted_101, _toDisplayString($setup.formatDate($setup.selectedUser.created_at)), 1)])])])])])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  }, 8, [\"visible\", \"header\"]), _createVNode(_component_ConfirmDialog)]);\n}","map":{"version":3,"names":["class","key","for","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$setup","isAdmin","_createBlock","_component_Button","label","icon","onClick","_ctx","openNewUserAppDialog","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createVNode","_component_InputText","modelValue","filters","searchTerm","_cache","$event","placeholder","onInput","onFilterChange","_hoisted_9","_component_Dropdown","departmentId","options","departments","optionLabel","optionValue","onChange","_hoisted_10","role","roleOptions","_hoisted_11","_hoisted_12","isActive","_normalizeClass","toggleActiveFilter","isLoading","_hoisted_13","_component_ProgressSpinner","_hoisted_14","users","length","_hoisted_15","_hoisted_16","_Fragment","_renderList","user","id","is_active","viewUser","_hoisted_18","_component_Avatar","image","profile_image","size","shape","pt","_hoisted_19","_hoisted_20","_toDisplayString","first_name","last_name","_hoisted_21","job_title","_hoisted_22","_hoisted_23","email","department_name","_hoisted_24","phone","_hoisted_25","_hoisted_26","_component_Tag","value","severity","getRoleSeverity","_component_Ripple","_hoisted_17","_component_Paginator","rows","pagination","per_page","totalRecords","total","rowsPerPageOptions","onPage","onPageChange","template","_component_Dialog","visible","userDialogVisible","style","width","header","dialogMode","modal","footer","_withCtx","closeUserAppDialog","confirmDeleteUser","saveUser","loading","saving","default","_hoisted_27","_hoisted_28","_hoisted_29","userForm","profileImageUrl","_","_hoisted_30","_component_FileUpload","mode","name","accept","maxFileSize","chooseLabel","onSelect","onProfileImageSelect","onError","onProfileImageError","chooseicon","profileImageError","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","firstName","required","submitted","_hoisted_35","_hoisted_36","_hoisted_37","lastName","_hoisted_38","_hoisted_39","_hoisted_40","type","disabled","_hoisted_41","emailError","_hoisted_42","_hoisted_43","_hoisted_44","jobTitle","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","managerId","managers","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_component_Checkbox","binary","showPasswordFields","_hoisted_57","_component_Divider","align","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_component_Password","password","toggleMask","feedback","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","confirmPassword","passwordMismatch","_hoisted_66","_hoisted_67","_hoisted_68","userDetailsVisible","selectedUser","canEditUser","editFromDetails","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","href","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","manager_name","_hoisted_88","_hoisted_89","directReports","_hoisted_90","_hoisted_91","report","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_92","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","last_login","formatDate","_hoisted_100","_hoisted_101","created_at","_component_ConfirmDialog"],"sources":["/home/pi/projects/intranet/frontend/src/views/Users.vue"],"sourcesContent":["<template>\r\n  <div class=\"users-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Company Directory</h1>\r\n      <div class=\"page-actions\">\r\n        <Button \r\n          v-if=\"isAdmin\"\r\n          label=\"Add User\" \r\n          icon=\"pi pi-plus\" \r\n          @click=\"openNewUserAppDialog\"\r\n          class=\"p-button-primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- User filters -->\r\n    <div class=\"card\">\r\n      <div class=\"user-filters\">\r\n        <div class=\"grid\">\r\n          <div class=\"col-12 md:col-4\">\r\n            <span class=\"p-input-icon-left w-full\">\r\n              <i class=\"pi pi-search\" />\r\n              <InputText \r\n                v-model=\"filters.searchTerm\" \r\n                placeholder=\"Search users\" \r\n                class=\"w-full\"\r\n                @input=\"onFilterChange\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <div class=\"col-12 md:col-3\">\r\n            <Dropdown\r\n              v-model=\"filters.departmentId\"\r\n              :options=\"departments\"\r\n              optionLabel=\"name\"\r\n              optionValue=\"id\"\r\n              placeholder=\"All AppDepartments\"\r\n              class=\"w-full\"\r\n              @change=\"onFilterChange\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 md:col-3\">\r\n            <Dropdown\r\n              v-model=\"filters.role\"\r\n              :options=\"roleOptions\"\r\n              optionLabel=\"label\"\r\n              optionValue=\"value\"\r\n              placeholder=\"All Roles\"\r\n              class=\"w-full\"\r\n              @change=\"onFilterChange\"\r\n            />\r\n          </div>\r\n          <div class=\"col-12 md:col-2\">\r\n            <div class=\"p-inputgroup w-full\">\r\n              <span class=\"p-inputgroup-addon\">\r\n                <i class=\"pi pi-user\"></i>\r\n              </span>\r\n              <Button \r\n                :label=\"filters.isActive !== false ? 'Active Only' : 'All Users'\" \r\n                :class=\"{ 'p-button-success': filters.isActive !== false }\"\r\n                class=\"w-full\"\r\n                @click=\"toggleActiveFilter\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Loading spinner -->\r\n      <div v-if=\"isLoading\" class=\"loading-container\">\r\n        <ProgressSpinner />\r\n      </div>\r\n\r\n      <!-- User list - Card view -->\r\n      <div v-else class=\"user-list\">\r\n        <div v-if=\"users.length === 0\" class=\"empty-message\">\r\n          <i class=\"pi pi-users\"></i>\r\n          <p>No users found</p>\r\n        </div>\r\n        <div v-else class=\"grid\">\r\n          <div v-for=\"user in users\" :key=\"user.id\" class=\"col-12 md:col-6 lg:col-4 xl:col-3\">\r\n            <div \r\n              class=\"user-card p-ripple\" \r\n              :class=\"{ 'inactive-user': !user.is_active }\"\r\n              @click=\"viewUser(user)\"\r\n            >\r\n              <div class=\"user-card-header\">\r\n                <Avatar \r\n                  :image=\"user.profile_image\" \r\n                  size=\"large\" \r\n                  shape=\"circle\" \r\n                  :pt=\"{\r\n                    image: {\r\n                      style: { \r\n                        objectFit: 'cover',\r\n                        width: '64px',\r\n                        height: '64px'\r\n                      }\r\n                    }\r\n                  }\"\r\n                />\r\n                <div class=\"user-info\">\r\n                  <h3 class=\"user-name\">{{ user.first_name }} {{ user.last_name }}</h3>\r\n                  <div class=\"user-title\">{{ user.job_title || 'No title' }}</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"user-card-content\">\r\n                <div class=\"user-detail\">\r\n                  <i class=\"pi pi-envelope\"></i>\r\n                  <span>{{ user.email }}</span>\r\n                </div>\r\n                <div v-if=\"user.department_name\" class=\"user-detail\">\r\n                  <i class=\"pi pi-sitemap\"></i>\r\n                  <span>{{ user.department_name }}</span>\r\n                </div>\r\n                <div v-if=\"user.phone\" class=\"user-detail\">\r\n                  <i class=\"pi pi-phone\"></i>\r\n                  <span>{{ user.phone }}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"user-card-footer\">\r\n                <Tag \r\n                  :value=\"user.role\" \r\n                  :severity=\"getRoleSeverity(user.role)\" \r\n                />\r\n                <Tag \r\n                  v-if=\"!user.is_active\" \r\n                  value=\"Inactive\" \r\n                  severity=\"danger\" \r\n                />\r\n              </div>\r\n              <Ripple />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Pagination controls -->\r\n        <Paginator \r\n          v-if=\"users.length > 0\" \r\n          :rows=\"pagination.per_page\" \r\n          :totalRecords=\"pagination.total\" \r\n          :rowsPerPageOptions=\"[12, 24, 48]\" \r\n          @page=\"onPageChange($event)\"\r\n          template=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n          class=\"user-paginator\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- User Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"userDialogVisible\" \r\n      :style=\"{ width: '650px' }\" \r\n      :header=\"dialogMode === 'create' ? 'New User' : 'Edit User'\" \r\n      :modal=\"true\" \r\n      class=\"p-fluid user-dialog\"\r\n    >\r\n      <div class=\"user-form\">\r\n        <div class=\"profile-image-upload\">\r\n          <div class=\"profile-image-container\">\r\n            <Avatar \r\n              :image=\"userForm.profileImageUrl || null\" \r\n              size=\"xlarge\" \r\n              shape=\"circle\" \r\n              :pt=\"{\r\n                image: {\r\n                  style: { \r\n                    objectFit: 'cover',\r\n                    width: '100px',\r\n                    height: '100px'\r\n                  }\r\n                }\r\n              }\"\r\n            >\r\n              <template #icon>\r\n                <i class=\"pi pi-user\" style=\"font-size: 2rem\"></i>\r\n              </template>\r\n            </Avatar>\r\n            <div class=\"profile-upload-overlay\">\r\n              <FileUpload \r\n                mode=\"basic\" \r\n                name=\"profile\" \r\n                accept=\"image/*\" \r\n                :maxFileSize=\"1000000\" \r\n                chooseLabel=\"\"\r\n                class=\"p-button-rounded p-button-outlined p-button-sm profile-upload-button\"\r\n                @select=\"onProfileImageSelect\"\r\n                @error=\"onProfileImageError\"\r\n              >\r\n                <template #chooseicon>\r\n                  <i class=\"pi pi-camera\"></i>\r\n                </template>\r\n              </FileUpload>\r\n            </div>\r\n          </div>\r\n          <small v-if=\"profileImageError\" class=\"p-error\">{{ profileImageError }}</small>\r\n        </div>\r\n\r\n        <div class=\"grid\">\r\n          <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"firstName\">First Name*</label>\r\n              <InputText \r\n                id=\"firstName\" \r\n                v-model=\"userForm.firstName\" \r\n                required \r\n                :class=\"{ 'p-invalid': submitted && !userForm.firstName }\"\r\n              />\r\n              <small v-if=\"submitted && !userForm.firstName\" class=\"p-error\">First name is required.</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"lastName\">Last Name*</label>\r\n              <InputText \r\n                id=\"lastName\" \r\n                v-model=\"userForm.lastName\" \r\n                required \r\n                :class=\"{ 'p-invalid': submitted && !userForm.lastName }\"\r\n              />\r\n              <small v-if=\"submitted && !userForm.lastName\" class=\"p-error\">Last name is required.</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <div class=\"field\">\r\n              <label for=\"email\">Email*</label>\r\n              <InputText \r\n                id=\"email\" \r\n                v-model=\"userForm.email\" \r\n                type=\"email\" \r\n                required \r\n                :disabled=\"dialogMode === 'edit'\"\r\n                :class=\"{ 'p-invalid': submitted && !userForm.email }\"\r\n              />\r\n              <small v-if=\"submitted && !userForm.email\" class=\"p-error\">Email is required.</small>\r\n              <small v-else-if=\"emailError\" class=\"p-error\">{{ emailError }}</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"jobTitle\">Job Title</label>\r\n              <InputText id=\"jobTitle\" v-model=\"userForm.jobTitle\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"phone\">Phone</label>\r\n              <InputText id=\"phone\" v-model=\"userForm.phone\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"department\">Department</label>\r\n              <Dropdown \r\n                id=\"department\" \r\n                v-model=\"userForm.departmentId\" \r\n                :options=\"departments\" \r\n                optionLabel=\"name\" \r\n                optionValue=\"id\" \r\n                placeholder=\"Select Department\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"manager\">Manager</label>\r\n              <Dropdown \r\n                id=\"manager\" \r\n                v-model=\"userForm.managerId\" \r\n                :options=\"managers\" \r\n                optionLabel=\"name\" \r\n                optionValue=\"id\" \r\n                placeholder=\"Select Manager\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div v-if=\"isAdmin\" class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"role\">Role*</label>\r\n              <Dropdown \r\n                id=\"role\" \r\n                v-model=\"userForm.role\" \r\n                :options=\"roleOptions\" \r\n                optionLabel=\"label\" \r\n                optionValue=\"value\" \r\n                placeholder=\"Select Role\" \r\n                required\r\n                :class=\"{ 'p-invalid': submitted && !userForm.role }\"\r\n              />\r\n              <small v-if=\"submitted && !userForm.role\" class=\"p-error\">Role is required.</small>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"isAdmin && dialogMode === 'edit'\" class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n              <label for=\"isActive\">Status</label>\r\n              <div class=\"field-checkbox\">\r\n                <Checkbox id=\"isActive\" v-model=\"userForm.isActive\" :binary=\"true\" />\r\n                <label for=\"isActive\">Active user</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Password fields (only show for new users or if changing password) -->\r\n          <template v-if=\"dialogMode === 'create' || showPasswordFields\">\r\n            <div class=\"col-12\">\r\n              <Divider align=\"left\">\r\n                <div class=\"inline-flex align-items-center\">\r\n                  <i class=\"pi pi-lock mr-2\"></i>\r\n                  <b>{{ dialogMode === 'create' ? 'Set Password' : 'Change Password' }}</b>\r\n                </div>\r\n              </Divider>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n              <div class=\"field\">\r\n                <label for=\"password\">Password{{ dialogMode === 'create' ? '*' : '' }}</label>\r\n                <Password \r\n                  id=\"password\" \r\n                  v-model=\"userForm.password\" \r\n                  toggleMask \r\n                  :feedback=\"true\"\r\n                  :required=\"dialogMode === 'create'\"\r\n                  :class=\"{ 'p-invalid': submitted && dialogMode === 'create' && !userForm.password }\"\r\n                />\r\n                <small v-if=\"submitted && dialogMode === 'create' && !userForm.password\" class=\"p-error\">Password is required for new users.</small>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n              <div class=\"field\">\r\n                <label for=\"confirmPassword\">Confirm Password{{ dialogMode === 'create' ? '*' : '' }}</label>\r\n                <Password \r\n                  id=\"confirmPassword\" \r\n                  v-model=\"userForm.confirmPassword\" \r\n                  toggleMask \r\n                  :feedback=\"false\"\r\n                  :required=\"dialogMode === 'create'\"\r\n                  :class=\"{ 'p-invalid': submitted && ((dialogMode === 'create' && !userForm.confirmPassword) || passwordMismatch) }\"\r\n                />\r\n                <small v-if=\"submitted && dialogMode === 'create' && !userForm.confirmPassword\" class=\"p-error\">Please confirm the password.</small>\r\n                <small v-else-if=\"passwordMismatch\" class=\"p-error\">Passwords do not match.</small>\r\n              </div>\r\n            </div>\r\n          </template>\r\n\r\n          <!-- Button to show/hide password fields when editing -->\r\n          <div v-if=\"dialogMode === 'edit' && !showPasswordFields\" class=\"col-12\">\r\n            <Button \r\n              label=\"Change Password\" \r\n              icon=\"pi pi-lock\" \r\n              class=\"p-button-outlined p-button-secondary mt-2\" \r\n              type=\"button\"\r\n              @click=\"showPasswordFields = true\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <Button \r\n          label=\"Cancel\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"closeUserAppDialog\" \r\n        />\r\n        <Button \r\n          v-if=\"dialogMode === 'edit' && isAdmin\" \r\n          label=\"Delete\" \r\n          icon=\"pi pi-trash\" \r\n          class=\"p-button-danger mr-2\" \r\n          @click=\"confirmDeleteUser\" \r\n        />\r\n        <Button \r\n          label=\"Save\" \r\n          icon=\"pi pi-check\" \r\n          @click=\"saveUser\" \r\n          :loading=\"saving\"\r\n        />\r\n      </template>\r\n    </Dialog>\r\n\r\n    <!-- User Details Dialog -->\r\n    <Dialog \r\n      v-model:visible=\"userDetailsVisible\" \r\n      :style=\"{ width: '650px' }\" \r\n      :header=\"selectedUser ? `${selectedUser.first_name} ${selectedUser.last_name}` : 'User Details'\" \r\n      :modal=\"true\"\r\n      class=\"user-details-dialog\"\r\n    >\r\n      <div v-if=\"selectedUser\" class=\"user-details\">\r\n        <div class=\"user-details-header\">\r\n          <Avatar \r\n            :image=\"selectedUser.profile_image\" \r\n            size=\"xlarge\" \r\n            shape=\"circle\" \r\n            :pt=\"{\r\n              image: {\r\n                style: { \r\n                  objectFit: 'cover',\r\n                  width: '120px',\r\n                  height: '120px'\r\n                }\r\n              }\r\n            }\"\r\n          />\r\n          <div class=\"user-header-info\">\r\n            <h2 class=\"user-full-name\">{{ selectedUser.first_name }} {{ selectedUser.last_name }}</h2>\r\n            <div class=\"user-job-title\">{{ selectedUser.job_title || 'No title' }}</div>\r\n            <div class=\"user-tags\">\r\n              <Tag \r\n                :value=\"selectedUser.role\" \r\n                :severity=\"getRoleSeverity(selectedUser.role)\" \r\n              />\r\n              <Tag \r\n                v-if=\"!selectedUser.is_active\" \r\n                value=\"Inactive\" \r\n                severity=\"danger\" \r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"user-details-content\">\r\n          <div class=\"user-info-section\">\r\n            <h3>Contact Information</h3>\r\n            <div class=\"user-info-grid\">\r\n              <div class=\"info-group\">\r\n                <div class=\"info-label\">Email</div>\r\n                <div class=\"info-value\">\r\n                  <a :href=\"`mailto:${selectedUser.email}`\">{{ selectedUser.email }}</a>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"selectedUser.phone\" class=\"info-group\">\r\n                <div class=\"info-label\">Phone</div>\r\n                <div class=\"info-value\">\r\n                  <a :href=\"`tel:${selectedUser.phone}`\">{{ selectedUser.phone }}</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"user-info-section\">\r\n            <h3>Organization</h3>\r\n            <div class=\"user-info-grid\">\r\n              <div v-if=\"selectedUser.department_name\" class=\"info-group\">\r\n                <div class=\"info-label\">Department</div>\r\n                <div class=\"info-value\">{{ selectedUser.department_name }}</div>\r\n              </div>\r\n              <div v-if=\"selectedUser.manager_name\" class=\"info-group\">\r\n                <div class=\"info-label\">Manager</div>\r\n                <div class=\"info-value\">{{ selectedUser.manager_name }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Direct Reports section (if the user is a manager) -->\r\n          <div v-if=\"directReports.length > 0\" class=\"user-info-section\">\r\n            <h3>Direct Reports</h3>\r\n            <div class=\"direct-reports-list\">\r\n              <div \r\n                v-for=\"report in directReports\" \r\n                :key=\"report.id\" \r\n                class=\"direct-report-item p-ripple\"\r\n                @click=\"viewUser(report)\"\r\n              >\r\n                <Avatar \r\n                  :image=\"report.profile_image\" \r\n                  size=\"small\" \r\n                  shape=\"circle\" \r\n                  :pt=\"{\r\n                    image: {\r\n                      style: { \r\n                        objectFit: 'cover',\r\n                        width: '32px',\r\n                        height: '32px'\r\n                      }\r\n                    }\r\n                  }\"\r\n                />\r\n                <div class=\"report-info\">\r\n                  <div class=\"report-name\">{{ report.first_name }} {{ report.last_name }}</div>\r\n                  <div class=\"report-title\">{{ report.job_title || 'No title' }}</div>\r\n                </div>\r\n                <Button \r\n                  icon=\"pi pi-chevron-right\" \r\n                  class=\"p-button-text p-button-rounded\" \r\n                />\r\n                <Ripple />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Account section -->\r\n          <div class=\"user-info-section\">\r\n            <h3>Account</h3>\r\n            <div class=\"user-info-grid\">\r\n              <div class=\"info-group\">\r\n                <div class=\"info-label\">Last Login</div>\r\n                <div class=\"info-value\">\r\n                  {{ selectedUser.last_login ? formatDate(selectedUser.last_login) : 'Never' }}\r\n                </div>\r\n              </div>\r\n              <div class=\"info-group\">\r\n                <div class=\"info-label\">Created</div>\r\n                <div class=\"info-value\">{{ formatDate(selectedUser.created_at) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <Button \r\n          label=\"Close\" \r\n          icon=\"pi pi-times\" \r\n          class=\"p-button-text\" \r\n          @click=\"userDetailsVisible = false\" \r\n        />\r\n        <Button \r\n          v-if=\"canEditUser\" \r\n          label=\"Edit\" \r\n          icon=\"pi pi-pencil\" \r\n          @click=\"editFromDetails\" \r\n        />\r\n      </template>\r\n    </Dialog>\r\n\r\n    <!-- Confirm Dialog -->\r\n    <ConfirmDialog />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { useConfirm } from 'primevue/useconfirm';\r\nimport { useToast } from 'primevue/usetoast';\r\n\r\n// PrimeVue components\r\nimport Button from 'primevue/button';\r\nimport InputText from 'primevue/inputtext';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport Avatar from 'primevue/avatar';\r\nimport Tag from 'primevue/tag';\r\nimport ProgressSpinner from 'primevue/progressspinner';\r\nimport Dialog from 'primevue/dialog';\r\nimport Checkbox from 'primevue/checkbox';\r\nimport Password from 'primevue/password';\r\nimport Divider from 'primevue/divider';\r\nimport FileUpload from 'primevue/fileupload';\r\nimport Paginator from 'primevue/paginator';\r\nimport ConfirmDialog from 'primevue/confirmdialog';\r\nimport Ripple from 'primevue/ripple';\r\n\r\nexport default {\r\n  name: 'UsersView',\r\n  components: {\r\n    Button,\r\n    InputText,\r\n    Dropdown,\r\n    Avatar,\r\n    Tag,\r\n    ProgressSpinner,\r\n    Dialog,\r\n    Checkbox,\r\n    Password,\r\n    Divider,\r\n    FileUpload,\r\n    Paginator,\r\n    ConfirmDialog,\r\n    Ripple\r\n  },\r\n  directives: {\r\n    ripple: Ripple\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n//    const router = useRouter();\r\n    const confirm = useConfirm();\r\n    const toast = useToast();\r\n\r\n    // State\r\n    const userDialogVisible = ref(false);\r\n    const userDetailsVisible = ref(false);\r\n    const dialogMode = ref('create');\r\n    const saving = ref(false);\r\n    const submitted = ref(false);\r\n    const showPasswordFields = ref(false);\r\n    const passwordMismatch = ref(false);\r\n    const emailError = ref('');\r\n    const profileImageError = ref('');\r\n    const selectedProfileImage = ref(null);\r\n\r\n    // Form state for user\r\n    const userForm = reactive({\r\n      id: null,\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      jobTitle: '',\r\n      phone: '',\r\n      departmentId: null,\r\n      managerId: null,\r\n      role: '',\r\n      isActive: true,\r\n      password: '',\r\n      confirmPassword: '',\r\n      profileImageUrl: null\r\n    });\r\n\r\n    // Options for roles filter\r\n    const roleOptions = ref([\r\n      { label: 'All Roles', value: '' },\r\n      { label: 'Admin', value: 'admin' },\r\n      { label: 'Manager', value: 'manager' },\r\n      { label: 'Employee', value: 'employee' }\r\n    ]);\r\n\r\n    // Options for departments (should come from API in real app)\r\n    const departments = ref([\r\n      { id: '1', name: 'Finance' },\r\n      { id: '2', name: 'Human Resources' },\r\n      { id: '3', name: 'Marketing' },\r\n      { id: '4', name: 'Engineering' },\r\n      { id: '5', name: 'Operations' }\r\n    ]);\r\n\r\n    // List of managers for dropdown\r\n    const managers = ref([]);\r\n\r\n    // Computed properties\r\n    const users = computed(() => store.state.users.users);\r\n    const selectedUser = computed(() => store.state.users.currentUser);\r\n    const directReports = computed(() => store.state.users.directReports);\r\n    const isLoading = computed(() => store.state.users.isLoading);\r\n    const pagination = computed(() => store.state.users.pagination);\r\n    const filters = computed(() => store.state.users.filters);\r\n\r\n    // Check if current user is admin\r\n    const isAdmin = computed(() => {\r\n      return store.getters['auth/isAdmin'];\r\n    });\r\n\r\n    // Check if the user can be edited by current user\r\n    const canEditUser = computed(() => {\r\n      if (!selectedUser.value) return false;\r\n      \r\n      // Admin can edit any user\r\n      if (isAdmin.value) return true;\r\n      \r\n      // Users can edit their own profile\r\n      const currentUserId = store.getters['auth/currentUser']?.id;\r\n      return selectedUser.value.id === currentUserId;\r\n    });\r\n\r\n    // Format date\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '';\r\n      const date = new Date(dateString);\r\n      return new Intl.DateTimeFormat('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      }).format(date);\r\n    };\r\n\r\n    // Get severity class for role tag\r\n    const getRoleSeverity = (role) => {\r\n      switch (role) {\r\n        case 'admin': return 'danger';\r\n        case 'manager': return 'warning';\r\n        case 'employee': return 'info';\r\n        default: return 'secondary';\r\n      }\r\n    };\r\n\r\n    // Filter change handler\r\n    const onFilterChange = () => {\r\n      fetchUsers(1);\r\n    };\r\n\r\n    // Toggle active filter\r\n    const toggleActiveFilter = () => {\r\n      store.dispatch('users/setFilter', {\r\n        key: 'isActive',\r\n        value: filters.value.isActive !== false ? false : null\r\n      });\r\n      fetchUsers(1);\r\n    };\r\n\r\n    // Page change handler\r\n    const onPageChange = (event) => {\r\n      fetchUsers(event.page + 1, event.rows);\r\n    };\r\n\r\n    // Fetch users from API\r\n    const fetchUsers = async (page = 1, limit = pagination.value.per_page) => {\r\n      try {\r\n        await store.dispatch('users/fetchUsers', { page, limit });\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load users',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Fetch managers list for dropdown\r\n    const fetchManagers = async () => {\r\n      try {\r\n        const response = await store.dispatch('users/fetchUsers', {\r\n          limit: 100,\r\n          role: 'manager'\r\n        });\r\n        \r\n        managers.value = response.data.map(user => ({\r\n          id: user.id,\r\n          name: `${user.first_name} ${user.last_name}`\r\n        }));\r\n        \r\n        // Add admins as potential managers too\r\n        const adminResponse = await store.dispatch('users/fetchUsers', {\r\n          limit: 100,\r\n          role: 'admin'\r\n        });\r\n        \r\n        adminResponse.data.forEach(user => {\r\n          managers.value.push({\r\n            id: user.id,\r\n            name: `${user.first_name} ${user.last_name}`\r\n          });\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching managers:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch direct reports for a user\r\n    const fetchDirectReports = async (userId) => {\r\n      try {\r\n        await store.dispatch('users/fetchDirectReports', userId);\r\n      } catch (error) {\r\n        console.error('Error fetching direct reports:', error);\r\n      }\r\n    };\r\n\r\n    // Open new user dialog\r\n    const openNewUserDialog = () => {\r\n      resetUserForm();\r\n      dialogMode.value = 'create';\r\n      userDialogVisible.value = true;\r\n    };\r\n\r\n    // Close user dialog\r\n    const closeUserDialog = () => {\r\n      userDialogVisible.value = false;\r\n      submitted.value = false;\r\n      passwordMismatch.value = false;\r\n      emailError.value = '';\r\n      profileImageError.value = '';\r\n      showPasswordFields.value = false;\r\n    };\r\n\r\n    // Reset user form\r\n    const resetUserForm = () => {\r\n      Object.assign(userForm, {\r\n        id: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        jobTitle: '',\r\n        phone: '',\r\n        departmentId: null,\r\n        managerId: null,\r\n        role: 'employee', // Default role\r\n        isActive: true,\r\n        password: '',\r\n        confirmPassword: '',\r\n        profileImageUrl: null\r\n      });\r\n    };\r\n\r\n    // Handle profile image selection\r\n    const onProfileImageSelect = (event) => {\r\n      profileImageError.value = '';\r\n      selectedProfileImage.value = event.files[0];\r\n      \r\n      // Generate a temporary URL for preview\r\n      userForm.profileImageUrl = URL.createObjectURL(selectedProfileImage.value);\r\n    };\r\n\r\n    // Handle profile image error\r\n    const onProfileImageError = (event) => {\r\n      profileImageError.value = event.message;\r\n    };\r\n\r\n    // View a user\r\n    const viewUser = async (userData) => {\r\n      try {\r\n        // Fetch fresh user data\r\n        await store.dispatch('users/fetchUser', userData.id);\r\n        \r\n        // Fetch direct reports\r\n        await fetchDirectReports(userData.id);\r\n        \r\n        // Show details dialog\r\n        userDetailsVisible.value = true;\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to load user details',\r\n          life: 3000\r\n        });\r\n      }\r\n    };\r\n\r\n    // Edit from details view\r\n    const editFromDetails = () => {\r\n      if (!selectedUser.value) return;\r\n      \r\n      // Close details dialog\r\n      userDetailsVisible.value = false;\r\n      \r\n      // Reset form\r\n      resetUserForm();\r\n      \r\n      // Copy data to form\r\n      userForm.id = selectedUser.value.id;\r\n      userForm.firstName = selectedUser.value.first_name;\r\n      userForm.lastName = selectedUser.value.last_name;\r\n      userForm.email = selectedUser.value.email;\r\n      userForm.jobTitle = selectedUser.value.job_title || '';\r\n      userForm.phone = selectedUser.value.phone || '';\r\n      userForm.departmentId = selectedUser.value.department_id;\r\n      userForm.managerId = selectedUser.value.manager_id;\r\n      userForm.role = selectedUser.value.role;\r\n      userForm.isActive = selectedUser.value.is_active;\r\n      userForm.profileImageUrl = selectedUser.value.profile_image;\r\n      \r\n      // Show edit dialog\r\n      dialogMode.value = 'edit';\r\n      userDialogVisible.value = true;\r\n    };\r\n\r\n    // Confirm delete user\r\n    const confirmDeleteUser = () => {\r\n      confirm.require({\r\n        message: 'Are you sure you want to delete this user?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => deleteUser(),\r\n        reject: () => {}\r\n      });\r\n    };\r\n\r\n    // Delete user\r\n    const deleteUser = async () => {\r\n      if (!userForm.id) return;\r\n      \r\n      try {\r\n        saving.value = true;\r\n        \r\n        // Delete user via API\r\n        await store.dispatch('users/deleteUser', userForm.id);\r\n        \r\n        // Close dialog\r\n        userDialogVisible.value = false;\r\n        \r\n        // Show success toast\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: 'User Deleted',\r\n          detail: 'User has been deleted successfully',\r\n          life: 3000\r\n        });\r\n        \r\n        // Refresh list\r\n        fetchUsers();\r\n      } catch (error) {\r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed to delete user',\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        saving.value = false;\r\n      }\r\n    };\r\n\r\n    // Save user (create or update)\r\n    const saveUser = async () => {\r\n      submitted.value = true;\r\n      passwordMismatch.value = false;\r\n      emailError.value = '';\r\n      \r\n      // Validate required fields\r\n      if (!userForm.firstName || !userForm.lastName || !userForm.email) {\r\n        return;\r\n      }\r\n      \r\n      // Validate email format\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(userForm.email)) {\r\n        emailError.value = 'Please enter a valid email address.';\r\n        return;\r\n      }\r\n      \r\n      // Validate role if admin\r\n      if (isAdmin.value && !userForm.role) {\r\n        return;\r\n      }\r\n      \r\n      // Validate password for new users\r\n      if (dialogMode.value === 'create' && !userForm.password) {\r\n        return;\r\n      }\r\n      \r\n      // Validate password confirmation\r\n      if ((dialogMode.value === 'create' || (dialogMode.value === 'edit' && userForm.password)) &&\r\n          userForm.password !== userForm.confirmPassword) {\r\n        passwordMismatch.value = true;\r\n        return;\r\n      }\r\n      \r\n      saving.value = true;\r\n      \r\n      try {\r\n        // Prepare user data\r\n        const userData = {\r\n          firstName: userForm.firstName,\r\n          lastName: userForm.lastName,\r\n          jobTitle: userForm.jobTitle,\r\n          phone: userForm.phone,\r\n          departmentId: userForm.departmentId,\r\n          managerId: userForm.managerId,\r\n          role: userForm.role,\r\n          isActive: userForm.isActive\r\n        };\r\n        \r\n        // Add email and password for new users\r\n        if (dialogMode.value === 'create') {\r\n          userData.email = userForm.email;\r\n          userData.password = userForm.password;\r\n        }\r\n        \r\n        // Add password if changing it\r\n        if (dialogMode.value === 'edit' && userForm.password) {\r\n          userData.password = userForm.password;\r\n        }\r\n        \r\n        let savedUser;\r\n        \r\n        if (dialogMode.value === 'create') {\r\n          // Create new user\r\n          savedUser = await store.dispatch('users/createUser', userData);\r\n        } else {\r\n          // Update existing user\r\n          savedUser = await store.dispatch('users/updateUser', {\r\n            id: userForm.id,\r\n            ...userData\r\n          });\r\n        }\r\n        \r\n        // Handle profile image upload if selected\r\n        if (selectedProfileImage.value && savedUser) {\r\n          await store.dispatch('users/uploadProfileImage', {\r\n            id: savedUser.id,\r\n            imageFile: selectedProfileImage.value\r\n          });\r\n        }\r\n        \r\n        // Close dialog\r\n        userDialogVisible.value = false;\r\n        submitted.value = false;\r\n        \r\n        // Show success message\r\n        toast.add({\r\n          severity: 'success',\r\n          summary: dialogMode.value === 'create' ? 'User Created' : 'User Updated',\r\n          detail: dialogMode.value === 'create' ? 'User has been created successfully' : 'User has been updated successfully',\r\n          life: 3000\r\n        });\r\n        \r\n        // Refresh user list\r\n        fetchUsers();\r\n      } catch (error) {\r\n        console.error('Error saving user:', error);\r\n        \r\n        const errorMsg = error.response?.data?.message || 'Failed to save user';\r\n        \r\n        toast.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: errorMsg,\r\n          life: 3000\r\n        });\r\n      } finally {\r\n        saving.value = false;\r\n      }\r\n    };\r\n\r\n    // Initialize component\r\n    onMounted(() => {\r\n      // Load initial data\r\n      fetchUsers();\r\n      fetchManagers();\r\n      \r\n      // Load departments (in a real app, this would come from an API)\r\n      store.dispatch('departments/fetchDepartments')\r\n        .then(response => {\r\n          if (response && response.data) {\r\n            departments.value = response.data.map(dept => ({\r\n              id: dept.id,\r\n              name: dept.name\r\n            }));\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error loading departments:', error);\r\n        });\r\n    });\r\n\r\n    return {\r\n      users,\r\n      selectedUser,\r\n      directReports,\r\n      isLoading,\r\n      userDialogVisible,\r\n      userDetailsVisible,\r\n      dialogMode,\r\n      saving,\r\n      submitted,\r\n      showPasswordFields,\r\n      passwordMismatch,\r\n      emailError,\r\n      profileImageError,\r\n      pagination,\r\n      filters,\r\n      userForm,\r\n      roleOptions,\r\n      departments,\r\n      managers,\r\n      isAdmin,\r\n      canEditUser,\r\n      \r\n      // Methods\r\n      formatDate,\r\n      getRoleSeverity,\r\n      onFilterChange,\r\n      toggleActiveFilter,\r\n      onPageChange,\r\n      openNewUserDialog,\r\n      closeUserDialog,\r\n      onProfileImageSelect,\r\n      onProfileImageError,\r\n      viewUser,\r\n      editFromDetails,\r\n      confirmDeleteUser,\r\n      deleteUser,\r\n      saveUser\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.users-container {\r\n  padding: 1rem;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.page-title {\r\n  margin: 0;\r\n  font-size: 1.75rem;\r\n  font-weight: 600;\r\n}\r\n\r\n/* User filters */\r\n.user-filters {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n/* Loading container */\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3rem;\r\n}\r\n\r\n/* Empty state */\r\n.empty-message {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n.empty-message i {\r\n  font-size: 2.5rem;\r\n  margin-bottom: 1rem;\r\n  opacity: 0.6;\r\n}\r\n\r\n/* User list styling */\r\n.user-list {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.user-card {\r\n  background-color: var(--surface-card);\r\n  border-radius: 0.5rem;\r\n  padding: 1.25rem;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);\r\n  margin-bottom: 1.5rem;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.user-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.user-card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.user-info {\r\n  margin-left: 1rem;\r\n}\r\n\r\n.user-name {\r\n  font-size: 1.125rem;\r\n  font-weight: 600;\r\n  margin: 0 0 0.25rem 0;\r\n}\r\n\r\n.user-title {\r\n  color: var(--text-color-secondary);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.user-card-content {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.user-detail {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.user-detail i {\r\n  margin-right: 0.5rem;\r\n  color: var(--primary-color);\r\n  width: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.user-card-footer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.inactive-user {\r\n  opacity: 0.7;\r\n}\r\n\r\n/* User paginator */\r\n.user-paginator {\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n/* Profile image upload */\r\n.profile-image-upload {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.profile-image-container {\r\n  position: relative;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.profile-upload-overlay {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n\r\n.profile-upload-button {\r\n  width: 2rem !important;\r\n  height: 2rem !important;\r\n}\r\n\r\n/* User details dialog */\r\n.user-details-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.user-header-info {\r\n  margin-left: 1.5rem;\r\n}\r\n\r\n.user-full-name {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin: 0 0 0.25rem 0;\r\n}\r\n\r\n.user-job-title {\r\n  color: var(--text-color-secondary);\r\n  font-size: 1rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.user-tags {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.user-info-section {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.user-info-section h3 {\r\n  font-size: 1.125rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.75rem;\r\n  color: var(--text-color);\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 1px solid var(--surface-border);\r\n}\r\n\r\n.user-info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.info-label {\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.info-value {\r\n  font-size: 1rem;\r\n  color: var(--text-color);\r\n}\r\n\r\n.info-value a {\r\n  color: var(--primary-color);\r\n  text-decoration: none;\r\n}\r\n\r\n.info-value a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Direct reports list */\r\n.direct-reports-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.direct-report-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.75rem;\r\n  background-color: var(--surface-ground);\r\n  border-radius: 0.375rem;\r\n  transition: background-color 0.2s;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.direct-report-item:hover {\r\n  background-color: var(--surface-hover);\r\n}\r\n\r\n.report-info {\r\n  margin-left: 0.75rem;\r\n  flex: 1;\r\n}\r\n\r\n.report-name {\r\n  font-weight: 500;\r\n}\r\n\r\n.report-title {\r\n  font-size: 0.875rem;\r\n  color: var(--text-color-secondary);\r\n}\r\n\r\n/* Responsive adaptations */\r\n@media screen and (max-width: 768px) {\r\n  .page-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .user-details-header {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n  \r\n  .user-header-info {\r\n    margin-left: 0;\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .user-info-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .user-tags {\r\n    justify-content: center;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}